(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"5UF+":function(l,n,u){"use strict";u.r(n);var e=u("CcnG"),s=function(){return function(){}}(),b=u("pMnS"),t=function(){return function(){}}(),o=e.qb({encapsulation:2,styles:[],data:{}});function a(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"h1",[["id","api"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["API"])),(l()(),e.sb(2,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["As mentioned in the :ref:"])),(l()(),e.sb(4,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["design"])),(l()(),e.Ib(-1,null,[" section, Lachesis communicates with the App through an "])),(l()(),e.sb(7,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["AppProxy"])),(l()(),e.Ib(-1,null,[" interface, which exposes three methods for Lachesis to call the App. Here we explain how to implement this API. "])),(l()(),e.sb(10,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.sb(11,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Note"])),(l()(),e.Ib(-1,null,[": The Snapshot and Restore methods of the API are still work in progress. They are necessary for the :ref:"])),(l()(),e.sb(14,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["fastsync"])),(l()(),e.Ib(-1,null,[" protocol which is not completely ready yet. It is safe to just implement stubs for these methods."])),(l()(),e.sb(17,0,null,null,1,"h2",[["id","inmem"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Inmem"])),(l()(),e.sb(19,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The "])),(l()(),e.sb(21,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["InmemProxy"])),(l()(),e.Ib(-1,null,[" uses native callback handlers to enable Lachesis to call methods on the App directly. Applications need only implement the "])),(l()(),e.sb(24,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ProxyHandler"])),(l()(),e.Ib(-1,null,[" interface and pass that to an "])),(l()(),e.sb(27,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["InmemProxy"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(30,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Here is a quick example of how to use Lachesis as an in-memory engine (in the same process as your handler):"])),(l()(),e.sb(32,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(33,0,null,null,1,"code",[["class","lang-go"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,['package main\n\nimport (\n    "github.com/andrecronje/lachesis/src/lachesis"\n    "github.com/andrecronje/lachesis/src/crypto"\n    "github.com/andrecronje/lachesis/src/poset"\n    "github.com/andrecronje/lachesis/src/proxy/inmem"\n)\n\n// Implements proxy.ProxyHandler interface\ntype Handler struct {\n    stateHash []byte\n}\n\n// Called when a new block is committed by Lachesis. This particular example \n// just computes the stateHash incrementaly with incoming blocks.\nfunc (h *Handler) CommitHandler(block poset.Block) (stateHash []byte, err error) {\n    hash := h.stateHash\n\n    for _, tx := range block.Transactions() {\n        hash = crypto.SimpleHashFromTwoHashes(hash, crypto.SHA256(tx))\n    }\n\n    h.stateHash = hash\n\n    return h.stateHash, nil\n}\n\n// Called when syncing with the network\nfunc (h *Handler) SnapshotHandler(blockIndex int) (snapshot []byte, err error) {\n    return []byte{}, nil\n}\n\n// Called when syncing with the network\nfunc (h *Handler) RestoreHandler(snapshot []byte) (stateHash []byte, err error) {\n    return []byte{}, nil\n}\n\nfunc NewHandler() *Handler {\n    return &Handler{}\n}\n\nfunc main() {\n\n    config := lachesis.NewDefaultConfig()\n\n    // To use lachesis as an internal engine we use InmemProxy.\n    proxy := inmem.NewInmemProxy(NewHandler(), config.Logger)\n\n    config.Proxy = proxy\n\n    // Create the engine with the provided config\n    engine := lachesis.NewLachesis(config)\n\n    // Initialize the engine\n    if err := engine.Init(); err != nil {\n        panic(err)\n    }\n\n    // Submit a transaction directly through the Proxy\n    go func() { proxy.SubmitTx([]byte("some content")) }()\n\n    // This is a blocking call\n    engine.Run()\n}\n'])),(l()(),e.sb(35,0,null,null,1,"h2",[["id","socket"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Socket"])),(l()(),e.sb(37,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The "])),(l()(),e.sb(39,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["SocketProxy"])),(l()(),e.Ib(-1,null,[" is simply a TCP server that accepts "])),(l()(),e.sb(42,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["SubmitTx"])),(l()(),e.Ib(-1,null,[" requests, and calls remote methods on the App through a JSON-RPC interface. The App is therefore expected to implement its own component to send out SubmitTx requests through TCP, and receive JSON-RPC messages from the remote Lachesis node."])),(l()(),e.sb(45,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The advantage of using a TCP interface is that it provides the freedom to implement the application in any programming language. The specification of the\nJSON-RPC interface is provided below, but here is an example of how to use our Go implementation, "])),(l()(),e.sb(47,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["SocketLachesisProxy"])),(l()(),e.Ib(-1,null,[", to connect to a remote Lachesis node."])),(l()(),e.sb(50,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Assuming there is a Lachesis node running with its proxy listening on "])),(l()(),e.sb(52,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["127.0.0.1:1338"])),(l()(),e.Ib(-1,null,[" and configured to speak to an App at "])),(l()(),e.sb(55,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["127.0.0.1:1339"])),(l()(),e.Ib(-1,null,["\n(these are the default values):"])),(l()(),e.sb(58,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(59,0,null,null,1,"code",[["class","lang-go"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,['package main\n\nimport (\n    "time"\n\n    "github.com/andrecronje/lachesis/src/crypto"\n    "github.com/andrecronje/lachesis/src/poset"\n    "github.com/andrecronje/lachesis/src/proxy/socket/lachesis"\n)\n\n// Implements proxy.ProxyHandler interface\ntype Handler struct {\n    stateHash []byte\n}\n\n// Called when a new block is coming. This particular example just computes \n// the stateHash incrementally with incoming blocks\nfunc (h *Handler) CommitHandler(block poset.Block) (stateHash []byte, err error) {\n    hash := h.stateHash\n\n    for _, tx := range block.Transactions() {\n        hash = crypto.SimpleHashFromTwoHashes(hash, crypto.SHA256(tx))\n    }\n\n    h.stateHash = hash\n\n    return h.stateHash, nil\n}\n\n// Called when syncing with the network\nfunc (h *Handler) SnapshotHandler(blockIndex int) (snapshot []byte, err error) {\n    return []byte{}, nil\n}\n\n// Called when syncing with the network\nfunc (h *Handler) RestoreHandler(snapshot []byte) (stateHash []byte, err error) {\n    return []byte{}, nil\n}\n\nfunc NewHandler() *Handler {\n    return &Handler{}\n}\n\nfunc main() {\n    // Connect to the lachesis proxy at :1338 and listen on :1339.\n    // The Handler ties back to the application state.\n    proxy, err := lachesis.NewSocketLachesisProxy("127.0.0.1:1338", "127.0.0.1:1339", NewHandler(), 1*time.Second, nil)\n\n    // Verify that it can listen\n    if err != nil {\n        panic(err)\n    }\n\n    // Verify that it can connect and submit a transaction\n    if err := proxy.SubmitTx([]byte("some content")); err != nil {\n        panic(err)\n    }\n\n    // Wait indefinitly\n    for {\n        time.Sleep(time.Second)\n    }\n}\n'])),(l()(),e.sb(61,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Example SubmitTx request (from App to Lachesis):"])),(l()(),e.sb(63,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(64,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,['request: {"method":"Lachesis.SubmitTx","params":["Y2xpZW50IDE6IGhlbGxv"],"id":0}\nresponse: {"id":0,"result":true,"error":null}\n'])),(l()(),e.sb(66,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Note that the Proxy API is "])),(l()(),e.sb(68,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["not"])),(l()(),e.Ib(-1,null,[" over HTTP; It is raw JSON over TCP. Here is an example of how to make a SubmitTx request manually: "])),(l()(),e.sb(71,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(72,0,null,null,1,"code",[["class","lang-bash"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,['printf "{\\"method\\":\\"Lachesis.SubmitTx\\",\\"params\\":[\\"Y2xpZW50IDE6IGhlbGxv\\"],\\"id\\":0}" | nc -v  172.77.5.1 1338\n'])),(l()(),e.sb(74,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Example CommitBlock request (from Lachesis to App):"])),(l()(),e.sb(76,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" request:"])),(l()(),e.sb(78,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(79,0,null,null,1,"code",[["class","lang-json"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,['{\n    "method": "State.CommitBlock",\n    "params": [\n        {\n        "Body": {\n            "Index": 0,\n            "RoundReceived": 7,\n            "StateHash": null,\n            "FrameHash": "gdwRCdwxoyLUyzzRK6N31rlJFBJu5By/vDk5gSQHJHQ=",\n            "Transactions": [\n            "Tm9kZTEgVHg5",\n            "Tm9kZTEgVHgx",\n            "Tm9kZTEgVHgy",\n            "Tm9kZTEgVHgz",\n            "Tm9kZTEgVHg0",\n            "Tm9kZTEgVHg1",\n            "Tm9kZTEgVHg2",\n            "Tm9kZTEgVHg3",\n            "Tm9kZTEgVHg4",\n            "Tm9kZTEgVHgxMA=="\n            ]\n        },\n        "Signatures": {}\n        }\n    ],\n    "id": 0\n}\n'])),(l()(),e.sb(81,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" response:"])),(l()(),e.sb(83,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(84,0,null,null,1,"code",[["class","lang-json"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,['{"id":0,"result":{"Hash":"6SKQataObI6oSY5n6mvf1swZR3T4Tek+C8yJmGijF00="},"error":null}\n'])),(l()(),e.sb(86,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,['The content of the request\'s "params" is the JSON representation of a Block with a RoundReceived of 7 and 10 transactions. The transactions themselves are base64 string encodings.'])),(l()(),e.sb(88,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The response's Hash value is the base64 representation of the application's State-hash resulting from processing the block's transaction sequentially."]))],null,null)}function i(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-api",[],null,null,null,a,o)),e.rb(1,49152,null,0,t,[],null,null)],null,null)}var I=e.ob("app-api",t,i,{},{},[]),r=function(){return function(){}}(),m=e.qb({encapsulation:2,styles:[],data:{}});function c(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(1,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Fantom:"])),(l()(),e.sb(3,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(4,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture - Finality"])),(l()(),e.sb(6,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Fantom is a set of modular architecture components that each function\nindividually and holistically as a new decentralized service."])),(l()(),e.sb(8,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We start from the most basic design and add complexity with each step.\nThis will illustrate the necessity of each component and its relation in\nthe ecosystem."])),(l()(),e.sb(10,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(11,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: State"])),(l()(),e.sb(13,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["At the core, is the state, described as an account ledger of addresses\nand balances."])),(l()(),e.sb(15,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(16,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Accounts"])),(l()(),e.sb(18,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An address is a public and private key pair. The public component of the\naccount is the address in the public account ledger included in the\nState."])),(l()(),e.sb(20,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(21,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: p2p"])),(l()(),e.sb(23,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data is propagated to all participating nodes via a gossip based p2p\nimplementation. Explained as having awareness of your nearest neighbors\nand telling them something that they don't know."])),(l()(),e.sb(25,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(26,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Transactions"])),(l()(),e.sb(28,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An address can sign a special type of payload, called a transaction, a\ntransaction specifies a value transfer from the signing party to the\ndestination party."])),(l()(),e.sb(30,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A transaction is propagated to all participating nodes via a gossip\nbased p2p implementation."])),(l()(),e.sb(32,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When a transaction is received the state will check that the signature\nis valid for the sending party, and that they do have the available\nbalances (in the state) for the value transfer."])),(l()(),e.sb(34,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["With the above, we can transfer value from "])),(l()(),e.sb(36,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(39,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and all nodes will\nagree on the current state."])),(l()(),e.sb(42,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(43,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Step 1"])),(l()(),e.sb(45,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["With the above, we have explained a value transfer system. The above\ncomponents will allow you to send value from your account to another\naccount and have it be cryptographically secure."])),(l()(),e.sb(47,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["What happens when "])),(l()(),e.sb(49,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" with a balance of 1, sends 1 to "])),(l()(),e.sb(52,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and 1 to "])),(l()(),e.sb(55,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[",\nwhich transaction do we choose?"])),(l()(),e.sb(58,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(59,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Consensus"])),(l()(),e.sb(61,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We need the nodes to agree which one to choose. Consensus, is a process\nwhereby the nodes can form agreement on a given outcome. In its most\nbasic implementation this is a vote, consider 10 nodes, 6 votes for the\ntransaction to "])),(l()(),e.sb(63,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and 4 vote for the transaction to "])),(l()(),e.sb(66,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[". We can discard\n"])),(l()(),e.sb(69,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[". What happens when the vote is 5 vs 5? At this point we need an\narbitrator, we could at random select a node, and that node has the\nfinal decision rights."])),(l()(),e.sb(72,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Instead of having this conflicting state, let\u2019s allow 1 transaction\nevery epoch (for example 10 minutes), so we need a method which can\nprove that roughly 10 minutes passed. We build a puzzle that we know\nbased on its difficulty, should take roughly 10 minutes to solve. To\nsolve the puzzle you have to guess the answer, if you successfully guess\nthe answer, you can submit the transaction. The other nodes can quickly\nvalidate that you guessed the answer correctly, and they all accept your\ntransaction."])),(l()(),e.sb(74,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node 1 could be guessing the puzzle with transaction "])),(l()(),e.sb(76,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and Node 2\ncould be guessing the puzzle with transaction "])),(l()(),e.sb(79,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[", the one that wins is\ndetermined by the node that solves the puzzle first."])),(l()(),e.sb(82,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(83,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Chain"])),(l()(),e.sb(85,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["What happens when both nodes guess the puzzle right at the same time and\nboth transactions are propagated? Or when the vote is 5 vs 5. This is\nconsidered a forked state. The system will continue. A new transaction\ncomes in and the voting or guessing begins again."])),(l()(),e.sb(87,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This round Node 1 wins the puzzle first and accepts the new transaction,\nthe longest chain is now transaction "])),(l()(),e.sb(89,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and the new transaction. When\nreceived by nodes that accepted transaction "])),(l()(),e.sb(92,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[', they see that more\n"work" (2 rounds of guessing) has been done on '])),(l()(),e.sb(95,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" vs "])),(l()(),e.sb(98,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" (only 1 round\nof guessing), so they discard "])),(l()(),e.sb(101,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" and use the "])),(l()(),e.sb(104,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" chain. This is the\nlongest chain principle. This also means that neither "])),(l()(),e.sb(107,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" nor "])),(l()(),e.sb(110,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" were\never finalized."])),(l()(),e.sb(113,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If a longer chain were to come along, all transactions could be\nreversed."])),(l()(),e.sb(115,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(116,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Blocks"])),(l()(),e.sb(118,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Can a system be functional that allows 1 transaction every 10 minutes?\nInstead, we look for a mechanism whereby we can include more than one\ntransaction, we pack these transactions into a group, we call this group\na block."])),(l()(),e.sb(120,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Now we have a blockchain."])),(l()(),e.sb(122,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(123,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Block Time & Size"])),(l()(),e.sb(125,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Ethereum has a block time of 13 seconds. Ethereum has a gas limit on\nblocks (maximum amount of transactions that can be fit into a block).\nBitcoin has a size limit (maximum amount of transaction bytes that can\nbe fit into a block."])),(l()(),e.sb(127,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["So why not simply increase the block size and decrease the block time?"])),(l()(),e.sb(129,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each time the block size is increased it takes longer to propagate\nthrough the network. The longer a block takes to propagate the higher\nthe increased likelihood of forks. This means more time spent\nre-ordering."])),(l()(),e.sb(131,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If you decrease the block time. You increase the likelihood of more\nblocks being created. Ethereum had to create the uncle principal for\nblocks, since the block time is so small. An uncle is a valid block that\nwas simply created at the same time, instead of discarding it, Ethereum\nallows a block creator to include uncles it is aware of and rewards the\nminer accordingly"])),(l()(),e.sb(133,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["As we can see, decreasing block times or increasing block sizes have\nsystem repercussions that must be addressed."])),(l()(),e.sb(135,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(136,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Finality"])),(l()(),e.sb(138,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Finality is the concept of how long it takes for a transaction to be\nfinalized. In Proof-of-Work solutions a transaction is never truly\nfinalized, but you can assume with a high degree of certainty that in\nBitcoin after 3 blocks have been added on top of the block containing\nyour transaction, that that transaction is final. So finality in Bitcoin\nis roughly 30-40 minutes (10 minutes per block)"])),(l()(),e.sb(140,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(141,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Step 2"])),(l()(),e.sb(143,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We have already identified a few constraints. We can list them as\nfollows;"])),(l()(),e.sb(145,0,null,null,6,"ul",[],null,null,null,null,null)),(l()(),e.sb(146,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(147,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Synchronous transaction processing"])),(l()(),e.sb(149,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(150,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Slow & no finality"])),(l()(),e.sb(152,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(153,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: DAG"])),(l()(),e.sb(155,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A Directed Acyclic Graph allows for blockchain-like patterns that allow\nfor multiple branches. A blockchain can be seen as a single branch\nsystem, trimming branches as new blocks are added onto longer chains.\nThis does not allow for asynchronous processing of events."])),(l()(),e.sb(157,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Another kind of data structure exists that does allow for asynchronous\nevent based processing, called the Directed Acyclic Graph. The term\nitself has multiple implementations though, so let\u2019s first discuss a\nfew."])),(l()(),e.sb(159,0,null,null,18,"ul",[],null,null,null,null,null)),(l()(),e.sb(160,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(161,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Nano, is an account based DAG (Technically incorrect, it is a block"])),(l()(),e.sb(163,0,null,null,2,"blockquote",[],null,null,null,null,null)),(l()(),e.sb(164,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["lattice) using Proof of Stake."])),(l()(),e.sb(166,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(167,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Iota, is a transaction based DAG (Tangle) using Proof of Work."])),(l()(),e.sb(169,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(170,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["HashGraph, is a gossip based DAG using HashGraph."])),(l()(),e.sb(172,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(173,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Fantom, is a gossip based blockchain DAG."])),(l()(),e.sb(175,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(176,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Avalanche, is a UTXO based DAG."])),(l()(),e.sb(178,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The problem here is visualization. That which is complex to understand\nis complex to adopt. A blockchain is easy to visualize. It\u2019s a linked\nlist. We take transactions, put them in a block, the block references\nthe previous block. It\u2019s a concept we know and visualize from childhood.\nStacking blocks on top of each other."])),(l()(),e.sb(180,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Now visualize a DAG? Even if you know what one looks like, now think\nabout each one described in the examples above?"])),(l()(),e.sb(182,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Blockchain as a word has become interesting. It describes both a\nstructure, and a category. DAGs can also be blockchains (category) even\nif they can\u2019t be blockchains (structure)."])),(l()(),e.sb(184,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["So given that so many different implementations exist. How do we\ndemystify a DAG? Do we even have to? Why do we even want to use a DAG?"])),(l()(),e.sb(186,0,null,null,6,"ul",[],null,null,null,null,null)),(l()(),e.sb(187,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(188,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A block, is singular (synchronous)."])),(l()(),e.sb(190,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(191,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A DAG, is plural (asynchronous)."])),(l()(),e.sb(193,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Does a DAG given the same constraints as a blockchain perform better?\nFinality can only occur once consensus has been reached. Even in a DAG\nthis needs 2n/3 consensus. Could we have packed the same amount of\ntransactions into the block as it took to reach 2n/3 consensus? From t=0\ntill 2n/3 consensus, how many transactions could we confirm vs how many\ncould we pack in a block?"])),(l()(),e.sb(195,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["DAGs will often talk about faster confirmation times. But it excludes\nfinality from this conversation. It will mention asynchronous\nprocessing, but not discuss 2n/3 consensus."])),(l()(),e.sb(197,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If one node accepts a transaction in a blockchain, then that transaction\nhas been asynchronously processed and it has incredibly fast\nconfirmation times. But it has not reached consensus, or fake finality\n(fake, since no PoW based blockchain has true finality)."])),(l()(),e.sb(199,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Given that a transaction in a DAG is only finalized after 2n/3 and thus\nonly confirmed after 2n/3, is it really faster?"])),(l()(),e.sb(201,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Then we start with the infinite scalability theorem. The more\nparticipants in a network the greater the scalability. This ignores 2n/3\nand network propagation."])),(l()(),e.sb(203,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["So which is truly better? Blockchain, block lattice, HashGraph,\nAvalanche? Does each one have a specific use case? Is that like asking\nwhich is better? MySQL, MariaDB, PostgreSQL, MongoDB?"])),(l()(),e.sb(205,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Consider a DAG with 2n/3 confirmation time. Let us consider finality / n"])),(l()(),e.sb(207,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(208,0,null,null,0,"img",[["src","./docs/architecture/image1.png"],["style","width:6.27083in;height:3.55556in"]],null,null,null,null,null)),(l()(),e.sb(209,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Transactions Per Second (To Finality) vs Node Participation"])),(l()(),e.sb(211,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(212,0,null,null,0,"img",[["src","./docs/architecture/image3.png"],["style","width:6.27083in;height:3.54167in"]],null,null,null,null,null)),(l()(),e.sb(213,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Asynchronous Transactions Per Second"])),(l()(),e.sb(215,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(216,0,null,null,0,"img",[["src","./docs/architecture/image17.png"],["style","width:6.27083in;height:3.54167in"]],null,null,null,null,null)),(l()(),e.sb(217,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality (ms) vs Node Participation (Appendix A for supporting\ndata)"])),(l()(),e.sb(219,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We make the following assumptions;"])),(l()(),e.sb(221,0,null,null,9,"ul",[],null,null,null,null,null)),(l()(),e.sb(222,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(223,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["100 transactions created every block"])),(l()(),e.sb(225,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(226,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TTF O(n log n)"])),(l()(),e.sb(228,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(229,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1 second block times"])),(l()(),e.sb(231,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["DAG: Each node can produce 1 block every second, TTF increases 0(n log\nn) with participation"])),(l()(),e.sb(233,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Blockchain: Each node can produce 1 block every second, TTF[1] remains\nfixed"])),(l()(),e.sb(235,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["At 1 node"])),(l()(),e.sb(237,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["DAG: 100 @ 1s TTF"])),(l()(),e.sb(239,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Blockchain: 100 @ 1s TTF"])),(l()(),e.sb(241,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2 nodes"])),(l()(),e.sb(243,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["DAG: 200 @ 2s TTF"])),(l()(),e.sb(245,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Blockchain: 100 @ 1s TTF"])),(l()(),e.sb(247,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["8 nodes"])),(l()(),e.sb(249,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["DAG: 800 @ 8s TTF"])),(l()(),e.sb(251,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Blockchain: 100 @ 1s TTF"])),(l()(),e.sb(253,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We can see where this is going."])),(l()(),e.sb(255,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(256,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Step 3"])),(l()(),e.sb(258,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["With the above we have confirmed that asynchronous processing is\npossible, but transactional throughput is limited by finality. Next we\nexplore how finality is achieved in DAG based systems."])),(l()(),e.sb(260,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(261,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: 2n/3 Asynchronous Byzantine Fault Tolerant Consensus\nAlgorithms"])),(l()(),e.sb(263,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Asynchronous Byzantine Fault Tolerant Consensus Algorithms are primarily\ngossip based algorithms. They define the concept that gossiping about\ngossip allows us to achieve consensus."])),(l()(),e.sb(265,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We have 3 nodes A, B, and C. A receives a message and it decides it is\ngoing to tell B. When B receives this message it decides it will tell C\nabout the message, and that A told it the message."])),(l()(),e.sb(267,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We can observe a few interesting results."])),(l()(),e.sb(269,0,null,null,12,"ol",[],null,null,null,null,null)),(l()(),e.sb(270,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(271,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["With just 2 message synchronizations all 3 participants are aware of"])),(l()(),e.sb(273,0,null,null,2,"blockquote",[],null,null,null,null,null)),(l()(),e.sb(274,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["the message"])),(l()(),e.sb(276,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(277,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Because C knows that A told the message to B, it has a rough order"])),(l()(),e.sb(279,0,null,null,2,"blockquote",[],null,null,null,null,null)),(l()(),e.sb(280,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["of when the message was received. Before C and before B"])),(l()(),e.sb(282,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["All we want to achieve is ordering. What the message was doesn\u2019t matter,\nwe simply want to know when it was received. So let\u2019s add another\nmessage."])),(l()(),e.sb(284,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A receives a message (1) and tells B. C receives a message (2) and tells\nA. B having received the message (1) from A tells C. A having received\nthe message (2) from C tells B. Let\u2019s break this down."])),(l()(),e.sb(286,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A -> B"])),(l()(),e.sb(288,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C -> A"])),(l()(),e.sb(290,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B -> C"])),(l()(),e.sb(292,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A -> B"])),(l()(),e.sb(294,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["At this point what does A know? It knows it received message (1) before\nmessage (2)"])),(l()(),e.sb(296,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B knows it received message (1) before message (2)"])),(l()(),e.sb(298,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C knows that A received message (1) before C received message (2)"])),(l()(),e.sb(300,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["So because we gossiped about gossip, we can establish an order of\nmessages received."])),(l()(),e.sb(302,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The above gives us ordering, but we also want finalization. Some point\nin time we can assume the message is true because 2/3n of the network\nparticipants are aware of the message. To facilitate this we establish\nthe concept of rounds. A round is complete when 2/3n of the participants\nare aware of a message."])),(l()(),e.sb(304,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["How do we know that 2/3n of participants are aware of a message? We\ncould simply ask each participant. But this has message overhead, so\ninstead, we can use our gossip about gossip to establish if a node is\naware of the message or not."])),(l()(),e.sb(306,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the above example, A asks the question, do I know about message(1)?\nYes, A then asks, does B know about message (1)? Yes, A then asks, does\nC know about message (1)? Yes. So A can \u201cguess\u201d that both B and C will\nvote for message (1), because both of them can \u201csee\u201d it."])),(l()(),e.sb(308,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We do the same for B, do I know about message (1)? Yes, does A know\nabout message (1)? Yes, does C know about message (1)? Yes."])),(l()(),e.sb(310,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lastly, we do the same for C, do I know about message (1)? Yes, does A\nknow about message (1)? Yes, does B know about message (1)? Yes."])),(l()(),e.sb(312,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["By virtue of virtual voting, we could decide (thanks to the gossip about\ngossip structure) the ordering and if 2/3n of participants are aware of\nthe message."])),(l()(),e.sb(314,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(315,0,null,null,0,"img",[["src","./docs/architecture/image14.png"],["style","width:6.27083in;height:3.63889in"]],null,null,null,null,null)),(l()(),e.sb(316,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Above illustration shows 3 rounds, G, G+1, and G+2"])),(l()(),e.sb(318,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(319,0,null,null,0,"img",[["src","./docs/architecture/image9.png"],["style","width:6.27083in;height:3.63889in"]],null,null,null,null,null)),(l()(),e.sb(320,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In round G+1, blue can \u201csee\u201d round G blue, green, yellow, red, and\npurple."])),(l()(),e.sb(322,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(323,0,null,null,0,"img",[["src","./docs/architecture/image6.png"],["style","width:6.27083in;height:3.63889in"]],null,null,null,null,null)),(l()(),e.sb(324,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In round G+1, green can \u201csee\u201d round G blue, green, yellow, red, and\npurple."])),(l()(),e.sb(326,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(327,0,null,null,0,"img",[["src","./docs/architecture/image8.png"],["style","width:6.27083in;height:3.63889in"]],null,null,null,null,null)),(l()(),e.sb(328,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In round G+1, yellow can \u201csee\u201d round G blue, green, yellow, red, and\npurple."])),(l()(),e.sb(330,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(331,0,null,null,0,"img",[["src","./docs/architecture/image4.png"],["style","width:6.27083in;height:3.63889in"]],null,null,null,null,null)),(l()(),e.sb(332,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In round G+1, red can \u201csee\u201d round G blue, green, yellow, red, and\npurple."])),(l()(),e.sb(334,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(335,0,null,null,0,"img",[["src","./docs/architecture/image12.png"],["style","width:6.27083in;height:3.63889in"]],null,null,null,null,null)),(l()(),e.sb(336,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In round G+1, purple can \u201csee\u201d round G blue, green, yellow, red, and\nblue."])),(l()(),e.sb(338,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the above context, in G+1, we would have the following \u201cvirtual\nvotes\u201d"])),(l()(),e.sb(340,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Blue votes yes for blue, green, yellow, red, and purple"])),(l()(),e.sb(342,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Green votes yes for blue, green, yellow, red, and purple"])),(l()(),e.sb(344,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Yellow votes yes for blue, green, yellow, red, and purple"])),(l()(),e.sb(346,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Red votes yes for blue, green, yellow, red, and purple"])),(l()(),e.sb(348,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Purple votes yes for blue, green, yellow, red, and purple"])),(l()(),e.sb(350,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["With virtual voting the nodes know that all the events in G are famous."])),(l()(),e.sb(352,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(353,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: O(n log n)"])),(l()(),e.sb(355,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["What if we could approach O(log n) with Finality in a asynchronous\ndirected acyclic graph? With the current design of asynchronous\nbyzantine fault tolerant consensus algorithms a lot of processing occurs\nevent creation. This assumes an event must first be created, and then\nfor each event the virtual vote has to be tested."])),(l()(),e.sb(357,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Instead consider a consensus first design. When an event block is\ncreated, a way to be able to immediately decide if the event is a\nwitness, and if its linked events are accepted by 2n/3 participating\nnodes."])),(l()(),e.sb(359,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This would decrease our finality from "])),(l()(),e.sb(361,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g+2"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(364,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.Ib(-1,null,[" leaning us closer to\nO(n)"])),(l()(),e.sb(367,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The time complexity of the Lachesis algorithm means that a much faster\nperformance speed can be achieved with O(N Log(N))."])),(l()(),e.sb(369,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The performance speed according to the time complexity O(N2) and O(N\nLog(N)) (n refers to number of nodes) is shown below."])),(l()(),e.sb(371,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n square = n * n n"])),(l()(),e.sb(373,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Log N = n * log(n)"])),(l()(),e.sb(375,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n*n vs n * log(n)"])),(l()(),e.sb(377,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n vs log(n)"])),(l()(),e.sb(379,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=10, nlog(n) ~ 2.3"])),(l()(),e.sb(381,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=100, nlog(n) ~ 4.6"])),(l()(),e.sb(383,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=1,000, nlog(n) ~ 6.9"])),(l()(),e.sb(385,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=10,000, nlog(n) ~ 9.21"])),(l()(),e.sb(387,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=100,000, nlog(n) ~ 11.5"])),(l()(),e.sb(389,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=1,000,000, nlog(n) ~ 13.8"])),(l()(),e.sb(391,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(392,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Flag Table"])),(l()(),e.sb(394,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["How can this be accomplished? The change itself is fairly\nstraightforward, we add another in memory object called the Flag Table\n(or Share Table)"])),(l()(),e.sb(396,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The flag table stores share information from an event block to each\nWitness, which is how many nodes share the Witness. Flag table is\nutilized for assigning Atropos event block (Finalized block)."])),(l()(),e.sb(398,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(399,0,null,null,0,"img",[["src","./docs/architecture/image10.png"],["style","width:6.27083in;height:4.18056in"]],null,null,null,null,null)),(l()(),e.sb(400,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure 8 shows an example of a flag table of a Witness. In Figure 8, a\ncircle indicates an event block and a circle with \u2713 mark means a\nWitness. There are five participant nodes in this example and event\nblocks are classified into different colors according to nodes that\ngenerate the event blocks. When an event block is added to the OPERA\nchain (DAG), the depth first search (Flag table selection) runs to check\nwhether the event block is a Witness. The event block in generation G+1\nin Figure 8 is the first Witness of G + 1. The Flag table is a 2 x n\nmatrix where n is the number of nodes. According to this structure, the\nflag table in Figure 8 has a 2 x 5 matrix. The first row indicates the\nhash value of previous Witness created by participant nodes and second\nrow means the number of nodes from the event block to previous Witness.\nWe can consider the number of nodes on the paths as the share. For\nexample, the value of the first Witness (Blue) is 2. It means that the\nevent blocks on all paths from the Witness in G + 1 to the first Witness\nin G are generated by two nodes."])),(l()(),e.sb(402,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(403,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Simulation"])),(l()(),e.sb(405,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(406,0,null,null,0,"img",[["src","./docs/architecture/image5.png"],["style","width:6.27083in;height:3.52778in"]],null,null,null,null,null)),(l()(),e.sb(407,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Gossip Based Asynchronous Transactions Per Second"])),(l()(),e.sb(409,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The implementation of the flag table allows us to increase the time to\nfinality for witness creation."])),(l()(),e.sb(411,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(412,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Randomized Node Selection"])),(l()(),e.sb(414,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Another key component of asynchronous byzantine fault tolerant consensus\nalgorithms are their random selection mechanism. Whereby a new node to\ngossip to is selected at random. This randomness increases the\nlikelihood of duplicate events over time."])),(l()(),e.sb(416,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For finality we have confirmed that witness selection is key in the\ngeneration of a new round and thus 2n/3 finalization. Let\u2019s design a\nmechanism whereby we improve our option for witness selection."])),(l()(),e.sb(418,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(419,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Architecture: Cost Function"])),(l()(),e.sb(421,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A key difference in the Lachesis protocol is the in-height vector\nselection of Nodes known as the Cost Function."])),(l()(),e.sb(423,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The following is an excerpt from our technical paper;"])),(l()(),e.sb(425,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We define Cost Function ("])),(l()(),e.sb(427,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(429,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[") for preventing the creation of\nisolated nodes and ensuring the even distribution of connections between\nnodes. When a node creates an event block, the node selects another node\nwith a low cost function result, and we refer to the top event block of\nthe reference node. An equation (1) of "])),(l()(),e.sb(432,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(434,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" is as follows,"])),(l()(),e.sb(437,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.sb(438,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(440,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" = I/H"])),(l()(),e.sb(443,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(1)"])),(l()(),e.sb(445,0,null,null,18,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["where "])),(l()(),e.sb(447,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(450,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" denote certain values of in-degree vector and height\nvector respectively. If the number of nodes with the lowest\n"])),(l()(),e.sb(453,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(455,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" is more than two, one of the nodes is selected at\nrandom. If we select the node that has the highest "])),(l()(),e.sb(458,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[", we have a high\nprobability to create a Witness ("])),(l()(),e.sb(461,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" indicates that the communication\nfrequency of the node is high)."])),(l()(),e.sb(464,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.sb(465,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Algorithm 2"])),(l()(),e.Ib(-1,null,[" Node Selection"])),(l()(),e.sb(468,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1: "])),(l()(),e.sb(470,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["procedure"])),(l()(),e.Ib(-1,null,[" Node Selection"])),(l()(),e.sb(473,0,null,null,9,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2: "])),(l()(),e.sb(475,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Input"])),(l()(),e.Ib(-1,null,[": Height Vector "])),(l()(),e.sb(478,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[", In-degree Vector "])),(l()(),e.sb(481,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.sb(483,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3: "])),(l()(),e.sb(485,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Output"])),(l()(),e.Ib(-1,null,[": reference node "])),(l()(),e.sb(488,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.sb(490,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4: min_cost \u2190 INF"])),(l()(),e.sb(492,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["5: "])),(l()(),e.sb(494,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(496,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,[" \u2190 None"])),(l()(),e.sb(499,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["6: "])),(l()(),e.sb(501,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["for"])),(l()(),e.sb(503,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.sb(505,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03f5"])),(l()(),e.sb(507,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node_Set"])),(l()(),e.sb(509,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["do"])),(l()(),e.sb(511,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["7: "])),(l()(),e.sb(513,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(515,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(518,0,null,null,6,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.sb(520,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["/H"])),(l()(),e.sb(523,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.sb(525,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["8: "])),(l()(),e.sb(527,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["if"])),(l()(),e.Ib(-1,null,[" min_cost > "])),(l()(),e.sb(530,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(532,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(534,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["then"])),(l()(),e.sb(536,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["9: min_cost \u2190 "])),(l()(),e.sb(538,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(540,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(542,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["10: "])),(l()(),e.sb(544,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(546,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,[" \u2190 k"])),(l()(),e.sb(549,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["11: "])),(l()(),e.sb(551,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["else if"])),(l()(),e.Ib(-1,null,[" min_cost equal "])),(l()(),e.sb(554,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(556,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(558,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["then"])),(l()(),e.sb(560,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["12: "])),(l()(),e.sb(562,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(564,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(567,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(569,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,[" \u222a "])),(l()(),e.sb(572,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.sb(574,0,null,null,8,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["13: "])),(l()(),e.sb(576,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,[" \u2190 random select in "])),(l()(),e.sb(579,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(581,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.sb(583,0,null,null,21,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Algorithm 2 shows the selection algorithm for a reference node. The\nalgorithm operates for each node to select a reference node. Line 4 and\n5 set the min_cost and "])),(l()(),e.sb(585,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(587,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,[" to an initial state. Line 7\ncalculates the cost function "])),(l()(),e.sb(590,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(592,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" for each node. In line 8,\n9, and 10, we find the minimum value cf and set "])),(l()(),e.sb(595,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(597,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,["\naccordingly. Line 13 selects randomly one node ID from "])),(l()(),e.sb(600,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(602,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,["\nas the selected reference node. The time complexity of Algorithm 2 is\nO(n), where n is the number of nodes."])),(l()(),e.sb(605,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["After the reference node is selected, two nodes communicate and share\ninformation. A node creates an event block by referring to the top event\nblock of the reference node. The Lachesis protocol communicates\nasynchronously."])),(l()(),e.sb(607,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(608,0,null,null,0,"img",[["src","./docs/architecture/image7.png"],["style","width:4.82292in;height:3.0625in"]],null,null,null,null,null)),(l()(),e.sb(609,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let\u2019s practically explain what is happening above"])),(l()(),e.sb(611,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(612,0,null,null,0,"img",[["src","./docs/architecture/image2.png"],["style","width:4.64583in;height:2.61458in"]],null,null,null,null,null)),(l()(),e.sb(613,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node A, B, C, D, & E"])),(l()(),e.sb(615,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector for all Nodes"])),(l()(),e.sb(617,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(618,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(619,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(620,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(622,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(624,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(626,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(628,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(630,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(631,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(632,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(634,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(636,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(638,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(640,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(642,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector for all Nodes"])),(l()(),e.sb(644,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(645,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(646,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(647,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(649,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(651,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(653,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(655,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(657,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(658,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(659,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(661,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(663,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(665,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(667,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(669,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(670,0,null,null,0,"img",[["src","./docs/architecture/image11.png"],["style","width:4.64583in;height:2.52083in"]],null,null,null,null,null)),(l()(),e.sb(671,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node A receives a set of transactions, it wants to initiate a\nsynchronization event."])),(l()(),e.sb(673,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.sb(674,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(676,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" = I/H"])),(l()(),e.sb(679,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(1)"])),(l()(),e.sb(681,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node A has the following Height and In-degree Vector"])),(l()(),e.sb(683,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector for all Nodes"])),(l()(),e.sb(685,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(686,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(687,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(688,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(690,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(692,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(694,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(696,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(698,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(699,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(700,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(702,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(704,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(706,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(708,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(710,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector for all Nodes"])),(l()(),e.sb(712,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(713,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(714,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(715,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(717,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(719,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(721,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(723,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(725,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(726,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(727,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(729,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(731,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(733,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(735,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(737,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For purposes of "])),(l()(),e.sb(739,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(741,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F\\ "])),(l()(),e.Ib(-1,null,[" It calculates "])),(l()(),e.sb(744,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(746,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,[" as"])),(l()(),e.sb(749,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A: - (Self)"])),(l()(),e.sb(751,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B: 0 (0/0)"])),(l()(),e.sb(753,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C: 0 (0/0)"])),(l()(),e.sb(755,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D: 0 (0/0)"])),(l()(),e.sb(757,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E: 0 (0/0)"])),(l()(),e.sb(759,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We do a random select between B, C, D, and E"])),(l()(),e.sb(761,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node A synchronizes data to Node B"])),(l()(),e.sb(763,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node A"])),(l()(),e.sb(765,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector for all Nodes"])),(l()(),e.sb(767,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(768,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(769,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(770,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(772,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(774,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(776,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(778,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(780,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(781,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(782,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(784,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(786,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(788,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(790,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(792,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector for all Nodes"])),(l()(),e.sb(794,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(795,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(796,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(797,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(799,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(801,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(803,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(805,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(807,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(808,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(809,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(811,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(813,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(815,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(817,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(819,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node B"])),(l()(),e.sb(821,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector for all Nodes"])),(l()(),e.sb(823,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(824,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(825,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(826,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(828,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(830,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(832,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(834,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(836,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(837,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(838,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(840,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(842,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(844,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(846,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(848,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector for all Nodes"])),(l()(),e.sb(850,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(851,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(852,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(853,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(855,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(857,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(859,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(861,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(863,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(864,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(865,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(867,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(869,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(871,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(873,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(875,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node A created an Event Block (1), this increases its Height Vector by\n+1"])),(l()(),e.sb(877,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node B Event Block B is referenced by Event Block (1) (Edge from 1 to\nB), this increases the in-degree vector by +1"])),(l()(),e.sb(879,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["So we end up with"])),(l()(),e.sb(881,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector"])),(l()(),e.sb(883,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A+1"])),(l()(),e.sb(885,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector"])),(l()(),e.sb(887,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B+1"])),(l()(),e.sb(889,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["And the events are synchronized between the two nodes."])),(l()(),e.sb(891,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(892,0,null,null,0,"img",[["src","./docs/architecture/image15.png"],["style","width:4.64583in;height:2.52083in"]],null,null,null,null,null)),(l()(),e.sb(893,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(894,0,null,null,0,"img",[["src","./docs/architecture/image13.png"],["style","width:4.64583in;height:2.52083in"]],null,null,null,null,null)),(l()(),e.sb(895,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node C has the following Height and In-degree Vector"])),(l()(),e.sb(897,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector for all Nodes"])),(l()(),e.sb(899,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(900,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(901,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(902,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(904,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(906,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(908,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(910,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(912,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(913,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(914,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(916,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(918,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(920,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(922,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(924,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector for all Nodes"])),(l()(),e.sb(926,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(927,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(928,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(929,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(931,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(933,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(935,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(937,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(939,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(940,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(941,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(943,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(945,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(947,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(949,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(951,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For purposes of "])),(l()(),e.sb(953,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(955,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F\\ "])),(l()(),e.Ib(-1,null,[" It calculates "])),(l()(),e.sb(958,0,null,null,3,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(960,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ref"])),(l()(),e.Ib(-1,null,[" as"])),(l()(),e.sb(963,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A: 0 (0/0)"])),(l()(),e.sb(965,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B: 0 (0/0)"])),(l()(),e.sb(967,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C: - (Self)"])),(l()(),e.sb(969,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D: 0 (0/0)"])),(l()(),e.sb(971,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E: 0 (0/0)"])),(l()(),e.sb(973,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We do a random select between A, B, D, and E"])),(l()(),e.sb(975,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node C synchronizes data to Node B"])),(l()(),e.sb(977,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node B"])),(l()(),e.sb(979,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector for all Nodes"])),(l()(),e.sb(981,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(982,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(983,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(984,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(986,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(988,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(990,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(992,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(994,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(995,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(996,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(998,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1e3,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1002,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1004,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1006,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector for all Nodes"])),(l()(),e.sb(1008,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(1009,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(1010,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1011,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(1013,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(1015,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(1017,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(1019,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(1021,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(1022,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1023,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1025,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1027,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1029,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1031,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1033,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The above is our starting point."])),(l()(),e.sb(1035,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node C created an Event Block (2), this increases its Height Vector by\n+1"])),(l()(),e.sb(1037,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node B Event Block B is referenced by Event Block (2) (Edge from 2 to\nB), this increases the in-degree vector by +1"])),(l()(),e.sb(1039,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["So we end up with"])),(l()(),e.sb(1041,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector"])),(l()(),e.sb(1043,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C+1"])),(l()(),e.sb(1045,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector"])),(l()(),e.sb(1047,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B+1"])),(l()(),e.sb(1049,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["And the events are synchronized between the two nodes."])),(l()(),e.sb(1051,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node B"])),(l()(),e.sb(1053,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector for all Nodes"])),(l()(),e.sb(1055,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(1056,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(1057,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1058,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(1060,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(1062,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(1064,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(1066,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(1068,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(1069,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1070,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1072,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1074,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1076,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1078,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1080,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector for all Nodes"])),(l()(),e.sb(1082,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(1083,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(1084,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1085,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(1087,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(1089,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(1091,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(1093,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(1095,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(1096,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1097,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1099,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(1101,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1103,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1105,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1107,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node C"])),(l()(),e.sb(1109,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Height Vector for all Nodes"])),(l()(),e.sb(1111,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(1112,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(1113,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1114,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(1116,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(1118,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(1120,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(1122,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(1124,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(1125,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1126,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1128,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1130,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1132,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1134,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1136,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In-degree Vector for all Nodes"])),(l()(),e.sb(1138,0,null,null,24,"table",[],null,null,null,null,null)),(l()(),e.sb(1139,0,null,null,11,"thead",[],null,null,null,null,null)),(l()(),e.sb(1140,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1141,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(1143,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(1145,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(1147,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(1149,0,null,null,1,"th",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(1151,0,null,null,11,"tbody",[],null,null,null,null,null)),(l()(),e.sb(1152,0,null,null,10,"tr",[],null,null,null,null,null)),(l()(),e.sb(1153,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1155,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(1157,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1159,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1161,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1163,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We modify our simulation to use our cost function"])),(l()(),e.sb(1165,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(1166,0,null,null,0,"img",[["src","./docs/architecture/image16.png"],["style","width:6.27083in;height:3.54167in"]],null,null,null,null,null)),(l()(),e.sb(1167,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Gossip Based Asynchronous Finality with Cost Function"])),(l()(),e.sb(1169,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Finality still degrades as node participation increases, but the\ndegradation is significantly less severe. What is the trade off here\nhowever? The Cost Function gravitates towards high "])),(l()(),e.sb(1171,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" nodes, consider\n"])),(l()(),e.sb(1174,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" as an index of event blocks, if Node A has created 20 event blocks,\nthen Node A has an "])),(l()(),e.sb(1177,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" of 20, so the more event blocks created, the\nhigher the likelihood of being selected."])),(l()(),e.sb(1180,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The implications here are"])),(l()(),e.sb(1182,0,null,null,15,"ul",[],null,null,null,null,null)),(l()(),e.sb(1183,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1184,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Favor nodes with longer network participation"])),(l()(),e.sb(1186,0,null,null,8,"li",[],null,null,null,null,null)),(l()(),e.sb(1187,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Not all nodes have the same DAG view (High "])),(l()(),e.sb(1189,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" nodes will higher"])),(l()(),e.sb(1192,0,null,null,2,"blockquote",[],null,null,null,null,null)),(l()(),e.sb(1193,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["higher probability)"])),(l()(),e.sb(1195,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1196,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Faster finality, less decentralization"])),(l()(),e.sb(1198,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["What is the effect on transactions for those specific high "])),(l()(),e.sb(1200,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" nodes?"])),(l()(),e.sb(1203,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(1204,0,null,null,0,"img",[["src","./docs/architecture/image18.png"],["style","width:6.27083in;height:3.43056in"]],null,null,null,null,null)),(l()(),e.sb(1205,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Gossip Based Cost Function Transactions Per Second"])),(l()(),e.sb(1207,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Not surprising, since we know throughput increases for the selection of\n"])),(l()(),e.sb(1209,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" nodes while excluding the rest of the network."])),(l()(),e.sb(1212,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(1213,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Appendix A"])),(l()(),e.sb(1215,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Network latency will reduce tps. The time complexity of the Lachesis\nalgorithm means that a much faster performance speed can be achieved\nwith O(N Log(N))."])),(l()(),e.sb(1217,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The performance speed according to the time complexity O(N2) and O(N\nLog(N)) (n refers to number of nodes) is shown below."])),(l()(),e.sb(1219,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n square = n * n n"])),(l()(),e.sb(1221,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Log N = n * log(n)"])),(l()(),e.sb(1223,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n*n vs n * log(n)"])),(l()(),e.sb(1225,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n vs log(n)"])),(l()(),e.sb(1227,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=10, nlog(n) ~ 2.3"])),(l()(),e.sb(1229,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=100, nlog(n) ~ 4.6"])),(l()(),e.sb(1231,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=1,000, nlog(n) ~ 6.9"])),(l()(),e.sb(1233,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=10,000, nlog(n) ~ 9.21"])),(l()(),e.sb(1235,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=100,000, nlog(n) ~ 11.5"])),(l()(),e.sb(1237,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If n=1,000,000, nlog(n) ~ 13.8"])),(l()(),e.sb(1239,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Now, let\u2019s consider node participation"])),(l()(),e.sb(1241,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2 nodes"])),(l()(),e.sb(1243,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["500 transactions every 500 milliseconds for each node"])),(l()(),e.sb(1245,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Event blocks created every 100 milliseconds"])),(l()(),e.sb(1247,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"])),(l()(),e.sb(1249,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 16066"])),(l()(),e.sb(1251,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 7376"])),(l()(),e.sb(1253,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 67"])),(l()(),e.sb(1255,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 2754.637121872277"])),(l()(),e.sb(1257,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:6.870 MiB"])),(l()(),e.sb(1259,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 1"])),(l()(),e.sb(1261,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"])),(l()(),e.sb(1263,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 16065"])),(l()(),e.sb(1265,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 7376"])),(l()(),e.sb(1267,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 57"])),(l()(),e.sb(1269,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 2754.808590102708"])),(l()(),e.sb(1271,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:6.861 MiB"])),(l()(),e.sb(1273,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 646"])),(l()(),e.sb(1275,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["========================================================"])),(l()(),e.sb(1277,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"])),(l()(),e.sb(1279,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 17123"])),(l()(),e.sb(1281,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 7875"])),(l()(),e.sb(1283,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 60"])),(l()(),e.sb(1285,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 2759.4463586988263"])),(l()(),e.sb(1287,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:7.321 MiB"])),(l()(),e.sb(1289,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 0"])),(l()(),e.sb(1291,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"])),(l()(),e.sb(1293,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 17123"])),(l()(),e.sb(1295,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 7875"])),(l()(),e.sb(1297,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 65"])),(l()(),e.sb(1299,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 2759.4463586988263"])),(l()(),e.sb(1301,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:7.326 MiB"])),(l()(),e.sb(1303,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 655"])),(l()(),e.sb(1305,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["========================================================"])),(l()(),e.sb(1307,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"])),(l()(),e.sb(1309,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 18183"])),(l()(),e.sb(1311,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 8375"])),(l()(),e.sb(1313,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 67"])),(l()(),e.sb(1315,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 2763.5703679260846"])),(l()(),e.sb(1317,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:7.786 MiB"])),(l()(),e.sb(1319,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 1"])),(l()(),e.sb(1321,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"])),(l()(),e.sb(1323,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 18183"])),(l()(),e.sb(1325,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 8375"])),(l()(),e.sb(1327,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 58"])),(l()(),e.sb(1329,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 2763.5703679260846"])),(l()(),e.sb(1331,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:7.778 MiB"])),(l()(),e.sb(1333,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 657"])),(l()(),e.sb(1335,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2 nodes"])),(l()(),e.sb(1337,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["500 transactions every 100 milliseconds for each node"])),(l()(),e.sb(1339,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Event blocks created every 100 milliseconds"])),(l()(),e.sb(1341,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"])),(l()(),e.sb(1343,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 12288"])),(l()(),e.sb(1345,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 8334"])),(l()(),e.sb(1347,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 335"])),(l()(),e.sb(1349,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 4069.3359375"])),(l()(),e.sb(1351,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:7.943 MiB"])),(l()(),e.sb(1353,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 1"])),(l()(),e.sb(1355,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"])),(l()(),e.sb(1357,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 12287"])),(l()(),e.sb(1359,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 8334"])),(l()(),e.sb(1361,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 331"])),(l()(),e.sb(1363,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 4069.6671278587123"])),(l()(),e.sb(1365,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:7.939 MiB"])),(l()(),e.sb(1367,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 601"])),(l()(),e.sb(1369,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["========================================================"])),(l()(),e.sb(1371,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"])),(l()(),e.sb(1373,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 13604"])),(l()(),e.sb(1375,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 9334"])),(l()(),e.sb(1377,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 307"])),(l()(),e.sb(1379,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 4116.730373419582"])),(l()(),e.sb(1381,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:8.829 MiB"])),(l()(),e.sb(1383,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 0"])),(l()(),e.sb(1385,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"])),(l()(),e.sb(1387,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 13604"])),(l()(),e.sb(1389,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 9334"])),(l()(),e.sb(1391,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 359"])),(l()(),e.sb(1393,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 4116.730373419582"])),(l()(),e.sb(1395,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:8.876 MiB"])),(l()(),e.sb(1397,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 626"])),(l()(),e.sb(1399,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["========================================================"])),(l()(),e.sb(1401,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"])),(l()(),e.sb(1403,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 14940"])),(l()(),e.sb(1405,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 10334"])),(l()(),e.sb(1407,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 346"])),(l()(),e.sb(1409,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 4150.2008032128515"])),(l()(),e.sb(1411,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:9.775 MiB"])),(l()(),e.sb(1413,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 0"])),(l()(),e.sb(1415,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"])),(l()(),e.sb(1417,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 14940"])),(l()(),e.sb(1419,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 10334"])),(l()(),e.sb(1421,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 320"])),(l()(),e.sb(1423,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 4150.2008032128515"])),(l()(),e.sb(1425,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:9.752 MiB"])),(l()(),e.sb(1427,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 621"])),(l()(),e.sb(1429,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4 nodes"])),(l()(),e.sb(1431,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["500 transactions every 100 milliseconds for each node"])),(l()(),e.sb(1433,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Event blocks created every 100 milliseconds"])),(l()(),e.sb(1435,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"])),(l()(),e.sb(1437,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 22021"])),(l()(),e.sb(1439,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 7864"])),(l()(),e.sb(1441,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 187"])),(l()(),e.sb(1443,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 2142.681985377594"])),(l()(),e.sb(1445,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:7.389 MiB"])),(l()(),e.sb(1447,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 1983"])),(l()(),e.sb(1449,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"])),(l()(),e.sb(1451,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 22021"])),(l()(),e.sb(1453,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 7884"])),(l()(),e.sb(1455,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 144"])),(l()(),e.sb(1457,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 2148.1313291857773"])),(l()(),e.sb(1459,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:7.372 MiB"])),(l()(),e.sb(1461,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 1982"])),(l()(),e.sb(1463,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\nd4735e3a265e16eee03f59718b9b5d03019c07d8b6c51f90da3a666eec13ab35"])),(l()(),e.sb(1465,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 22021"])),(l()(),e.sb(1467,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 6649"])),(l()(),e.sb(1469,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 185"])),(l()(),e.sb(1471,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 1811.634349030471"])),(l()(),e.sb(1473,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:6.280 MiB"])),(l()(),e.sb(1475,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 1983"])),(l()(),e.sb(1477,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce"])),(l()(),e.sb(1479,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 22021"])),(l()(),e.sb(1481,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 7257"])),(l()(),e.sb(1483,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 157"])),(l()(),e.sb(1485,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 1977.294400799237"])),(l()(),e.sb(1487,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:6.811 MiB"])),(l()(),e.sb(1489,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 1982"])),(l()(),e.sb(1491,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We note a decrease in overall TPS, due to an increase in TTF (Time To\nFinality), as node participation increases, asynchronous processing can\nincrease, but finality also increases."])),(l()(),e.sb(1493,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4 nodes"])),(l()(),e.sb(1495,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["500 transactions every 100 milliseconds for each node"])),(l()(),e.sb(1497,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Event blocks created every 100 milliseconds"])),(l()(),e.sb(1499,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"])),(l()(),e.sb(1501,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 19726"])),(l()(),e.sb(1503,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 3887"])),(l()(),e.sb(1505,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 83"])),(l()(),e.sb(1507,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 1182.2974754131603"])),(l()(),e.sb(1509,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:3.676 MiB"])),(l()(),e.sb(1511,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 2859"])),(l()(),e.sb(1513,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"])),(l()(),e.sb(1515,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 19726"])),(l()(),e.sb(1517,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 3945"])),(l()(),e.sb(1519,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 75"])),(l()(),e.sb(1521,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 1199.9391665821759"])),(l()(),e.sb(1523,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:3.719 MiB"])),(l()(),e.sb(1525,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 2860"])),(l()(),e.sb(1527,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\nd4735e3a265e16eee03f59718b9b5d03019c07d8b6c51f90da3a666eec13ab35"])),(l()(),e.sb(1529,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 19726"])),(l()(),e.sb(1531,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 3883"])),(l()(),e.sb(1533,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 63"])),(l()(),e.sb(1535,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 1181.0808070566766"])),(l()(),e.sb(1537,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:3.655 MiB"])),(l()(),e.sb(1539,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 2860"])),(l()(),e.sb(1541,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce"])),(l()(),e.sb(1543,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 19726"])),(l()(),e.sb(1545,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 3679"])),(l()(),e.sb(1547,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 101"])),(l()(),e.sb(1549,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 1119.0307208760012"])),(l()(),e.sb(1551,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:3.504 MiB"])),(l()(),e.sb(1553,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 2859"])),(l()(),e.sb(1555,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a"])),(l()(),e.sb(1557,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 19726"])),(l()(),e.sb(1559,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 3201"])),(l()(),e.sb(1561,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 73"])),(l()(),e.sb(1563,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 973.6388522761837"])),(l()(),e.sb(1565,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:3.043 MiB"])),(l()(),e.sb(1567,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 2859"])),(l()(),e.sb(1569,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\nef2d127de37b942baad06145e54b0c619a1f22327b2ebbcfbec78f5564afe39d"])),(l()(),e.sb(1571,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 19726"])),(l()(),e.sb(1573,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 3221"])),(l()(),e.sb(1575,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 95"])),(l()(),e.sb(1577,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 979.7221940586029"])),(l()(),e.sb(1579,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:3.080 MiB"])),(l()(),e.sb(1581,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 2859"])),(l()(),e.sb(1583,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\ne7f6c011776e8db7cd330b54174fd76f7d0216b612387a5ffcfb81e6f0919683"])),(l()(),e.sb(1585,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 19727"])),(l()(),e.sb(1587,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 3255"])),(l()(),e.sb(1589,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 101"])),(l()(),e.sb(1591,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 990.0136868251635"])),(l()(),e.sb(1593,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:3.118 MiB"])),(l()(),e.sb(1595,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 2859"])),(l()(),e.sb(1597,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node ID:\n7902699be42c8a8e46fbbb4501726517e86b22c56a189f7625a6da49081b2451"])),(l()(),e.sb(1599,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Time: 19726"])),(l()(),e.sb(1601,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Total Transactions: 3563"])),(l()(),e.sb(1603,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Pending Transactions: 92"])),(l()(),e.sb(1605,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["TPS: 1083.74733853797"])),(l()(),e.sb(1607,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Data bloat:3.393 MiB"])),(l()(),e.sb(1609,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Time To Finality: 2860"])),(l()(),e.sb(1611,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["At 8 nodes we have further degrading of TPS and a slight increase in TTF\n(Optimized path searching between 4 and 8 nodes only increases by a\ndifficulty of 1)"])),(l()(),e.sb(1613,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Thus, the greater the participation of nodes, the higher the\nasynchronous transaction processing at a trade off of increase finality."])),(l()(),e.sb(1615,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[1] No real finality (longest chain rule)"]))],null,null)}function h(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-architecture-results",[],null,null,null,c,m)),e.rb(1,49152,null,0,r,[],null,null)],null,null)}var d=e.ob("app-architecture-results",r,h,{},{},[]),p=function(){return function(){}}(),f=e.qb({encapsulation:2,styles:[],data:{}});function g(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"h2",[["id","consensus-and-blockchain"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Consensus and Blockchain"])),(l()(),e.sb(2,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["At the core of Lachesis is an algorithm insuring that all participants process the same transactions in the same order. We have chosen to implement a system suitable for the most adversarial conditions - with powerful attackers. This is known as Byzantine Fault Tolerance (BFT) and has been a field of research for over 30 years. Our system is based on our interpretation of a paper published by\nLeemon Baird in 2016 "])),(l()(),e.sb(4,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["<http://www.swirlds.com/downloads/SWIRLDS-TR-2016-01.pdf>"])),(l()(),e.Ib(-1,null,["__"])),(l()(),e.sb(7,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["which describes a method for extracting a consensus order of events from a data structure representing the history of gossip between a set of participants.\nInstead of only gossiping transactions and exchanging votes directly, members gossip about gossip itself; something that can be represented in a Directed Acyclic Graph (DAG) - the poset. The algorithm for extracting a consensus order from the poset is proven to work and attains the theoretical limits of\nByzantine fault-tolerance in terms of the number and power of the malicious\nmembers it can cope with. The messaging routines required to gossip and create the poset are very simple compared to other BFT algorithms. The poset itself, however, is not ideal for representing the ordered list of transactions because it is a two-dimensional object which doesn't explicitly express a linear order of the items it contains. Hence, we developed a method to map the poset onto a blockchain. "])),(l()(),e.sb(9,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A blockchain is a data structure where transactions are packaged in hash-linked blocks. Each block is identified by a cryptographic hash and contains a hash of the previous block, so that blocks can form a chain from the first block ever to the last formed block. In this way, all the block - and transactions - are connected via a linear linked list structure. In our system, blocks contain a collection of signatures of their own hash from the participants. A block with valid signatures from at least one third of validators can be considered valid because - by hypothesis - at least one of those signatures is from an honest member. "])),(l()(),e.sb(11,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Projecting the poset onto a blockchain makes it much easier for third parties to verify the consensus order. It makes it possible to build light-clients and to integrate Poset based systems with other blockchains. For more detail about the projection method, please refer to :ref:"])),(l()(),e.sb(13,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["blockchain"])),(l()(),e.sb(15,0,null,null,1,"h2",[["id","proxy"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Proxy"])),(l()(),e.sb(17,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis communicates with the App through an "])),(l()(),e.sb(19,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["AppProxy"])),(l()(),e.Ib(-1,null,[" interface, which has two\nimplementations:"])),(l()(),e.sb(22,0,null,null,10,"ul",[],null,null,null,null,null)),(l()(),e.sb(23,0,null,null,4,"li",[],null,null,null,null,null)),(l()(),e.sb(24,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.sb(25,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["SocketProxy"])),(l()(),e.Ib(-1,null,[": A SocketProxy connects to an App via TCP sockets. It enables the application to run in a separate process or machine, and to be written in any programming language."])),(l()(),e.sb(28,0,null,null,4,"li",[],null,null,null,null,null)),(l()(),e.sb(29,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.sb(30,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["InmemProxy"])),(l()(),e.Ib(-1,null,[": An InmemProxy uses native callback handlers to integrate Lachesis as a regular Go dependency. "])),(l()(),e.sb(33,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The "])),(l()(),e.sb(35,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["AppProxy"])),(l()(),e.Ib(-1,null,[" interface exposes three methods for Lachesis to call the App:"])),(l()(),e.sb(38,0,null,null,15,"ul",[],null,null,null,null,null)),(l()(),e.sb(39,0,null,null,4,"li",[],null,null,null,null,null)),(l()(),e.sb(40,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.sb(41,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["CommitBlock(Block) ([]byte, error)"])),(l()(),e.Ib(-1,null,[": Commits a block to the application and returns the resulting state hash."])),(l()(),e.sb(44,0,null,null,4,"li",[],null,null,null,null,null)),(l()(),e.sb(45,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.sb(46,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["GetSnapshot(int) ([]byte, error)"])),(l()(),e.Ib(-1,null,[": Gets the application snapshot corresponding to a particular block index."])),(l()(),e.sb(49,0,null,null,4,"li",[],null,null,null,null,null)),(l()(),e.sb(50,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.sb(51,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Restore([]byte) error"])),(l()(),e.Ib(-1,null,[": Restores the App state from a snapshot."])),(l()(),e.sb(54,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Reciprocally, "])),(l()(),e.sb(56,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["AppProxy"])),(l()(),e.Ib(-1,null,[" relays transactions from the App to Lachesis via a native Go channel - "])),(l()(),e.sb(59,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["SubmitCh"])),(l()(),e.Ib(-1,null,[" - which ties into the application differently depending on the type of proxy (Socket or Inmem)."])),(l()(),e.sb(62,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis asynchronously processes transactions and eventually feeds them back to the App, in consensus order and bundled into blocks, with a "])),(l()(),e.sb(64,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["CommitBlock"])),(l()(),e.Ib(-1,null,[" call. Transactions are just raw bytes and Lachesis does not need to know what they represent. Therefore, encoding and decoding transactions is done by the App."])),(l()(),e.sb(67,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["See the :ref:"])),(l()(),e.sb(69,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["api"])),(l()(),e.Ib(-1,null,[" section for more details about the Proxy API."])),(l()(),e.sb(72,0,null,null,1,"h2",[["id","transport"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Transport"])),(l()(),e.sb(74,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis nodes communicate with other Lachesis nodes in a fully connected Peer To Peer network. Nodes gossip by repeatedly choosing another node at random and telling eachother what they know about the poset. The gossip protocol is extremely simple and serves the dual purpose of gossiping about transactions and about the gossip itself (the poset). The poset contains enough information to compute a consensus ordering of transactions. "])),(l()(),e.sb(76,0,null,null,56,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The communication mechanism is a custom RPC protocol over TCP connections. It"])),(l()(),e.sb(78,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["implements a Pull-Push gossip system. At the moment, there are two types of RPC"])),(l()(),e.sb(80,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["commands: "])),(l()(),e.sb(82,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Sync"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(85,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["EagerSync"])),(l()(),e.Ib(-1,null,[". When node "])),(l()(),e.sb(88,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" wants to sync with node "])),(l()(),e.sb(91,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[", it sends a "])),(l()(),e.sb(94,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["SyncRequest"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(97,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" containing a description of what it knows about the poset. "])),(l()(),e.sb(100,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" computes what it knows that "])),(l()(),e.sb(103,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" doesn't know and returns a "])),(l()(),e.sb(106,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["SyncResponse"])),(l()(),e.Ib(-1,null,[" with the corresponding events in topological order. Upon receiving the "])),(l()(),e.sb(109,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["SyncResponse"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(112,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" updates its poset accordingly and calculates the consensus order. Then, "])),(l()(),e.sb(115,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" sends an "])),(l()(),e.sb(118,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["EagerSyncRequest"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(121,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" with the Events that it knows and "])),(l()(),e.sb(124,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" doesn't. Upon receiving the "])),(l()(),e.sb(127,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["EagerSyncRequest"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(130,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" updates its poset and runs the consensus methods."])),(l()(),e.sb(133,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The list of peers must be predefined and known to all peers. At the moment, it is not possible to dynamically modify the list of peers while the network is running but this is not a limitation of the Poset algorithm, just an implementation prioritization."])),(l()(),e.sb(135,0,null,null,1,"h2",[["id","core"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Core"])),(l()(),e.sb(137,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The core of Lachesis is the component that maintains and computes the poset."])),(l()(),e.sb(139,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The consensus algorithm, invented by Leemon Baird, is best described in the "])),(l()(),e.sb(141,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["white-paper <http://www.swirlds.com/downloads/SWIRLDS-TR-2016-01.pdf>"])),(l()(),e.Ib(-1,null,["__"])),(l()(),e.sb(144,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["and its "])),(l()(),e.sb(146,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["accompanying document <http://www.swirlds.com/downloads/SWIRLDS-TR-2016-02.pdf>"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(149,0,null,null,15,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The poset itself is a data structure that contains all the information about"])),(l()(),e.sb(151,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["the history of the gossip and thereby grows and grows in size as gossip spreads."])),(l()(),e.sb(153,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["There are various strategies to keep the size of the poset limited. In our"])),(l()(),e.sb(155,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["implementation, the "])),(l()(),e.sb(157,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Poset"])),(l()(),e.Ib(-1,null,[" object has a dependency on a "])),(l()(),e.sb(160,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Store"])),(l()(),e.Ib(-1,null,[" object"])),(l()(),e.sb(163,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["which contains the actual data and is abstracted behind an interface."])),(l()(),e.sb(165,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["There are currently two implementations of the "])),(l()(),e.sb(167,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Store"])),(l()(),e.Ib(-1,null,[" interface. The "])),(l()(),e.sb(170,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["InmemStore"])),(l()(),e.Ib(-1,null,[" uses a set of in-memory LRU caches which can be extended to persist stale items to disk and the size of the LRU caches is configurable. The "])),(l()(),e.sb(173,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["BadgerStore"])),(l()(),e.Ib(-1,null,[" is a wrapper around this cache that also persists objects to a key-value store on disk. The database produced by the "])),(l()(),e.sb(176,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["BadgerStore"])),(l()(),e.Ib(-1,null,[" can be reused to bootstrap a node back to a specific state."])),(l()(),e.sb(179,0,null,null,1,"h2",[["id","service"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Service"])),(l()(),e.sb(181,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The Service exposes an HTTP API to query information about the state of the node\nas well as the underlying poset and blockchain. At the moment, it services two queries:"])),(l()(),e.sb(183,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.sb(184,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[GET] /stats"])),(l()(),e.Ib(-1,null,[": "])),(l()(),e.sb(187,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Returns a map with information about the Lachesis node. "])),(l()(),e.sb(189,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(190,0,null,null,1,"code",[["class","lang-bash"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["$ curl -s http://[ip]:80/stats | jq\n"])),(l()(),e.sb(192,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(193,0,null,null,1,"code",[["class","lang-json"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,['{\n    "consensus_events": "145",\n    "consensus_transactions": "100",\n    "events_per_second": "0.00",\n    "id": "1",\n    "last_block_index": "4",\n    "last_consensus_round": "14",\n    "num_peers": "3",\n    "round_events": "18",\n    "rounds_per_second": "0.00",\n    "state": "Babbling",\n    "sync_rate": "1.00",\n    "transaction_pool": "0",\n    "undetermined_events": "22"\n}\n'])),(l()(),e.sb(195,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.sb(196,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[GET] /block/{block_index}"])),(l()(),e.Ib(-1,null,[":"])),(l()(),e.sb(199,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Returns the Block with the specified index, as stored by the Lachesis node."])),(l()(),e.sb(201,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(202,0,null,null,1,"code",[["class","lang-bash"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["$ curl -s http://[ip]:80/block/0 | jq\n"])),(l()(),e.sb(204,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(205,0,null,null,1,"code",[["class","lang-json"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,['{\n  "Body": {\n    "Index": 0,\n    "RoundReceived": 7,\n    "StateHash": "ib8wpBS/W18OT07R+HFxBVYjS/lwPPRtuAV/rcrpQ9w=",\n    "FrameHash": "T7EVNhAfbIx3jGyu5fXnyYs+eAihWCxFdu+8UDYOzfA=",\n    "Transactions": [\n      "Tm9kZTEgVHgx",\n      "Tm9kZTEgVHgy",\n      "Tm9kZTEgVHgz",\n      "Tm9kZTEgVHg0",\n      "Tm9kZTEgVHg1",\n      "Tm9kZTEgVHg2",\n      "Tm9kZTEgVHg3",\n      "Tm9kZTEgVHg4",\n      "Tm9kZTEgVHg5",\n      "Tm9kZTEgVHgxMA==",\n      "Tm9kZTEgVHgxOA==",\n      "Tm9kZTEgVHgxMQ==",\n      "Tm9kZTEgVHgxMg==",\n      "Tm9kZTEgVHgxMw==",\n      "Tm9kZTEgVHgxNA==",\n      "Tm9kZTEgVHgxNQ==",\n      "Tm9kZTEgVHgxNg==",\n      "Tm9kZTEgVHgxNw=="\n    ]\n  },\n  "Signatures": {\n    "0x0442633367F4F3C3B00533956CF5231600EB5622765A064C0BFCC547611293F3353BE2404D01FBF66184DB486C92F50EA08CBA75268DDD29BDF8DA5DA333A2E3F5": "2a2wij946jjhb0nnqcqspk5m3irnw6pyqevsgl833urt453nwq|50npyfnd9c2whz8gqe3jv4ya1qu2if3s25qofuah8565auzpjq",\n    "0x04C1795E3C6C66CA3DF09C89FAC9FD5AC1BFF7C8BFE7D1DEF7CEC1A3BD9162F37CE841EE5ACE29B65486DD8EA976D5D7EDEF525C2AB6036CFFA5B8B259C2E29C54": "636m75hq7vmz66vgscosrvhv3ultq1ndh477h3hx8oa38qkxkm|611yf6veodg7kwedt99kuuftjzturj8sowu2c1b65e323umrsv",\n    "0x04C8754230AF8F4A3491E16B8508E7D4C6944E496C95E0F6CF2B21ABBDD7BF9768E3F63B63166CE20FF8B7AF8B29C576F138B696E55ADEE6B6B33889CDFD451CC8": "39u9n7nk31nsyjsnrclcvtgo2emx3hu8gpsvfdzy497bbwaoam|69sl3o2rvy9fqant3ui86pffqcdb6tofhp1padlc011oyu6o9v",\n    "0x04F753E04757A4D6ABC5741AC80D5CC98D5CE8F68C15104D73C447835D51A7840805614A221FD72C069C3D54E92FC8DC8301D1A9F789E347E7E1F5B63A6975582A": "1ajuve68asea9ydczz7j1vbi4p1rs4svzbyjwkxc0dswppmw7j|353mq56tycr44mmzzr5j5zs3mjwz74g5eladozhbwojfkkaf51"\n  }\n}\n']))],null,null)}function v(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-architecture",[],null,null,null,g,f)),e.rb(1,49152,null,0,p,[],null,null)],null,null)}var y=e.ob("app-architecture",p,v,{},{},[]),w=function(){return function(){}}(),k=e.qb({encapsulation:2,styles:[],data:{}});function A(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"h2",[["id","frames"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Frames"])),(l()(),e.sb(2,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Frames are self-contained sections of the Poset. They are composed of Roots and regular Poset Events, where Roots are the base on top of which Events can be inserted. Basically, Frames form a valid foundation for a new Poset,\nsuch that gossip-about-gossip routines are not discontinued, while earlier records of the gossip history are ignored. "])),(l()(),e.sb(4,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(5,0,null,null,1,"code",[["class","lang-go"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["type Frame struct {\n    Round  int     //RoundReceived\n    Roots  []Root  //[participant ID] => Root\n    Events []Event //Events with RoundReceived = Round\n}\n"])),(l()(),e.sb(7,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A Frame corresponds to a Poset consensus round. Indeed, the consensus algorithm commits Events in batches, which we map onto Frames, and finally onto a Blockchain. This is an evolution of the previously defined :ref:"])),(l()(),e.sb(9,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["blockchain mapping <blockchain>"])),(l()(),e.Ib(-1,null,[". Block headers now contain a Frame hash. As we will see later, this is useful for security. The Events in a Frame are the Events of the corresponding batch, in consensus order."])),(l()(),e.sb(12,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[".. image:: assets/dag_frames_bx.png"])),(l()(),e.sb(14,0,null,null,1,"h2",[["id","roots"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Roots"])),(l()(),e.sb(16,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Frames also contain Roots. To get an understanding for why this is necessary, we\nmust consider the initial state of a Poset, i.e., the base on top of which the first Events are inserted. "])),(l()(),e.sb(18,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The Poset is an interlinked chain of Events, where each Event contains two references to anterior Events (SelfParent and OtherParent). Upon inserting an Event in the Poset, we check that its references point to existing Events (Events that are already in the Poset) and that at least the SelfParent reference is not empty. This is partially illustrated in the following picture where Event A2 cannot be inserted because its references are unknown. "])),(l()(),e.sb(20,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[".. image:: assets/roots_0.png"])),(l()(),e.sb(22,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["So what about the first Event? Until now, we simply implemented a special case, whereby the first Event for any participant, could be inserted without checking its references. In fact the above picture shows that Events A0, B0, and C0, have\nempty references, and yet they are part of the Poset. This special case is fine as long as we do not expect to initialize Posets from a 'non-zero' state."])),(l()(),e.sb(24,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We introduced the concept of Roots to remove the special case and handle more\ngeneral situations. They make it possible to initialize a Poset from a section of an existing Poset, and discard everything below it."])),(l()(),e.sb(26,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[".. image:: assets/roots_1.png"])),(l()(),e.sb(28,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A Root is a data structure containing condensed information about the ancestors of the first Events to be added to the Poset. Each participant has a Root,\ncontaining a "])),(l()(),e.sb(30,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["SelfParent"])),(l()(),e.Ib(-1,null,[" - the direct ancestor of the first Event for the corresponding participant - and "])),(l()(),e.sb(33,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Others"])),(l()(),e.Ib(-1,null,[" - a map of Event hashes to the corresponding Other-Parents. These parents are instances of the "])),(l()(),e.sb(36,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["RootEvent"])),(l()(),e.Ib(-1,null,[" object, which is a minimal version of the Poset Event. RootEvents contain\ninformation about the Index, Round, and LamportTimestamp of the corresponding Events. The Root itself contains a NextRound field, which helps in calculating the Round of its direct descendant."])),(l()(),e.sb(39,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(40,0,null,null,1,"code",[["class","lang-go"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["type Root struct {\n  NextRound  int\n  SelfParent RootEvent\n  Others     map[string]RootEvent\n}\n\ntype RootEvent struct {\n  Hash             string\n  CreatorID        int\n  Index            int\n  LamportTimestamp int\n  Round            int\n}\n"]))],null,null)}function T(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-core-components",[],null,null,null,A,k)),e.rb(1,49152,null,0,w,[],null,null)],null,null)}var C=e.ob("app-core-components",w,T,{},{},[]),x=function(){return function(){}}(),E=e.qb({encapsulation:2,styles:[],data:{}});function P(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"h1",[["id","introduction"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Introduction"])),(l()(),e.sb(2,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Blockchain has emerged as a technology for secure decentralized transaction ledgers with broad applications in financial systems, supply chains and health care. "])),(l()(),e.sb(4,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Byzantine"])),(l()(),e.Ib(-1,null,[" fault tolerance is addressed in distributed database systems, in which up to one-third of the participant nodes may be compromised. Consensus algorithms ensures the integrity of transactions between participants over a distributed network and is equivalent to the proof of "])),(l()(),e.sb(7,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Byzantine"])),(l()(),e.Ib(-1,null,[" fault tolerance in distributed database systems ."])),(l()(),e.sb(10,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A large number of consensus algorithms have been proposed. For example; the original Nakamoto consensus protocol in Bitcoin uses Proof of Work (PoW) . Proof Of Stake (PoS) uses participants\u2019 stakes to generate the blocks respectively. Our previous paper gives a survey of previous DAG-based approaches ."])),(l()(),e.sb(12,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the previous paper , we introduced a new consensus protocol, called "])),(l()(),e.sb(14,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(16,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[". The protocol "])),(l()(),e.sb(19,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(21,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" is a DAG-based asynchronous non-deterministic protocol that guarantees pBFT. "])),(l()(),e.sb(24,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(26,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" generates each block asynchronously and uses the OPERA chain (DAG) for faster consensus by confirming how many nodes share the blocks."])),(l()(),e.sb(29,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The Lachesis protocol as previously proposed is a set of protocols that create a directed acyclic graph for distributed systems. Each node can receive transactions and batch them into an event block. An event block is then shared with its peers. When peers communicate they share this information again and thus spread this information through the network. In BFT systems we would use a broadcast voting approach and ask each node to vote on the validity of each block. This event is synchronous in nature. Instead we proposed an asynchronous system where we leverage the concepts of distributed common knowledge, dominator relations in graph theory and broadcast based gossip to achieve a local view with high probability of being a global view. It accomplishes this asynchronously, meaning that we can increase throughput near linearly as nodes enter the network."])),(l()(),e.sb(31,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In this work, we propose a further enhancement on these concepts and we formalize them so that they can be applied to any asynchronous distributed system."])),(l()(),e.sb(33,0,null,null,1,"h2",[["id","contributions"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Contributions"])),(l()(),e.sb(35,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In summary, this paper makes the following contributions:"])),(l()(),e.sb(37,0,null,null,12,"ul",[],null,null,null,null,null)),(l()(),e.sb(38,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(39,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We introduce the n-row flag table for faster root selection of the Lachesis Protocol"])),(l()(),e.sb(41,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(42,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We define continuous consistent cuts of a local view to achieve consensus"])),(l()(),e.sb(44,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(45,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We present proof of how domination relationships can be used for share information"])),(l()(),e.sb(47,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(48,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We formalize our proofs that can be applied to any generic asynchronous DAG solution"])),(l()(),e.sb(50,0,null,null,1,"h2",[["id","paper-structure"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Paper structure"])),(l()(),e.sb(52,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The rest of this paper is organised as follows. Section [se:prelim] describes our Fantom framework. Section [se:lca] presents the protocol implementation. Section [se:con] concludes our paper with some future directions. Proof of Byzantine fault tolerance is described in Section [se:proof]."])),(l()(),e.sb(54,0,null,null,1,"h1",[["id","preliminaries"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Preliminaries"])),(l()(),e.sb(56,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The protocol is run via nodes representing users\u2019 machines which together create a network. The basic units of the protocol are called event blocks - a data structure created by a single node to share transaction and user information with the rest of the network. These event blocks reference previous event blocks that are known to the node. This flow or stream of information creates a sequence of history."])),(l()(),e.sb(58,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The history of the protocol can be represented by a directed acyclic graph "])),(l()(),e.sb(60,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004=\u2004("])),(l()(),e.sb(63,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(66,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["), where "])),(l()(),e.sb(69,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" is a set of vertices and "])),(l()(),e.sb(72,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" is a set of edges. Each vertex in a row (node) represents an event. Time flows left-to-right of the graph, so left vertices represent earlier events in history."])),(l()(),e.sb(75,0,null,null,92,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For a graph "])),(l()(),e.sb(77,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[", a path "])),(l()(),e.sb(80,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(83,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[" is a sequence of vertices ("])),(l()(),e.sb(86,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(88,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(91,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(93,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", \u2026, "])),(l()(),e.sb(96,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(98,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(99,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[") by following the edges in "])),(l()(),e.sb(102,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[". Let "])),(l()(),e.sb(105,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(107,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(108,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" be a vertex in "])),(l()(),e.sb(111,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[". A vertex "])),(l()(),e.sb(114,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(116,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(117,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" is the "])),(l()(),e.sb(120,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["parent"])),(l()(),e.Ib(-1,null,[" of "])),(l()(),e.sb(123,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(125,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(126,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is an edge from "])),(l()(),e.sb(129,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(131,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(132,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(135,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(137,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(138,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[". A vertex "])),(l()(),e.sb(141,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(143,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(144,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is an "])),(l()(),e.sb(147,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ancestor"])),(l()(),e.Ib(-1,null,[" of "])),(l()(),e.sb(150,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(152,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(153,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is a path from "])),(l()(),e.sb(156,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(158,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(159,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(162,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(164,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(165,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(168,0,null,null,0,"embed",[["height","188"],["src","OPERA_chain.pdf"]],null,null,null,null,null)),(l()(),e.sb(169,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:operachain] shows an example of an OPERA chain (DAG) constructed through the Lachesis protocol. Event blocks are represented by circles. Blocks of the same frame have the same color."])),(l()(),e.sb(171,0,null,null,1,"h2",[["id","basic-definitions"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Basic Definitions"])),(l()(),e.sb(173,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.sb(174,0,null,null,6,"span",[],null,null,null,null,null)),(l()(),e.sb(175,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Lachesis)"])),(l()(),e.sb(177,0,null,null,3,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The set of "])),(l()(),e.sb(179,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["protocols"])),(l()(),e.sb(181,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.sb(182,0,null,null,10,"span",[],null,null,null,null,null)),(l()(),e.sb(183,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Node)"])),(l()(),e.sb(185,0,null,null,7,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each machine that participates in the Lachesis protocol is called a "])),(l()(),e.sb(187,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["node"])),(l()(),e.Ib(-1,null,[". Let "])),(l()(),e.sb(190,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" denote the total number of nodes."])),(l()(),e.sb(193,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.sb(194,0,null,null,10,"span",[],null,null,null,null,null)),(l()(),e.sb(195,0,null,null,4,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(197,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[")"])),(l()(),e.sb(200,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A "])),(l()(),e.sb(202,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["constant"])),(l()(),e.Ib(-1,null,[" defined in the system."])),(l()(),e.sb(205,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.sb(206,0,null,null,15,"span",[],null,null,null,null,null)),(l()(),e.sb(207,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Peer node)"])),(l()(),e.sb(209,0,null,null,12,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A node "])),(l()(),e.sb(211,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(213,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(214,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" has "])),(l()(),e.sb(217,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.sb(219,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["peer nodes"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(222,0,null,null,29,"p",[],null,null,null,null,null)),(l()(),e.sb(223,0,null,null,28,"span",[],null,null,null,null,null)),(l()(),e.sb(224,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Process)"])),(l()(),e.sb(226,0,null,null,25,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A process "])),(l()(),e.sb(228,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.sb(230,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(231,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" represents a machine or a "])),(l()(),e.sb(234,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["node"])),(l()(),e.Ib(-1,null,[". The process identifier of "])),(l()(),e.sb(237,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.sb(239,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(240,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is "])),(l()(),e.sb(243,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". A set "])),(l()(),e.sb(246,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" = {1,...,"])),(l()(),e.sb(249,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["} denotes the set of process identifiers."])),(l()(),e.sb(252,0,null,null,35,"p",[],null,null,null,null,null)),(l()(),e.sb(253,0,null,null,34,"span",[],null,null,null,null,null)),(l()(),e.sb(254,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Channel)"])),(l()(),e.sb(256,0,null,null,31,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A process "])),(l()(),e.sb(258,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" can send messages to process "])),(l()(),e.sb(261,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" if there is a channel ("])),(l()(),e.sb(264,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[","])),(l()(),e.sb(267,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["). Let "])),(l()(),e.sb(270,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" \u2286 {("])),(l()(),e.sb(273,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[","])),(l()(),e.sb(276,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[") s.t. "])),(l()(),e.sb(279,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(282,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(285,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["} denote the set of channels."])),(l()(),e.sb(288,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),e.sb(289,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.sb(290,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Event block)"])),(l()(),e.sb(292,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each node can create event blocks, send (receive) messages to (from) other nodes.The structure of an event block includes the signature, generation time, transaction history, and hash information to references."])),(l()(),e.sb(294,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["All nodes can create event blocks. The information of the referenced event blocks can be copied by each node. The first event block of each node is called a "])),(l()(),e.sb(296,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["leaf event"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(299,0,null,null,40,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Suppose a node "])),(l()(),e.sb(301,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(303,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(304,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" creates an event "])),(l()(),e.sb(307,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(309,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(310,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" after an event "])),(l()(),e.sb(313,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(315,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(316,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(319,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(321,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(322,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". Each event block has exactly "])),(l()(),e.sb(325,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" references. One of the references is self-reference, and the other "])),(l()(),e.sb(328,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1 references point to the top events of "])),(l()(),e.sb(331,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(333,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(334,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s "])),(l()(),e.sb(337,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1 peer nodes."])),(l()(),e.sb(340,0,null,null,23,"p",[],null,null,null,null,null)),(l()(),e.sb(341,0,null,null,22,"span",[],null,null,null,null,null)),(l()(),e.sb(342,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Top event)"])),(l()(),e.sb(344,0,null,null,19,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(346,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a top event of a node "])),(l()(),e.sb(349,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(351,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(352,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" if there is no other event in "])),(l()(),e.sb(355,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(357,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(358,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" referencing "])),(l()(),e.sb(361,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(364,0,null,null,14,"p",[],null,null,null,null,null)),(l()(),e.sb(365,0,null,null,13,"span",[],null,null,null,null,null)),(l()(),e.sb(366,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Height Vector)"])),(l()(),e.sb(368,0,null,null,10,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The height vector is the number of event blocks "])),(l()(),e.sb(370,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["created"])),(l()(),e.Ib(-1,null,[" by the "])),(l()(),e.sb(373,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(375,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(376,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" node."])),(l()(),e.sb(379,0,null,null,8,"p",[],null,null,null,null,null)),(l()(),e.sb(380,0,null,null,7,"span",[],null,null,null,null,null)),(l()(),e.sb(381,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(In-degree Vector)"])),(l()(),e.sb(383,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The in-degree vector refers to the number of "])),(l()(),e.sb(385,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["edges"])),(l()(),e.Ib(-1,null,[" from other event blocks created by other nodes to the top event block of this node. The top event block indicates the most recently created event block by this node."])),(l()(),e.sb(388,0,null,null,52,"p",[],null,null,null,null,null)),(l()(),e.sb(389,0,null,null,51,"span",[],null,null,null,null,null)),(l()(),e.sb(390,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Ref)"])),(l()(),e.sb(392,0,null,null,48,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(394,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(396,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(397,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[' is called \u201cref" of event '])),(l()(),e.sb(400,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(402,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(403,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if the reference hash of "])),(l()(),e.sb(406,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(408,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(409,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" points to the event "])),(l()(),e.sb(412,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(414,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(415,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(418,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(420,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(421,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(424,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(425,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(427,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(429,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(430,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[". For simplicity, we can use \u21aa to denote a reference relationship (either \u21aa"])),(l()(),e.sb(433,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(434,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" or \u21aa"])),(l()(),e.sb(437,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(438,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(441,0,null,null,44,"p",[],null,null,null,null,null)),(l()(),e.sb(442,0,null,null,43,"span",[],null,null,null,null,null)),(l()(),e.sb(443,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Self-ref)"])),(l()(),e.sb(445,0,null,null,40,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(447,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(449,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(450,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[' is called \u201cself-ref" of event '])),(l()(),e.sb(453,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(455,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(456,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[", if the self-ref hash of "])),(l()(),e.sb(459,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(461,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(462,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" points to the event "])),(l()(),e.sb(465,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(467,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(468,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(471,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(473,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(474,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(477,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(478,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(480,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(482,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(483,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(486,0,null,null,23,"p",[],null,null,null,null,null)),(l()(),e.sb(487,0,null,null,22,"span",[],null,null,null,null,null)),(l()(),e.sb(488,0,null,null,4,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(490,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" references)"])),(l()(),e.sb(493,0,null,null,16,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each event block has at least "])),(l()(),e.sb(495,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" references. One of the references is self-reference, and the other "])),(l()(),e.sb(498,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1 references point to the top events of "])),(l()(),e.sb(501,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(503,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(504,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s "])),(l()(),e.sb(507,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1 peer nodes."])),(l()(),e.sb(510,0,null,null,68,"p",[],null,null,null,null,null)),(l()(),e.sb(511,0,null,null,67,"span",[],null,null,null,null,null)),(l()(),e.sb(512,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Self-ancestor)"])),(l()(),e.sb(514,0,null,null,64,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(516,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(518,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(519,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is self-ancestor of an event block "])),(l()(),e.sb(522,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(524,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(525,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is a sequence of events such that "])),(l()(),e.sb(528,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(530,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(531,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(534,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(535,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(537,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(539,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(542,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(543,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["\u2026\u21aa"])),(l()(),e.sb(546,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(547,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(549,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(551,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(552,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(555,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(556,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(558,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(560,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(561,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(564,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(566,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(567,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(570,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(571,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s**a"])),(l()(),e.sb(573,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(575,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(576,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(579,0,null,null,55,"p",[],null,null,null,null,null)),(l()(),e.sb(580,0,null,null,54,"span",[],null,null,null,null,null)),(l()(),e.sb(581,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Ancestor)"])),(l()(),e.sb(583,0,null,null,51,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(585,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(587,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(588,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is an ancestor of an event block "])),(l()(),e.sb(591,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(593,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(594,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is a sequence of events such that "])),(l()(),e.sb(597,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(599,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(600,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u2004\u21aa\u2004"])),(l()(),e.sb(603,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(605,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u21aa\u2004\u2026\u2004\u21aa\u2004"])),(l()(),e.sb(608,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(610,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(611,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["\u2004\u21aa\u2004"])),(l()(),e.sb(614,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(616,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(617,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(620,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(622,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(623,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(626,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(627,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(629,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(631,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(632,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(635,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For simplicity, we simply use "])),(l()(),e.sb(637,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(639,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(640,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(643,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(644,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(646,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(648,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(649,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" to refer both ancestor and self-ancestor relationship, unless we need to distinguish the two cases."])),(l()(),e.sb(652,0,null,null,32,"p",[],null,null,null,null,null)),(l()(),e.sb(653,0,null,null,31,"span",[],null,null,null,null,null)),(l()(),e.sb(654,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Flag Table)"])),(l()(),e.sb(656,0,null,null,28,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The flag table is a "])),(l()(),e.sb(658,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(660,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" matrix, where n is the number of nodes and k is the number of roots that an event block can reach. If an event block "])),(l()(),e.sb(664,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" created by "])),(l()(),e.sb(667,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(669,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(670,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" node can reach "])),(l()(),e.sb(673,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(675,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(676,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" root, then the flag table stores the hash value of the "])),(l()(),e.sb(679,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(681,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(682,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" root."])),(l()(),e.sb(685,0,null,null,1,"h2",[["id","lamport-timestamps"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lamport timestamps"])),(l()(),e.sb(687,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Our Lachesis protocols relies on Lamport timestamps to define a topological ordering of event blocks in OPERA chain. By using Lamport timestamps, we do not rely on physical clocks to determine a partial ordering of events."])),(l()(),e.sb(689,0,null,null,94,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The \u201chappened before\u201c relation, denoted by \u2192, gives a partial ordering of events from a distributed system of nodes. Each node "])),(l()(),e.sb(691,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(693,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(694,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" (also called a process) is identified by its process identifier "])),(l()(),e.sb(697,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". For a pair of event blocks "])),(l()(),e.sb(700,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(703,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,['\u2032, the relation \u201d\u2192" satisfies: (1) If '])),(l()(),e.sb(706,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(709,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032 are events of process "])),(l()(),e.sb(712,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(714,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(715,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(718,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" comes before "])),(l()(),e.sb(721,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032, then "])),(l()(),e.sb(724,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(727,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032. (2) If "])),(l()(),e.sb(730,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is the send("])),(l()(),e.sb(733,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[") by one process and "])),(l()(),e.sb(736,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032 is the receive("])),(l()(),e.sb(739,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[") by another process, then "])),(l()(),e.sb(742,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(745,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032. (3) If "])),(l()(),e.sb(748,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(751,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032 and "])),(l()(),e.sb(754,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032\u2192"])),(l()(),e.sb(757,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2033 then "])),(l()(),e.sb(760,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(763,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2033. Two distinct events "])),(l()(),e.sb(766,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(769,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032 are said to be concurrent if "])),(l()(),e.sb(772,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2004\u219b\u2004"])),(l()(),e.sb(775,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032 and "])),(l()(),e.sb(778,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032\u219b"])),(l()(),e.sb(781,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(784,0,null,null,82,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For an arbitrary total ordering \u227a of the processes, a relation \u21d2 is defined as follows: if "])),(l()(),e.sb(786,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is an event in process "])),(l()(),e.sb(789,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(791,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(792,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(795,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032 is an event in process "])),(l()(),e.sb(798,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(800,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(801,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(804,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2004\u21d2\u2004"])),(l()(),e.sb(807,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032 if and only if either (i) "])),(l()(),e.sb(810,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(812,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(813,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(816,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[")<"])),(l()(),e.sb(819,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(821,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(822,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(825,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032) or (ii) "])),(l()(),e.sb(828,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(831,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[")="])),(l()(),e.sb(834,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(836,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(837,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(840,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032) and "])),(l()(),e.sb(843,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(845,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(846,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u227a\u2004"])),(l()(),e.sb(849,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(851,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(852,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[". This defines a total ordering, and that the Clock Condition implies that if "])),(l()(),e.sb(855,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(858,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032 then "])),(l()(),e.sb(861,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2004\u21d2\u2004"])),(l()(),e.sb(864,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2032."])),(l()(),e.sb(867,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We use this total ordering in our Lachesis protocol. This ordering is used to determine consensus time, as described in Section [se:lca]."])),(l()(),e.sb(869,0,null,null,41,"p",[],null,null,null,null,null)),(l()(),e.sb(870,0,null,null,40,"span",[],null,null,null,null,null)),(l()(),e.sb(871,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Happened-Immediate-Before)"])),(l()(),e.sb(873,0,null,null,37,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(875,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(877,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(878,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is said Happened-Immediate-Before an event block "])),(l()(),e.sb(881,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(883,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(884,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(887,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(889,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(890,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is a (self-) ref of "])),(l()(),e.sb(893,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(895,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(896,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(899,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(901,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(902,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u21a6\u2004"])),(l()(),e.sb(905,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(907,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(908,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(911,0,null,null,41,"p",[],null,null,null,null,null)),(l()(),e.sb(912,0,null,null,40,"span",[],null,null,null,null,null)),(l()(),e.sb(913,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Happened-before)"])),(l()(),e.sb(915,0,null,null,37,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(917,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(919,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(920,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is said Happened-Before an event block "])),(l()(),e.sb(923,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(925,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(926,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(929,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(931,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(932,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is a (self-) ancestor of "])),(l()(),e.sb(935,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(937,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(938,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(941,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(943,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(944,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(947,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(949,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(950,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(953,0,null,null,133,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Happened-before is the relationship between nodes which have event blocks. If there is a path from an event block "])),(l()(),e.sb(955,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(957,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(958,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(961,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(963,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(964,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(967,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(969,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(970,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" Happened-before "])),(l()(),e.sb(973,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(975,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(976,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[". \u201c"])),(l()(),e.sb(979,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(981,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(982,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" Happened-before "])),(l()(),e.sb(985,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(987,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(988,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,['" means that the node creating '])),(l()(),e.sb(991,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(993,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(994,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" knows event block "])),(l()(),e.sb(997,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(999,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1e3,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". This relation is the transitive closure of happens-immediately-before. Thus, an event "])),(l()(),e.sb(1003,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1005,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1006,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" happened before an event "])),(l()(),e.sb(1009,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1011,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1012,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" if one of the followings happens: (a) "])),(l()(),e.sb(1015,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1017,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1018,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(1021,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1022,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1024,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1026,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1027,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", (b) "])),(l()(),e.sb(1030,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1032,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1033,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(1036,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1037,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1039,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1041,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1042,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", or (c) "])),(l()(),e.sb(1045,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1047,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1048,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(1051,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1052,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(1054,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1056,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1057,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". The happened-before relation of events form an acyclic directed graph "])),(l()(),e.sb(1060,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2032=("])),(l()(),e.sb(1063,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1066,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["\u2032) such that an edge ("])),(l()(),e.sb(1069,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1071,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1072,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1075,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1077,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1078,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[")\u2208"])),(l()(),e.sb(1081,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["\u2032 has a reverse direction of the same edge in "])),(l()(),e.sb(1084,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1087,0,null,null,29,"p",[],null,null,null,null,null)),(l()(),e.sb(1088,0,null,null,28,"span",[],null,null,null,null,null)),(l()(),e.sb(1089,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Concurrent)"])),(l()(),e.sb(1091,0,null,null,25,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Two event blocks "])),(l()(),e.sb(1093,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1095,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1096,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(1099,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1101,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1102,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" are said concurrent if neither of them happened before the other. Denoted by "])),(l()(),e.sb(1105,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1107,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1108,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2225\u2004"])),(l()(),e.sb(1111,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1113,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1114,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1117,0,null,null,91,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Given two vertices "])),(l()(),e.sb(1119,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1121,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1122,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(1125,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1127,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1128,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" both contained in two OPERA chains (DAGs) "])),(l()(),e.sb(1131,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(1133,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(1136,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(1138,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" on two nodes. We have the following:\n(1) "])),(l()(),e.sb(1141,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1143,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1144,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(1147,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1149,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1150,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(1153,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(1155,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(1158,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1160,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1161,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(1164,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1166,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1167,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(1170,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(1172,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[";\n(2)"])),(l()(),e.sb(1175,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1177,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1178,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2225\u2004"])),(l()(),e.sb(1181,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1183,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1184,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(1187,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(1189,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(1192,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1194,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1195,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2225\u2004"])),(l()(),e.sb(1198,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1200,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1201,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(1204,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(1206,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1209,0,null,null,1,"h2",[["id","state-definitions"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["State Definitions"])),(l()(),e.sb(1211,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each node has a local state, a collection of histories, messages, event blocks, and peer information, we describe the components of each."])),(l()(),e.sb(1213,0,null,null,17,"p",[],null,null,null,null,null)),(l()(),e.sb(1214,0,null,null,16,"span",[],null,null,null,null,null)),(l()(),e.sb(1215,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(State)"])),(l()(),e.sb(1217,0,null,null,13,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A state of a process "])),(l()(),e.sb(1219,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is denoted by "])),(l()(),e.sb(1222,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1224,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1225,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1227,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1228,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1231,0,null,null,39,"p",[],null,null,null,null,null)),(l()(),e.sb(1232,0,null,null,38,"span",[],null,null,null,null,null)),(l()(),e.sb(1233,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Local State)"])),(l()(),e.sb(1235,0,null,null,35,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A local state consists of a sequence of event blocks "])),(l()(),e.sb(1237,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1239,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1240,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1242,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1243,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(1246,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1248,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1250,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1251,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1254,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1256,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1258,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1259,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006\u2026,\u2006"])),(l()(),e.sb(1262,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1264,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1265,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1267,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1268,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1271,0,null,null,55,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In a DAG-based protocol, each "])),(l()(),e.sb(1273,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1275,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1276,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1278,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1279,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" event block is valid only if the reference blocks exist before it. From a local state "])),(l()(),e.sb(1282,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1284,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1285,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1287,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1288,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", one can reconstruct a unique DAG. That is, the mapping from a local state "])),(l()(),e.sb(1291,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1293,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1294,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1296,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1297,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" into a DAG is "])),(l()(),e.sb(1300,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["injective"])),(l()(),e.Ib(-1,null,[" or one-to-one. Thus, for Fantom, we can simply denote the "])),(l()(),e.sb(1303,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th local state of a process "])),(l()(),e.sb(1306,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" by the DAG "])),(l()(),e.sb(1309,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(1311,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1312,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1314,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1315,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" (often we simply use "])),(l()(),e.sb(1318,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(1320,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1321,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" to denote the current local state of a process "])),(l()(),e.sb(1324,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(1327,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),e.sb(1328,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.sb(1329,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Action)"])),(l()(),e.sb(1331,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An action is a function from one local state to another local state."])),(l()(),e.sb(1333,0,null,null,81,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Generally speaking, an action can be one of: a "])),(l()(),e.sb(1335,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1337,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1341,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[") action where "])),(l()(),e.sb(1344,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" is a message, a "])),(l()(),e.sb(1347,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1349,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1352,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1355,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1359,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[") action, and an internal action. A message "])),(l()(),e.sb(1362,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" is a triple \u27e8"])),(l()(),e.sb(1365,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1368,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1371,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,["\u27e9 where "])),(l()(),e.sb(1374,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(1377,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" is the sender of the message, "])),(l()(),e.sb(1380,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(1383,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" is the message recipient, and "])),(l()(),e.sb(1386,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" is the body of the message. Let "])),(l()(),e.sb(1389,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.Ib(-1,null,[" denote the set of messages. In the Lachesis protocol, "])),(l()(),e.sb(1392,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" consists of the content of an event block "])),(l()(),e.sb(1395,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[".\nSemantics-wise, in Lachesis, there are two actions that can change a process\u2019s local state: creating a new event and receiving an event from another process.\n"])),(l()(),e.sb(1398,0,null,null,16,"span",[],null,null,null,null,null)),(l()(),e.sb(1399,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Event)"])),(l()(),e.sb(1401,0,null,null,13,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event is a tuple \u27e8"])),(l()(),e.sb(1403,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1406,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1409,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["\u2032\u27e9 consisting of a state, an action, and a state. Sometimes, the event can be represented by the end state "])),(l()(),e.sb(1412,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["\u2032."])),(l()(),e.sb(1415,0,null,null,44,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The "])),(l()(),e.sb(1417,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th event in history "])),(l()(),e.sb(1420,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1422,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1423,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" of process "])),(l()(),e.sb(1426,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is \u27e8"])),(l()(),e.sb(1429,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1431,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1432,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.sb(1435,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1436,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1439,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1442,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1444,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1445,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1447,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1448,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u27e9, denoted by "])),(l()(),e.sb(1451,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1453,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1454,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1456,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1457,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1460,0,null,null,26,"p",[],null,null,null,null,null)),(l()(),e.sb(1461,0,null,null,25,"span",[],null,null,null,null,null)),(l()(),e.sb(1462,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Local history)"])),(l()(),e.sb(1464,0,null,null,22,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A local history "])),(l()(),e.sb(1466,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1468,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1469,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" of process "])),(l()(),e.sb(1472,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is a (possibly infinite) sequence of alternating local states \u2014 beginning with a distinguished initial state. A set "])),(l()(),e.sb(1475,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.sb(1477,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1478,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" of possible local histories for each process "])),(l()(),e.sb(1481,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(1484,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1487,0,null,null,115,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The state of a process can be obtained from its initial state and the sequence of actions or events that have occurred up to the current state. In the Lachesis protocol, we use append-only semantics. The local history may be equivalently described as either of the following:\n"])),(l()(),e.sb(1489,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1491,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1492,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(1495,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1497,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1499,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1500,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1503,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.sb(1505,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1507,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1508,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1511,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.sb(1513,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(1515,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1516,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1519,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.sb(1521,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.sb(1523,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1524,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2026\n"])),(l()(),e.sb(1527,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1529,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1530,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(1533,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1535,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1537,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1538,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1541,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1543,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1545,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1546,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1549,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1551,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(1553,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1554,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1557,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1559,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.sb(1561,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1562,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2026\n"])),(l()(),e.sb(1565,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1567,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1568,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(1571,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1573,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1575,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1576,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1579,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1581,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1583,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1584,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1587,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1589,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(1591,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1592,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1595,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1597,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.sb(1599,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1600,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006\u2026"])),(l()(),e.sb(1603,0,null,null,83,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In Lachesis, a local history is equivalently expressed as:\n"])),(l()(),e.sb(1605,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1607,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1608,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(1611,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(1613,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1615,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1616,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1619,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(1621,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(1623,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1624,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1627,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(1629,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(1631,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1632,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1635,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(1637,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.sb(1639,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1640,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006\u2026 where "])),(l()(),e.sb(1643,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(1645,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1646,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1648,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1649,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is the "])),(l()(),e.sb(1652,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th local DAG (local state) of the process "])),(l()(),e.sb(1655,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". "])),(l()(),e.sb(1658,0,null,null,28,"span",[],null,null,null,null,null)),(l()(),e.sb(1659,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Run)"])),(l()(),e.sb(1661,0,null,null,25,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each asynchronous run is a vector of local histories. Denoted by "])),(l()(),e.sb(1663,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2004=\u2004\u27e8"])),(l()(),e.sb(1666,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1668,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1671,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1673,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1676,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1678,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[",\u2006..."])),(l()(),e.sb(1681,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1683,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1684,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,["\u27e9."])),(l()(),e.sb(1687,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let "])),(l()(),e.sb(1689,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[" denote the set of asynchronous runs. We can now use Lamport\u2019s theory to talk about global states of an asynchronous system. A global state of run "])),(l()(),e.sb(1692,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[" is an "])),(l()(),e.sb(1695,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["-vector of prefixes of local histories of "])),(l()(),e.sb(1698,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[", one prefix per process. The happens-before relation can be used to define a consistent global state, often termed a consistent cut, as follows."])),(l()(),e.sb(1701,0,null,null,1,"h2",[["id","consistent-cut"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Consistent Cut"])),(l()(),e.sb(1703,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,['Consistent cuts represent the concept of scalar time in distributed computation, it is possible to distinguish between a \u201cbefore" and an \u201cafter"'])),(l()(),e.sb(1705,0,null,null,39,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the Lachesis protocol, an OPERA chain "])),(l()(),e.sb(1707,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004=\u2004("])),(l()(),e.sb(1710,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1713,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[") is a directed acyclic graph (DAG). "])),(l()(),e.sb(1716,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" is a set of vertices and "])),(l()(),e.sb(1719,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" is a set of edges. DAG is a directed graph with no cycle. There is no path that has source and destination at the same vertex. A path is a sequence of vertices ("])),(l()(),e.sb(1722,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1724,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(1727,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1729,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", ..., "])),(l()(),e.sb(1732,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1734,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1735,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(1739,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1741,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1742,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[") that uses no edge more than once."])),(l()(),e.sb(1745,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An asynchronous system consists of the following sets: a set "])),(l()(),e.sb(1747,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" of process identifiers; a set "])),(l()(),e.sb(1750,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" of channels; a set "])),(l()(),e.sb(1753,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.sb(1755,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1756,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is the set of possible local histories for each process "])),(l()(),e.sb(1759,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["; a set "])),(l()(),e.sb(1762,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" of asynchronous runs; a set "])),(l()(),e.sb(1765,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.Ib(-1,null,[" of all messages."])),(l()(),e.sb(1768,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each process / node in Lachesis selects "])),(l()(),e.sb(1770,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" other nodes as peers. For certain gossip protocol, nodes may be constrained to gossip with its "])),(l()(),e.sb(1773,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peers. In such a case, the set of channels "])),(l()(),e.sb(1776,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" can be modelled as follows. If node "])),(l()(),e.sb(1779,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" selects node "])),(l()(),e.sb(1782,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" as a peer, then ("])),(l()(),e.sb(1785,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1788,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[")\u2208"])),(l()(),e.sb(1791,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[". In general, one can express the history of each node in DAG-based protocol in general or in Lachesis protocol in particular, in the same manner as in the CCK paper ."])),(l()(),e.sb(1794,0,null,null,50,"p",[],null,null,null,null,null)),(l()(),e.sb(1795,0,null,null,49,"span",[],null,null,null,null,null)),(l()(),e.sb(1796,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Consistent cut)"])),(l()(),e.sb(1798,0,null,null,46,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A consistent cut of a run "])),(l()(),e.sb(1800,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[" is any global state such that if "])),(l()(),e.sb(1803,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1805,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1806,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.sb(1808,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1809,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(1812,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1814,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1815,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(1817,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1818,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(1821,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1823,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1824,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(1826,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1827,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" is in the global state, then "])),(l()(),e.sb(1830,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(1832,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1833,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.sb(1835,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1836,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is also in the global state. Denoted by "])),(l()(),e.sb(1839,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1842,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(1845,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The concept of consistent cut formalizes such a global state of a run. A consistent cut consists of all consistent DAG chains. A received event block exists in the global state implies the existence of the original event block. Note that a consistent cut is simply a vector of local states; we will use the notation "])),(l()(),e.sb(1847,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1850,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")["])),(l()(),e.sb(1853,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["] to indicate the local state of "])),(l()(),e.sb(1856,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in cut "])),(l()(),e.sb(1859,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" of run "])),(l()(),e.sb(1862,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1865,0,null,null,117,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A message chain of an asynchronous run is a sequence of messages "])),(l()(),e.sb(1867,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1869,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(1872,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1874,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(1877,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1879,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[", \u2026, such that, for all "])),(l()(),e.sb(1882,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(1885,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1887,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1890,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1893,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1897,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1899,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1900,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1903,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1905,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1909,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1911,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1912,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,["). Consequently, "])),(l()(),e.sb(1916,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1918,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1922,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1924,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1927,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1929,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1932,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1935,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1939,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1941,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1944,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1946,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1950,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1952,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1955,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1957,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1960,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1963,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1967,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1969,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1972,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1974,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1978,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1980,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[") \u2026."])),(l()(),e.sb(1983,0,null,null,28,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The formal semantics of an asynchronous system is given via the satisfaction relation \u22a2. Intuitively "])),(l()(),e.sb(1985,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1988,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(1991,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[", \u201c"])),(l()(),e.sb(1994,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1997,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") satisfies "])),(l()(),e.sb(2e3,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[",\u201d if fact "])),(l()(),e.sb(2003,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true in cut "])),(l()(),e.sb(2006,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" of run "])),(l()(),e.sb(2009,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2012,0,null,null,87,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We assume that we are given a function "])),(l()(),e.sb(2014,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c0"])),(l()(),e.Ib(-1,null,[" that assigns a truth value to each primitive proposition "])),(l()(),e.sb(2017,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[". The truth of a primitive proposition "])),(l()(),e.sb(2020,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(2023,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2026,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") is determined by "])),(l()(),e.sb(2029,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c0"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2032,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[". This defines "])),(l()(),e.sb(2035,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2038,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(2041,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[".\n"])),(l()(),e.sb(2044,0,null,null,55,"span",[],null,null,null,null,null)),(l()(),e.sb(2045,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Equivalent cuts)"])),(l()(),e.sb(2047,0,null,null,52,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Two cuts "])),(l()(),e.sb(2049,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2052,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") and "])),(l()(),e.sb(2055,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*"])),(l()(),e.Ib(-1,null,["\u2032"])),(l()(),e.sb(2058,0,null,null,7,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2060,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032) are equivalent with respect to "])),(l()(),e.sb(2063,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" if:\n"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2067,0,null,null,7,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2069,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u223c"])),(l()(),e.sb(2072,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2073,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2076,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["*\u2032"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2079,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032)\u2004\u21d4\u2004"])),(l()(),e.sb(2082,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2085,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")["])),(l()(),e.sb(2088,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["]="])),(l()(),e.sb(2091,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*"])),(l()(),e.Ib(-1,null,["\u2032"])),(l()(),e.sb(2094,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["*("])),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.sb(2097,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2032)["])),(l()(),e.Ib(-1,null,["i*]\n."])),(l()(),e.sb(2100,0,null,null,73,"p",[],null,null,null,null,null)),(l()(),e.sb(2101,0,null,null,72,"span",[],null,null,null,null,null)),(l()(),e.sb(2102,0,null,null,7,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2104,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" knows "])),(l()(),e.sb(2107,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")"])),(l()(),e.sb(2110,0,null,null,63,"span",[],null,null,null,null,null)),(l()(),e.sb(2111,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["K"])),(l()(),e.sb(2113,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2114,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2117,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") represents the statement \u201c"])),(l()(),e.sb(2120,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true in all possible consistent global states that include "])),(l()(),e.sb(2123,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s local state\u201d.\n"])),(l()(),e.sb(2126,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2129,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(2132,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["K"])),(l()(),e.sb(2134,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2135,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2138,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\u21d4\u2200"])),(l()(),e.sb(2141,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*"])),(l()(),e.Ib(-1,null,["\u2032"])),(l()(),e.sb(2144,0,null,null,4,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2146,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032)("])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2150,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["*\u2032"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2153,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032)\u223c"])),(l()(),e.sb(2156,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2157,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(2159,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2162,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") \u21d2 "])),(l()(),e.sb(2165,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*"])),(l()(),e.Ib(-1,null,["\u2032"])),(l()(),e.sb(2168,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["*("])),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.sb(2171,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2032)\u2004\u22a2\u2004"])),(l()(),e.Ib(-1,null,["\u03d5*)\n"])),(l()(),e.sb(2174,0,null,null,73,"p",[],null,null,null,null,null)),(l()(),e.sb(2175,0,null,null,72,"span",[],null,null,null,null,null)),(l()(),e.sb(2176,0,null,null,7,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2178,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" partially knows "])),(l()(),e.sb(2181,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")"])),(l()(),e.sb(2184,0,null,null,63,"span",[],null,null,null,null,null)),(l()(),e.sb(2185,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2187,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2188,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2191,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") represents the statement \u201cthere is some consistent global state in this run that includes "])),(l()(),e.sb(2194,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s local state, in which "])),(l()(),e.sb(2197,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true.\u201d\n"])),(l()(),e.sb(2200,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2203,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(2206,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2208,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2209,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2212,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\u21d4\u2203"])),(l()(),e.sb(2215,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*"])),(l()(),e.Ib(-1,null,["\u2032"])),(l()(),e.sb(2218,0,null,null,4,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2220,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")("])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2224,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["*\u2032"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2227,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u223c"])),(l()(),e.sb(2230,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2231,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(2233,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2236,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") \u2227 "])),(l()(),e.sb(2239,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*"])),(l()(),e.Ib(-1,null,["\u2032"])),(l()(),e.sb(2242,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["*("])),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.sb(2245,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.Ib(-1,null,["\u03d5*)\n"])),(l()(),e.sb(2248,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(2249,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Majority concurrently knows)"])),(l()(),e.sb(2251,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The next modal operator is written "])),(l()(),e.sb(2253,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2255,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2256,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" and stands for \u201cmajority concurrently knows.\u201d The definition of "])),(l()(),e.sb(2259,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2261,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2262,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2265,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") is as follows."])),(l()(),e.sb(2268,0,null,null,48,"p",[],null,null,null,null,null)),(l()(),e.sb(2269,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2271,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2272,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2275,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")="])),(l()(),e.sb(2278,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2279,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(2281,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,["\u22c0"])),(l()(),e.sb(2285,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2286,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(2289,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(2291,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["K"])),(l()(),e.sb(2293,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2294,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(2296,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2298,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2299,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2302,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["), where "])),(l()(),e.sb(2305,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,["\u2004\u2286\u2004"])),(l()(),e.sb(2308,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" and |"])),(l()(),e.sb(2311,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,["|>2"])),(l()(),e.sb(2314,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3."])),(l()(),e.sb(2317,0,null,null,42,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This is adapted from the \u201ceveryone concurrently knows\u201d in CCK paper . In the presence of one-third of faulty nodes, the original operator \u201ceveryone concurrently knows\u201d is sometimes not feasible. Our modal operator "])),(l()(),e.sb(2319,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2321,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2322,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2325,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") fits precisely the semantics for BFT systems, in which unreliable processes may exist.\n"])),(l()(),e.sb(2328,0,null,null,31,"span",[],null,null,null,null,null)),(l()(),e.sb(2329,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Concurrent common knowledge)"])),(l()(),e.sb(2331,0,null,null,28,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The last modal operator is concurrent common knowledge (CCK), denoted by "])),(l()(),e.sb(2333,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2335,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2336,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[". "])),(l()(),e.sb(2339,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2341,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2342,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2345,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") is defined as a fixed point of "])),(l()(),e.sb(2348,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2350,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2351,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2354,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2005\u2227\u2005"])),(l()(),e.sb(2357,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(2360,0,null,null,40,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["CCK defines a state of process knowledge that implies that all processes are in that same state of knowledge, with respect to "])),(l()(),e.sb(2362,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[", along some cut of the run. In other words, we want a state of knowledge "])),(l()(),e.sb(2365,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,[" satisfying: "])),(l()(),e.sb(2368,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(2371,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2373,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2374,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2377,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2005\u2227\u2005"])),(l()(),e.sb(2380,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,["). "])),(l()(),e.sb(2383,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2385,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2386,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" will be defined semantically as the weakest such fixed point, namely as the greatest fixed-point of "])),(l()(),e.sb(2389,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2391,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2392,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2395,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2005\u2227\u2005"])),(l()(),e.sb(2398,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,[").It therefore satisfies:"])),(l()(),e.sb(2401,0,null,null,27,"p",[],null,null,null,null,null)),(l()(),e.sb(2402,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2404,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2405,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2408,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\u21d4"])),(l()(),e.sb(2411,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2413,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2414,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2417,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2005\u2227\u2005"])),(l()(),e.sb(2420,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2422,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2423,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2426,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["))"])),(l()(),e.sb(2429,0,null,null,120,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Thus, "])),(l()(),e.sb(2431,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2433,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2434,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2437,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") states that there is some cut in the same asynchronous run "])),(l()(),e.sb(2440,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[" including "])),(l()(),e.sb(2443,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s local state, such that "])),(l()(),e.sb(2446,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true in that cut.\nNote that "])),(l()(),e.sb(2449,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" implies "])),(l()(),e.sb(2452,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2454,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2455,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2458,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["). But it is not the case, in general, that "])),(l()(),e.sb(2461,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2463,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2464,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2467,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") implies "])),(l()(),e.sb(2470,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" or even that "])),(l()(),e.sb(2473,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2475,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2476,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2479,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") implies "])),(l()(),e.sb(2482,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[". The truth of "])),(l()(),e.sb(2485,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(2487,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2488,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2491,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") is determined with respect to some cut "])),(l()(),e.sb(2494,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2497,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["). A process cannot distinguish which cut, of the perhaps many cuts that are in the run and consistent with its local state, satisfies "])),(l()(),e.sb(2500,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["; it can only know the existence of such a cut.\n"])),(l()(),e.sb(2503,0,null,null,46,"span",[],null,null,null,null,null)),(l()(),e.sb(2504,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Global fact)"])),(l()(),e.sb(2506,0,null,null,43,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Fact "])),(l()(),e.sb(2508,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is valid in system "])),(l()(),e.sb(2511,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[", denoted by "])),(l()(),e.sb(2514,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004"])),(l()(),e.sb(2517,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[", if "])),(l()(),e.sb(2520,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true in all cuts of all runs of "])),(l()(),e.sb(2523,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[".\n"])),(l()(),e.sb(2526,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004"])),(l()(),e.sb(2529,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2004\u21d4\u2004(\u2200"])),(l()(),e.sb(2532,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(2535,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[")(\u2200"])),(l()(),e.sb(2538,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[")("])),(l()(),e.sb(2541,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2544,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(2547,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\n"])),(l()(),e.sb(2550,0,null,null,47,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Fact "])),(l()(),e.sb(2552,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is valid, denoted \u22a2"])),(l()(),e.sb(2555,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[", if "])),(l()(),e.sb(2558,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is valid in all systems, i.e. (\u2200"])),(l()(),e.sb(2561,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[")("])),(l()(),e.sb(2564,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004"])),(l()(),e.sb(2567,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[").\n"])),(l()(),e.sb(2570,0,null,null,27,"span",[],null,null,null,null,null)),(l()(),e.sb(2571,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Local fact)"])),(l()(),e.sb(2573,0,null,null,24,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A fact "])),(l()(),e.sb(2575,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is local to process "])),(l()(),e.sb(2578,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in system "])),(l()(),e.sb(2581,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(2584,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004("])),(l()(),e.sb(2587,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2004\u21d2\u2004"])),(l()(),e.sb(2590,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["K"])),(l()(),e.sb(2592,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2593,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(2595,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(2598,0,null,null,1,"h2",[["id","dominator-graph-theory-"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Dominator (graph theory)"])),(l()(),e.sb(2600,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In a graph "])),(l()(),e.sb(2602,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004=\u2004("])),(l()(),e.sb(2605,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(2608,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(2611,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[") a dominator is the relation between two vertices. A vertex "])),(l()(),e.sb(2614,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is dominated by another vertex "])),(l()(),e.sb(2617,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["w"])),(l()(),e.Ib(-1,null,[", if every path in the graph from the root "])),(l()(),e.sb(2620,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(2623,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" have to go through "])),(l()(),e.sb(2626,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["w"])),(l()(),e.Ib(-1,null,[". Furthermore, the immediate dominator for a vertex "])),(l()(),e.sb(2629,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is the last of "])),(l()(),e.sb(2632,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2019s dominators, which every path in the graph have to go through to reach "])),(l()(),e.sb(2635,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2638,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),e.sb(2639,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.sb(2640,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Pseudo top)"])),(l()(),e.sb(2642,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A pseudo vertex, called top, is the parent of all top event blocks. Denoted by \u22a4."])),(l()(),e.sb(2644,0,null,null,24,"p",[],null,null,null,null,null)),(l()(),e.sb(2645,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.sb(2646,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Pseudo bottom)"])),(l()(),e.sb(2648,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A pseudo vertex, called bottom, is the child of all leaf event blocks. Denoted by \u22a5."])),(l()(),e.Ib(-1,null,[" With the pseudo vertices, we have \u22a5 happened-before all event blocks. Also all event blocks happened-before \u22a4. That is, for all event "])),(l()(),e.sb(2651,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2653,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2654,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", \u22a5\u2004\u2192\u2004"])),(l()(),e.sb(2657,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2659,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2660,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2663,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2665,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2666,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004\u22a4."])),(l()(),e.sb(2669,0,null,null,41,"p",[],null,null,null,null,null)),(l()(),e.sb(2670,0,null,null,40,"span",[],null,null,null,null,null)),(l()(),e.sb(2671,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Dom)"])),(l()(),e.sb(2673,0,null,null,37,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(2675,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2677,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2678,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" dominates an event "])),(l()(),e.sb(2681,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2683,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2684,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" if every path from \u22a4 to "])),(l()(),e.sb(2687,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2689,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2690,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" must go through "])),(l()(),e.sb(2693,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2695,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2696,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(2699,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2701,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2702,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u2004\u226b\u2004"])),(l()(),e.sb(2705,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2707,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2708,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2711,0,null,null,56,"p",[],null,null,null,null,null)),(l()(),e.sb(2712,0,null,null,55,"span",[],null,null,null,null,null)),(l()(),e.sb(2713,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Strict dom)"])),(l()(),e.sb(2715,0,null,null,52,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(2717,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2719,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2720,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" strictly dominates an event "])),(l()(),e.sb(2723,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2725,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2726,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(2729,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2731,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2732,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u2004\u226b\u2004"])),(l()(),e.sb(2735,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2737,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2738,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2741,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2743,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2744,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" does not equal "])),(l()(),e.sb(2747,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2749,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2750,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(2753,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2755,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2756,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u226b"])),(l()(),e.sb(2759,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2760,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(2762,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2764,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2765,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2768,0,null,null,56,"p",[],null,null,null,null,null)),(l()(),e.sb(2769,0,null,null,55,"span",[],null,null,null,null,null)),(l()(),e.sb(2770,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Domfront)"])),(l()(),e.sb(2772,0,null,null,52,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A vertex "])),(l()(),e.sb(2774,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2776,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2777,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" is said \u201cdomfront\u201d a vertex "])),(l()(),e.sb(2780,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2782,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2783,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(2786,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2788,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2789,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" dominates an immediate predecessor of "])),(l()(),e.sb(2792,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2794,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2795,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", but "])),(l()(),e.sb(2798,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2800,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2801,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" does not strictly dominate "])),(l()(),e.sb(2804,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2806,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2807,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(2810,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2812,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2813,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u226b"])),(l()(),e.sb(2816,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2817,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2819,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2821,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2822,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2825,0,null,null,41,"p",[],null,null,null,null,null)),(l()(),e.sb(2826,0,null,null,40,"span",[],null,null,null,null,null)),(l()(),e.sb(2827,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Dominance frontier)"])),(l()(),e.sb(2829,0,null,null,37,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The dominance frontier of a vertex "])),(l()(),e.sb(2831,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2833,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2834,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" is the set of all nodes "])),(l()(),e.sb(2837,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2839,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2840,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(2843,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2845,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2846,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u226b"])),(l()(),e.sb(2849,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2850,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2852,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2854,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2855,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(2858,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D**F"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2861,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2863,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2864,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(2867,0,null,null,31,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["From the above definitions of domfront and dominance frontier, the following holds. If "])),(l()(),e.sb(2869,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2871,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2872,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u226b"])),(l()(),e.sb(2875,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(2876,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2878,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2880,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2881,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(2884,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2886,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2887,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(2890,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D**F"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2893,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2895,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2896,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(2899,0,null,null,1,"h2",[["id","opera-chain-dag-"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["OPERA chain (DAG)"])),(l()(),e.sb(2901,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The core idea of the Lachesis protocol is to use a DAG-based structure, called the OPERA chain for our consensus algorithm. In the Lachesis protocol, a (participant) node is a server (machine) of the distributed system. Each node can create messages, send messages to, and receive messages from, other nodes. The communication between nodes is asynchronous."])),(l()(),e.sb(2903,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let "])),(l()(),e.sb(2905,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" be the number of participant nodes. For consensus, the algorithm examines whether an event block is "])),(l()(),e.sb(2908,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["dominated"])),(l()(),e.Ib(-1,null,[" by 2"])),(l()(),e.sb(2911,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 nodes, where "])),(l()(),e.sb(2914,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of all nodes. The Happen-before relation of event blocks with 2"])),(l()(),e.sb(2917,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 nodes means that more than two-thirds of all nodes in the OPERA chain know the event block."])),(l()(),e.sb(2920,0,null,null,64,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The OPERA chain (DAG) is the local view of the DAG held by each node, this local view is used to identify topological ordering, select Clotho, and create time consensus through Atropos selection. OPERA chain is a DAG graph "])),(l()(),e.sb(2922,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004=\u2004("])),(l()(),e.sb(2925,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(2928,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[") consisting of "])),(l()(),e.sb(2931,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" vertices and "])),(l()(),e.sb(2934,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" edges. Each vertex "])),(l()(),e.sb(2937,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2939,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2940,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(2943,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" is an event block. An edge ("])),(l()(),e.sb(2946,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2948,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2949,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(2952,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2954,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2955,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[")\u2208"])),(l()(),e.sb(2958,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" refers to a hashing reference from "])),(l()(),e.sb(2961,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2963,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2964,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(2967,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2969,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2970,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["; that is, "])),(l()(),e.sb(2973,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2975,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2976,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u21aa\u2004"])),(l()(),e.sb(2979,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2981,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2982,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2985,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),e.sb(2986,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.sb(2987,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Leaf)"])),(l()(),e.sb(2989,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The first created event block of a node is called a leaf event block."])),(l()(),e.sb(2991,0,null,null,14,"p",[],null,null,null,null,null)),(l()(),e.sb(2992,0,null,null,13,"span",[],null,null,null,null,null)),(l()(),e.sb(2993,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Root)"])),(l()(),e.sb(2995,0,null,null,10,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The leaf event block of a node is a root. When an event block "])),(l()(),e.sb(2997,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" can reach more than 2"])),(l()(),e.sb(3e3,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 of the roots in the previous frames, "])),(l()(),e.sb(3003,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" becomes a root."])),(l()(),e.sb(3006,0,null,null,60,"p",[],null,null,null,null,null)),(l()(),e.sb(3007,0,null,null,59,"span",[],null,null,null,null,null)),(l()(),e.sb(3008,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Root set)"])),(l()(),e.sb(3010,0,null,null,56,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The set of all first event blocks (leaf events) of all nodes form the first root set "])),(l()(),e.sb(3012,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3014,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" (|"])),(l()(),e.sb(3017,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3019,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["| = "])),(l()(),e.sb(3022,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["). The root set "])),(l()(),e.sb(3025,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3027,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3028,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" consists of all roots "])),(l()(),e.sb(3031,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3033,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3034,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(3037,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3039,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3040,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" \u2209 "])),(l()(),e.sb(3043,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3045,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3046,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", \u2200 "])),(l()(),e.sb(3049,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" = 1..("])),(l()(),e.sb(3052,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1) and "])),(l()(),e.sb(3055,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3057,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3058,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" can reach more than 2n/3 other roots in the current frame, "])),(l()(),e.sb(3061,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" = 1..("])),(l()(),e.sb(3064,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1)."])),(l()(),e.sb(3067,0,null,null,23,"p",[],null,null,null,null,null)),(l()(),e.sb(3068,0,null,null,22,"span",[],null,null,null,null,null)),(l()(),e.sb(3069,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Frame)"])),(l()(),e.sb(3071,0,null,null,19,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Frame "])),(l()(),e.sb(3073,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3075,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3076,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is a natural number that separates Root sets. The root set at frame "])),(l()(),e.sb(3079,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3081,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3082,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is denoted by "])),(l()(),e.sb(3085,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3087,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3088,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3091,0,null,null,44,"p",[],null,null,null,null,null)),(l()(),e.sb(3092,0,null,null,43,"span",[],null,null,null,null,null)),(l()(),e.sb(3093,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Consistent chains)"])),(l()(),e.sb(3095,0,null,null,40,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["OPERA chains "])),(l()(),e.sb(3097,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3099,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3102,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3104,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" are consistent if for any event "])),(l()(),e.sb(3107,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" contained in both chains, "])),(l()(),e.sb(3110,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3112,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(3115,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]="])),(l()(),e.sb(3118,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3120,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(3123,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]. Denoted by "])),(l()(),e.sb(3126,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3128,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(3131,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3133,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3136,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When two consistent chains contain the same event "])),(l()(),e.sb(3138,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", both chains contain the same set of ancestors for "])),(l()(),e.sb(3141,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", with the same reference and self-ref edges between those ancestors."])),(l()(),e.sb(3144,0,null,null,51,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If two nodes have OPERA chains containing event "])),(l()(),e.sb(3146,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", then they have the same "])),(l()(),e.sb(3149,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" hashes contained within "])),(l()(),e.sb(3152,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[". A node will not accept an event during a sync unless that node already has "])),(l()(),e.sb(3155,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" references for that event, so both OPERA chains must contain "])),(l()(),e.sb(3158,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" references for "])),(l()(),e.sb(3161,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[". The cryptographic hashes are assumed to be secure, therefore the references must be the same. By induction, all ancestors of "])),(l()(),e.sb(3164,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" must be the same. Therefore, the two OPERA chains are consistent.\n"])),(l()(),e.sb(3167,0,null,null,28,"span",[],null,null,null,null,null)),(l()(),e.sb(3168,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Creator)"])),(l()(),e.sb(3170,0,null,null,25,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If a node "])),(l()(),e.sb(3172,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3174,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3175,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" creates an event block "])),(l()(),e.sb(3178,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", then the creator of "])),(l()(),e.sb(3181,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", denoted by "])),(l()(),e.sb(3184,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c**r"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(3187,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["), is "])),(l()(),e.sb(3190,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3192,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3193,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3196,0,null,null,29,"p",[],null,null,null,null,null)),(l()(),e.sb(3197,0,null,null,28,"span",[],null,null,null,null,null)),(l()(),e.sb(3198,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Consistent chain)"])),(l()(),e.sb(3200,0,null,null,25,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A global consistent chain "])),(l()(),e.sb(3202,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3204,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3205,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" is a chain if "])),(l()(),e.sb(3208,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3210,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3211,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(3214,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3216,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3217,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" for all "])),(l()(),e.sb(3220,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3222,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3223,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3226,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We denote "])),(l()(),e.sb(3228,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004\u2291\u2004"])),(l()(),e.sb(3231,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2032 to stand for "])),(l()(),e.sb(3234,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[" is a subgraph of "])),(l()(),e.sb(3237,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2032. Some properties of "])),(l()(),e.sb(3240,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3242,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3243,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" are given as follows:"])),(l()(),e.sb(3246,0,null,null,108,"ol",[],null,null,null,null,null)),(l()(),e.sb(3247,0,null,null,20,"li",[],null,null,null,null,null)),(l()(),e.sb(3248,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2200"])),(l()(),e.sb(3250,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3252,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3253,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(3256,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3258,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3259,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["\u2004\u2291\u2004"])),(l()(),e.sb(3262,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3264,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3265,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(3268,0,null,null,35,"li",[],null,null,null,null,null)),(l()(),e.sb(3269,0,null,null,34,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2200"])),(l()(),e.sb(3271,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(3274,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3276,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3277,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" \u2200"])),(l()(),e.sb(3280,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3282,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3283,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(3286,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3288,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3289,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(3292,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]\u2291"])),(l()(),e.sb(3295,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3297,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3298,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(3301,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["])."])),(l()(),e.sb(3304,0,null,null,50,"li",[],null,null,null,null,null)),(l()(),e.sb(3305,0,null,null,49,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(\u2200"])),(l()(),e.sb(3307,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3309,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3310,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(3313,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3315,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3316,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[") (\u2200"])),(l()(),e.sb(3319,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3321,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3322,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(3325,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3327,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3328,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") (("])),(l()(),e.sb(3331,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3333,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3334,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(3337,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3339,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3340,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[")\u21d2"])),(l()(),e.sb(3343,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3345,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3346,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(3349,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3351,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3352,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(3355,0,null,null,40,"p",[],null,null,null,null,null)),(l()(),e.sb(3356,0,null,null,39,"span",[],null,null,null,null,null)),(l()(),e.sb(3357,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Consistent root)"])),(l()(),e.sb(3359,0,null,null,36,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Two chains "])),(l()(),e.sb(3361,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3363,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3366,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3368,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" are root consistent, if for every "])),(l()(),e.sb(3371,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" contained in both chains, "])),(l()(),e.sb(3374,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(3377,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th frame in "])),(l()(),e.sb(3380,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3382,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(3385,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(3388,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th frame in "])),(l()(),e.sb(3391,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3393,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3396,0,null,null,194,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["By consistent chains, if "])),(l()(),e.sb(3398,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3400,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(3403,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3405,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3408,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" belongs to both chains, then "])),(l()(),e.sb(3411,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3413,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(3416,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["] = "])),(l()(),e.sb(3419,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3421,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(3424,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]. We can prove the proposition by induction. For "])),(l()(),e.sb(3427,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" = 0, the first root set is the same in both "])),(l()(),e.sb(3430,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3432,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3435,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3437,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". Hence, it holds for "])),(l()(),e.sb(3440,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" = 0. Suppose that the proposition holds for every "])),(l()(),e.sb(3443,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" from 0 to "])),(l()(),e.sb(3446,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[". We prove that it also holds for "])),(l()(),e.sb(3449,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["= "])),(l()(),e.sb(3452,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" + 1. Suppose that "])),(l()(),e.sb(3455,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of frame "])),(l()(),e.sb(3458,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3460,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3461,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(3465,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3467,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". Then there exists a set "])),(l()(),e.sb(3470,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" reaching 2/3 of members in "])),(l()(),e.sb(3473,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3475,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" of frame "])),(l()(),e.sb(3478,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3480,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3481,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" such that \u2200"])),(l()(),e.sb(3484,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(3487,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(3490,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(3493,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["). As "])),(l()(),e.sb(3496,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3498,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(3501,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3503,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(3506,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(3509,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3511,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", then \u2200"])),(l()(),e.sb(3514,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(3517,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(3520,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(3523,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3525,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["). Since the proposition holds for "])),(l()(),e.sb(3528,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["="])),(l()(),e.sb(3531,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[", As "])),(l()(),e.sb(3534,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,[" is a root of frame "])),(l()(),e.sb(3537,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3539,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3540,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(3543,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3545,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(3548,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,[" is a root of frame "])),(l()(),e.sb(3551,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3553,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3554,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(3557,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3559,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". Hence, the set "])),(l()(),e.sb(3562,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" of 2/3 members "])),(l()(),e.sb(3565,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,[" happens before "])),(l()(),e.sb(3568,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(3571,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3573,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". So "])),(l()(),e.sb(3576,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" belongs to "])),(l()(),e.sb(3579,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3581,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3582,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(3586,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3588,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3591,0,null,null,12,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Thus, all nodes have the same consistent root sets, which are the root sets in "])),(l()(),e.sb(3593,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3595,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3596,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[". Frame numbers are consistent for all nodes.\n"])),(l()(),e.sb(3599,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.sb(3600,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Flag table)"])),(l()(),e.sb(3602,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A flag table stores reachability from an event block to another root. The sum of all reachabilities, namely all values in flag table, indicates the number of reachabilities from an event block to other roots."])),(l()(),e.sb(3604,0,null,null,31,"p",[],null,null,null,null,null)),(l()(),e.sb(3605,0,null,null,30,"span",[],null,null,null,null,null)),(l()(),e.sb(3606,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Consistent flag table)"])),(l()(),e.sb(3608,0,null,null,27,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For any top event "])),(l()(),e.sb(3610,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in both OPERA chains "])),(l()(),e.sb(3613,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3615,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3618,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3620,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(3623,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3625,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(3628,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3630,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", then the flag tables of "])),(l()(),e.sb(3633,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" are consistent if they are the same in both chains."])),(l()(),e.sb(3636,0,null,null,124,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["From the above, the root sets of "])),(l()(),e.sb(3638,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3640,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3643,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3645,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" are consistent. If "])),(l()(),e.sb(3648,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" contained in "])),(l()(),e.sb(3651,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3653,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(3656,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(3659,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th frame in "])),(l()(),e.sb(3662,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3664,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(3667,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(3670,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th frame in "])),(l()(),e.sb(3673,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3675,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3676,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". Since "])),(l()(),e.sb(3679,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3681,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(3684,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3686,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(3689,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3691,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(3694,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]="])),(l()(),e.sb(3697,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(3699,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(3702,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]. The reference event blocks of "])),(l()(),e.sb(3705,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" are the same in both chains. Thus the flag tables of "])),(l()(),e.sb(3708,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" of both chains are the same.\n"])),(l()(),e.sb(3711,0,null,null,49,"span",[],null,null,null,null,null)),(l()(),e.sb(3712,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Clotho)"])),(l()(),e.sb(3714,0,null,null,46,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A root "])),(l()(),e.sb(3716,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3718,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3719,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(3722,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3724,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3725,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20053"])),(l()(),e.Ib(-1,null,[" can nominate a root "])),(l()(),e.sb(3729,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3731,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3732,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" as Clotho if more than 2n/3 roots in the frame "])),(l()(),e.sb(3735,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3737,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3738,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" dominate "])),(l()(),e.sb(3742,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3744,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3745,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3748,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3750,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3751,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" dominates the roots in the frame "])),(l()(),e.sb(3754,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3756,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3757,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3761,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each node nominates a root into Clotho via the flag table. If all nodes have an OPERA chain with same shape, the values in flag table will be equal to each other in OPERA chain. Thus, all nodes nominate the same root into Clotho since the OPERA chain of all nodes has same shape."])),(l()(),e.sb(3763,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),e.sb(3764,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.sb(3765,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Atropos)"])),(l()(),e.sb(3767,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An Atropos is assigned consensus time through the Lachesis consensus algorithm and is utilized for determining the order between event blocks. Atropos blocks form a Main-chain, which allows time consensus ordering and responses to attacks."])),(l()(),e.sb(3769,0,null,null,20,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For any root set "])),(l()(),e.sb(3771,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(3774,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3776,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3777,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", the time consensus algorithm checks whether more than 2n/3 roots in the frame "])),(l()(),e.sb(3780,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3782,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3783,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[" selects the same value. However, each node selects one of the values collected from the root set in the previous frame by the time consensus algorithm and Reselection process. Based on the Reselection process, the time consensus algorithm can reach agreement. However, there is a possibility that consensus time candidate does not reach agreement . To solve this problem, time consensus algorithm includes minimal selection frame per next "])),(l()(),e.sb(3787,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.Ib(-1,null,[" frame. In minimal value selection algorithm, each root selects minimum value among values collected from previous root set. Thus, the consensus time reaches consensus by time consensus algorithm."])),(l()(),e.sb(3790,0,null,null,8,"p",[],null,null,null,null,null)),(l()(),e.sb(3791,0,null,null,7,"span",[],null,null,null,null,null)),(l()(),e.sb(3792,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Main-chain (Blockchain))"])),(l()(),e.sb(3794,0,null,null,4,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For faster consensus, "])),(l()(),e.sb(3796,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Main-chain"])),(l()(),e.Ib(-1,null,[" is a special sub-graph of the OPERA chain (DAG)."])),(l()(),e.sb(3799,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The Main chain \u2014 a core subgraph of OPERA chain, plays the important role of ordering the event blocks. The Main chain stores shortcuts to connect between the Atropos. After the topological ordering is computed over all event blocks through the Lachesis protocol, Atropos blocks are determined and form the Main chain. To improve path searching, we use a "])),(l()(),e.sb(3801,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["flag table"])),(l()(),e.Ib(-1,null,[" \u2014 a local hash table structure as a cache that is used to quickly determine the closest root to a event block."])),(l()(),e.sb(3804,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the OPERA chain, an event block is called a "])),(l()(),e.sb(3806,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["root"])),(l()(),e.Ib(-1,null,[" if the event block is linked to more than two-thirds of previous roots. A leaf vertex is also a root itself. With root event blocks, we can keep track of \u201cvital\u201d blocks that 2"])),(l()(),e.sb(3809,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 of the network agree on."])),(l()(),e.sb(3812,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[H] "])),(l()(),e.sb(3814,0,null,null,0,"embed",[["height","302"],["src","Mainchain.pdf"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(3815,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:mainchain] shows an example of the Main chain composed of Atropos event blocks. In particular, the Main chain consists of Atropos blocks that are derived from root blocks and so are agreed by 2"])),(l()(),e.sb(3817,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 of the network nodes. Thus, this guarantees that at least 2"])),(l()(),e.sb(3820,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 of nodes have come to consensus on this Main chain."])),(l()(),e.sb(3823,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each participant node has a copy of the Main chain and can search consensus position of its own event blocks. Each event block can compute its own consensus position by checking the nearest Atropos event block. Assigning and searching consensus position are introduced in the consensus time selection section."])),(l()(),e.sb(3825,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The Main chain provides quick access to the previous transaction history to efficiently process new incoming event blocks. From the Main chain, information about unknown participants or attackers can be easily viewed. The Main chain can be used efficiently in transaction information management by providing quick access to new event blocks that have been agreed on by the majority of nodes. In short, the Main-chain gives the following advantages:"])),(l()(),e.sb(3827,0,null,null,6,"ul",[],null,null,null,null,null)),(l()(),e.sb(3828,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(3829,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["All event blocks or nodes do not need to store all information. It is efficient for data management."])),(l()(),e.sb(3831,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(3832,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Access to previous information is efficient and fast."])),(l()(),e.sb(3834,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Based on these advantages, OPERA chain can respond strongly to efficient transaction treatment and attacks through its Main-chain."])),(l()(),e.sb(3836,0,null,null,1,"h1",[["id","lachesis-protocol"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis Protocol"])),(l()(),e.sb(3838,0,null,null,9,"p",[],null,null,null,null,null)),(l()(),e.sb(3839,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["loop"])),(l()(),e.Ib(-1,null,[": A, B = "])),(l()(),e.sb(3842,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-node Selection algorithm() Request sync to node A and B Sync all known events by Lachesis protocol Event block creation (optional) Broadcast out the message Root selection Clotho selection Atropos time consensus "])),(l()(),e.sb(3845,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["loop"])),(l()(),e.Ib(-1,null,[": Request sync from a node Sync all known events by Lachesis protocol"])),(l()(),e.sb(3848,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Algorithm [al:main] shows the pseudo algorithm for the Lachesis core procedure. The algorithm consists of two parts and runs them in parallel."])),(l()(),e.sb(3850,0,null,null,9,"ul",[],null,null,null,null,null)),(l()(),e.sb(3851,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(3852,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In part one, each node requests synchronization and creates event blocks. In line 3, a node runs the Node Selection Algorithm. The Node Selection Algorithm returns the "])),(l()(),e.sb(3854,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" IDs of other nodes to communicate with. In line 4 and 5, the node synchronizes the OPERA chain (DAG) with the other nodes. Line 6 runs the Event block creation, at which step the node creates an event block and checks whether it is a root. The node then broadcasts the created event block to all other known nodes in line 7. The step in this line is optional. In line 8 and 9, Clotho selection and Atropos time consensus algorithms are invoked. The algorithms determines whether the specified root can be a Clotho, assign the consensus time, and then confirm the Atropos."])),(l()(),e.sb(3857,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(3858,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The second part is to respond to synchronization requests. In line 10 and 11, the node receives a synchronization request and then sends its response about the OPERA chain."])),(l()(),e.sb(3860,0,null,null,1,"h2",[["id","peer-selection-algorithm"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Peer selection algorithm"])),(l()(),e.sb(3862,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In order to create an event block, a node needs to select "])),(l()(),e.sb(3864,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" other nodes. Lachesis protocols does not depend on how peer nodes are selected. One simple approach can use a random selection from the pool of "])),(l()(),e.sb(3867,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" nodes. The other approach is to define some criteria or cost function to select other peers of a node."])),(l()(),e.sb(3870,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Within distributed system, a node can select other nodes with low communication costs, low network latency, high bandwidth, high successful transaction throughputs."])),(l()(),e.sb(3872,0,null,null,1,"h2",[["id","dynamic-participants"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Dynamic participants"])),(l()(),e.sb(3874,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Our Lachesis protocol allows an arbitrary number of participants to dynamically join the system. The OPERA chain (DAG) can still operate with new participants. Computation on flag tables is set based and independent of which and how many participants have joined the system. Algorithms for selection of Roots, Clothos and Atroposes are flexible enough and not dependence on a fixed number of participants."])),(l()(),e.sb(3876,0,null,null,1,"h2",[["id","peer-synchronization"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Peer synchronization"])),(l()(),e.sb(3878,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We describe an algorithm that synchronizes events between the nodes."])),(l()(),e.sb(3880,0,null,null,26,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node "])),(l()(),e.sb(3882,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3884,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" selects random peer to synchronize with "])),(l()(),e.sb(3887,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3889,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" gets local known events (map[int]int) "])),(l()(),e.sb(3892,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3894,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" sends RPC request Sync request to peer "])),(l()(),e.sb(3897,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3899,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" receives RPC requestSync request "])),(l()(),e.sb(3902,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3904,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" does an EventDiff check on the known map (map[int]int)"])),(l()(),e.sb(3907,0,null,null,9,"p",[],null,null,null,null,null)),(l()(),e.sb(3908,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3910,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" returns unknown events, and map[int]int of known events to "])),(l()(),e.sb(3913,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3915,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(3917,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The algorithm assumes that a node always needs the events in topological ordering (specifically in reference to the lamport timestamps), an alternative would be to use an inverse bloom lookup table (IBLT) for completely potential randomized events.\nAlternatively, one can simply use a fixed incrementing index to keep track of the top event for each node."])),(l()(),e.sb(3919,0,null,null,1,"h2",[["id","node-structure"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node Structure"])),(l()(),e.sb(3921,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section gives an overview of the node structure in Lachesis."])),(l()(),e.sb(3923,0,null,null,34,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each node has a height vector, in-degree vector, flag table, frames, clotho check list, max-min value, main-chain (blockchain), and their own local view of the OPERA chain (DAG). The height vector is the number of event blocks created by the "])),(l()(),e.sb(3925,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(3927,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3928,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" node. The in-degree vector refers to the number of edges from other event blocks created by other nodes to the top event block of this node. The top event block indicates the most recently created event block by this node. The flag table is a "])),(l()(),e.sb(3931,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(3933,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" matrix, where n is the number of nodes and k is the number of roots that an event block can reach. If an event block "])),(l()(),e.sb(3937,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" created by "])),(l()(),e.sb(3940,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(3942,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3943,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" node can reach "])),(l()(),e.sb(3946,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(3948,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3949,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" root, then the flag table stores the hash value of the "])),(l()(),e.sb(3952,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(3954,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(3955,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" root. Each node maintains the flag table of each top event block."])),(l()(),e.sb(3958,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Frames store the root set in each frame. Clotho check list has two types of check points; Clotho candidate ("])),(l()(),e.sb(3960,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C**C"])),(l()(),e.Ib(-1,null,[") and Clotho ("])),(l()(),e.sb(3963,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["). If a root in a frame is a "])),(l()(),e.sb(3966,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C**C"])),(l()(),e.Ib(-1,null,[", a node check the "])),(l()(),e.sb(3969,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C**C"])),(l()(),e.Ib(-1,null,[" part and if a root becomes Clotho, a node check "])),(l()(),e.sb(3972,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" part. Max-min value is timestamp that addresses for Atropos selection. The Main-chain is a data structure storing hash values of the Atropos blocks."])),(l()(),e.sb(3975,0,null,null,0,"embed",[["src","Node_structure.pdf"]],null,null,null,null,null)),(l()(),e.sb(3976,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:node] shows an example of the node structure component of a node "])),(l()(),e.sb(3978,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[". In the figure, each value excluding self height in the height vector is 1 since the initial state is shared to all nodes. In the in-degree vector, node "])),(l()(),e.sb(3981,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" stores the number of edges from other event blocks created by other nodes to the top event block. The in-degrees of node "])),(l()(),e.sb(3984,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(3987,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(3990,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" are 1. In flag table, node "])),(l()(),e.sb(3993,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" knows other two root hashes since the top event block can reach those two roots. Node "])),(l()(),e.sb(3996,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" also knows that other nodes know their own roots. In the example situation there is no clotho candidate and Clotho, and thus clotho check list is empty. The main-chain and max-min value are empty for the same reason as clotho check list."])),(l()(),e.sb(3999,0,null,null,1,"h2",[["id","peer-selection-algorithm-via-cost-function"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Peer selection algorithm via Cost function"])),(l()(),e.sb(4001,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We define three versions of the Cost Function ("])),(l()(),e.sb(4003,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4005,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4006,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,["). Version one is focused around updated information share and is discussed below. The other two versions are focused on root creation and consensus facilitation, these will be discussed in a following paper."])),(l()(),e.sb(4009,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We define a Cost Function ("])),(l()(),e.sb(4011,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4013,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4014,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[") for preventing the creation of lazy nodes. A lazy node is a node that has a lower work portion in the OPERA chain (has created fewer event blocks). When a node creates an event block, the node selects other nodes with low value outputs from the cost function and refers to the top event blocks of the reference nodes. An equation ([eq1]) of "])),(l()(),e.sb(4017,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4019,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4020,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" is as follows,"])),(l()(),e.sb(4023,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.sb(4024,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4026,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4027,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(4030,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.Ib(-1,null,["/"])),(l()(),e.sb(4033,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.sb(4035,0,null,null,43,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["where "])),(l()(),e.sb(4037,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(4040,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" denote values of in-degree vector and height vector respectively. If the number of nodes with the lowest "])),(l()(),e.sb(4043,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4045,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4046,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" is more than "])),(l()(),e.sb(4049,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[", one of the nodes is selected at random. The reason for selecting high "])),(l()(),e.sb(4052,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" is that we can expect a high possibility to create a root because the high "])),(l()(),e.sb(4055,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" indicates that the communication frequency of the node had more opportunities than others with low "])),(l()(),e.sb(4058,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[". Otherwise, the nodes that have high "])),(l()(),e.sb(4061,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4063,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4064,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" (the case of "])),(l()(),e.sb(4067,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.Ib(-1,null,[" > "])),(l()(),e.sb(4070,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[") have generated fewer event blocks than the nodes that have low "])),(l()(),e.sb(4073,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4075,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4076,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[".."])),(l()(),e.sb(4079,0,null,null,0,"embed",[["src","costfunction_1.pdf"]],null,null,null,null,null)),(l()(),e.sb(4080,0,null,null,38,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:costfunction_1] shows an example of the node selection based on the cost function after the creation of leaf events by all nodes. In this example, there are five nodes and each node created leaf events. All nodes know other leaf events. Node "])),(l()(),e.sb(4082,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" creates an event block "])),(l()(),e.sb(4085,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4087,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(4090,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" calculates the cost functions. Step 2 in Figure [fig:costfunction_1] shows the results of cost functions based on the height and in-degree vectors of node "])),(l()(),e.sb(4093,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[". In the initial step, each value in the vectors are same because all nodes have only leaf events. Node "])),(l()(),e.sb(4096,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" randomly selects "])),(l()(),e.sb(4099,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" nodes and connects "])),(l()(),e.sb(4102,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4104,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" to the leaf events of selected nodes. In this example, we set "])),(l()(),e.sb(4107,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["=3 and assume that node "])),(l()(),e.sb(4110,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" selects node "])),(l()(),e.sb(4113,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(4116,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(4119,0,null,null,0,"embed",[["src","costfunction_2.pdf"]],null,null,null,null,null)),(l()(),e.sb(4120,0,null,null,30,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:costfunction_2] shows an example of the node selection after a few steps of the simulation in Figure [fig:costfunction_1]. In Figure [fig:costfunction_2], the recent event block is "])),(l()(),e.sb(4122,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4124,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["5"])),(l()(),e.Ib(-1,null,[" created by node "])),(l()(),e.sb(4127,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[". Node "])),(l()(),e.sb(4130,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" calculates the cost function and selects the other two nodes that have the lowest results of the cost function. In this example, node "])),(l()(),e.sb(4133,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" has 0.5 as the result and other nodes have the same values. Because of this, node "])),(l()(),e.sb(4136,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" first selects node "])),(l()(),e.sb(4139,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" and randomly selects other nodes among nodes "])),(l()(),e.sb(4142,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(4145,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(4148,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(4151,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The height of node "])),(l()(),e.sb(4153,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" in the example is 2 (leaf event and event block "])),(l()(),e.sb(4156,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4158,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,["). On the other hand, the height of node "])),(l()(),e.sb(4161,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" in node structure of "])),(l()(),e.sb(4164,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" is 1. Node "])),(l()(),e.sb(4167,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" is still not aware of the presence of the event block "])),(l()(),e.sb(4170,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4172,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[". It means that there is no path from the event blocks created by node "])),(l()(),e.sb(4175,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" to the event block "])),(l()(),e.sb(4178,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4180,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[". Thus, node "])),(l()(),e.sb(4183,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" has 1 as the height of node "])),(l()(),e.sb(4186,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(4189,0,null,null,87,"p",[],null,null,null,null,null)),(l()(),e.sb(4190,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Input:"])),(l()(),e.Ib(-1,null,[" Height Vector "])),(l()(),e.sb(4193,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[", In-degree Vector "])),(l()(),e.sb(4196,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.sb(4198,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Output:"])),(l()(),e.Ib(-1,null,[" reference node "])),(l()(),e.sb(4201,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4203,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" min_cost \u2190 "])),(l()(),e.sb(4207,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.sb(4209,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,["F"])),(l()(),e.sb(4212,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(4214,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4215,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4217,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 None "])),(l()(),e.sb(4221,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(4223,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4224,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 $\\frac{I_k}{H_k}$ min_cost \u2190 "])),(l()(),e.sb(4227,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(4229,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4230,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4232,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(4234,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4235,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4237,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(4241,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.sb(4243,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(4245,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4246,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4248,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(4252,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(4254,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4255,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4257,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u222a "])),(l()(),e.sb(4261,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.sb(4263,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4265,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 random select in "])),(l()(),e.sb(4269,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(4271,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4272,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4274,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4277,0,null,null,67,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Algorithm [al:ns] shows the selecting algorithm for selecting reference nodes. The algorithm operates for each node to select a communication partner from other nodes. Line 4 and 5 set min_cost and "])),(l()(),e.sb(4279,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4281,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4282,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4284,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" to initial state. Line 7 calculates the cost function "])),(l()(),e.sb(4288,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(4290,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4291,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" for each node. In line 8, 9, and 10, we find the minimum value of the cost function and set min_cost and "])),(l()(),e.sb(4294,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4296,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4297,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4299,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(4303,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(4305,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4306,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" and the ID of each node respectively. Line 11 and 12 append the ID of each node to "])),(l()(),e.sb(4309,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4311,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4312,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4314,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" if min_cost equals "])),(l()(),e.sb(4318,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(4320,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4321,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[". Finally, line 13 selects randomly "])),(l()(),e.sb(4324,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" node IDs from "])),(l()(),e.sb(4327,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4329,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4330,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(4332,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" as communication partners. The time complexity of Algorithm 2 is "])),(l()(),e.sb(4336,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(4339,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["), where "])),(l()(),e.sb(4342,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of nodes."])),(l()(),e.sb(4345,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["After the reference node is selected, each node communicates and shares information of all event blocks known by them. A node creates an event block by referring to the top event block of the reference node. The Lachesis protocol works and communicates asynchronously. This allows a node to create an event block asynchronously even when another node creates an event block. The communication between nodes does not allow simultaneous communication with the same node."])),(l()(),e.sb(4347,0,null,null,0,"embed",[["height","264"],["src","node_selection.pdf"]],null,null,null,null,null)),(l()(),e.sb(4348,0,null,null,66,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:node_selection] shows an example of the node selection in Lachesis protocol. In this example, there are five nodes ("])),(l()(),e.sb(4350,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(4353,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(4356,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(4359,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(4362,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[") and each node generates the first event blocks, called leaf events. All nodes share other leaf events with each other. In the first step, node "])),(l()(),e.sb(4365,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" generates new event block "])),(l()(),e.sb(4368,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(4370,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". Then node "])),(l()(),e.sb(4373,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" calculates the cost function to connect other nodes. In this initial situation, all nodes have one event block called leaf event, thus the height vector and the in-degree vector in node "])),(l()(),e.sb(4376,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" has same values. In other words, the heights of each node are 1 and in-degrees are 0. Node "])),(l()(),e.sb(4379,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" randomly select the other two nodes and connects "])),(l()(),e.sb(4382,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(4384,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" to the top two event blocks from the other two nodes. Step 2 shows the situation after connections. In this example, node "])),(l()(),e.sb(4387,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" select node "])),(l()(),e.sb(4390,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(4393,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" to connect "])),(l()(),e.sb(4396,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(4398,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and the event block "])),(l()(),e.sb(4401,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(4403,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is connected to the top event blocks of node "])),(l()(),e.sb(4406,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(4409,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[". Node "])),(l()(),e.sb(4412,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" only knows the situation of the step 2."])),(l()(),e.sb(4415,0,null,null,68,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["After that, in the example, node "])),(l()(),e.sb(4417,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" generates a new event block "])),(l()(),e.sb(4420,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4422,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and also calculates the cost function. "])),(l()(),e.sb(4425,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" randomly select the other two nodes; "])),(l()(),e.sb(4428,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(4431,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[", since "])),(l()(),e.sb(4434,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" only has information of the leaf events. Node "])),(l()(),e.sb(4437,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" requests to "])),(l()(),e.sb(4440,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(4443,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" to connect "])),(l()(),e.sb(4446,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4448,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", then nodes "])),(l()(),e.sb(4451,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(4454,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" send information for their top event blocks to node "])),(l()(),e.sb(4457,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" as response. The top event block of node "])),(l()(),e.sb(4460,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" is "])),(l()(),e.sb(4463,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(4465,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and node "])),(l()(),e.sb(4468,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" is the leaf event. The event block "])),(l()(),e.sb(4471,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4473,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is connected to "])),(l()(),e.sb(4476,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(4478,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and leaf event from node "])),(l()(),e.sb(4481,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[". Step 4 shows these connections."])),(l()(),e.sb(4484,0,null,null,1,"h2",[["id","event-block-creation"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Event block creation"])),(l()(),e.sb(4486,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the Lachesis protocol, every node can create an event block. Each event block refers to other "])),(l()(),e.sb(4488,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" event blocks using their hash values. In the Lachesis protocol, a new event block refers to "])),(l()(),e.sb(4491,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-neighbor event blocks under the following conditions:"])),(l()(),e.sb(4494,0,null,null,18,"ol",[],null,null,null,null,null)),(l()(),e.sb(4495,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(4496,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each of the "])),(l()(),e.sb(4498,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" reference event blocks is the top event blocks of its own node."])),(l()(),e.sb(4501,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(4502,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["One reference should be made to a self-ref that references to an event block of the same node."])),(l()(),e.sb(4504,0,null,null,8,"li",[],null,null,null,null,null)),(l()(),e.sb(4505,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The other "])),(l()(),e.sb(4507,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1 reference refers to the other "])),(l()(),e.sb(4510,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1 top event nodes on other nodes."])),(l()(),e.sb(4513,0,null,null,0,"embed",[["src","Ex_eventblock.pdf"],["style","width:100.0%"]],null,null,null,null,null)),(l()(),e.sb(4514,0,null,null,80,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:ex_ebc] shows the example of an event block creation with a flag table. In this example the recent created event block is "])),(l()(),e.sb(4516,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4518,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" by node "])),(l()(),e.sb(4521,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[". The figure shows the node structure of node "])),(l()(),e.sb(4524,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[". We omit the other information such as height and in-degree vectors since we only focus on the change of the flag table with the event block creation in this example. The flag table of "])),(l()(),e.sb(4527,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4529,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" in Figure [fig:ex_ebc] is updated with the information of the previous connected event blocks "])),(l()(),e.sb(4532,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(4534,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(4537,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4539,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(4542,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(4544,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". Thus, the set of the flag table is the results of OR operation among the three root sets for "])),(l()(),e.sb(4547,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["1 ("])),(l()(),e.sb(4550,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(4552,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(4555,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4557,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(4560,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(4562,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,["), "])),(l()(),e.sb(4565,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4567,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(4570,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4572,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,["), and "])),(l()(),e.sb(4575,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(4577,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(4580,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(4582,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(4585,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(4587,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(4590,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(4592,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(4595,0,null,null,0,"embed",[["height","226"],["src","sync.pdf"]],null,null,null,null,null)),(l()(),e.sb(4596,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:communication process], shows the communication process is divided into five steps for two nodes to create an event block. Simply, a node "])),(l()(),e.sb(4598,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" requests to "])),(l()(),e.sb(4601,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[". then, "])),(l()(),e.sb(4604,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" responds to "])),(l()(),e.sb(4607,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" directly."])),(l()(),e.sb(4610,0,null,null,1,"h2",[["id","topological-ordering-of-events-using-lamport-timestamps"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Topological ordering of events using Lamport timestamps"])),(l()(),e.sb(4612,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Every node has a physical clock and it needs physical time to create an event block. However, for consensus, Lachesis protocols relies on a logical clock for each node. For the purpose, we use "])),(l()(),e.sb(4614,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u201cLamport timestamps\u201d"])),(l()(),e.Ib(-1,null,[" to determine the time ordering between event blocks in a asynchronous distributed system."])),(l()(),e.sb(4617,0,null,null,0,"embed",[["src","Lamport_timestamps.pdf"],["style","width:70.0%"]],null,null,null,null,null)),(l()(),e.sb(4618,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The Lamport timestamps algorithm is as follows:"])),(l()(),e.sb(4620,0,null,null,12,"ol",[],null,null,null,null,null)),(l()(),e.sb(4621,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(4622,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each node increments its count value before creating an event block."])),(l()(),e.sb(4624,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(4625,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When sending a message include its count value, receiver should consider which sender\u2019s message is received and increments its count value."])),(l()(),e.sb(4627,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(4628,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If current counter is less than or equal to the received count value from another node, then the count value of the recipient is updated."])),(l()(),e.sb(4630,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(4631,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If current counter is greater than the received count value from another node, then the current count value is updated."])),(l()(),e.sb(4633,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We use the Lamport\u2019s algorithm to enforce a topological ordering of event blocks and use it in the Atropos selection algorithm."])),(l()(),e.sb(4635,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Since an event block is created based on logical time, the sequence between each event blocks is immediately determined. Because the Lamport timestamps algorithm gives a partial order of all events, the whole time ordering process can be used for Byzantine fault tolerance."])),(l()(),e.sb(4637,0,null,null,1,"h2",[["id","domination-relation"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Domination Relation"])),(l()(),e.sb(4639,0,null,null,193,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Here, we introduce a new idea that extends the concept of domination.\nFor a vertex "])),(l()(),e.sb(4641,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in a DAG "])),(l()(),e.sb(4644,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[", let "])),(l()(),e.sb(4647,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(4650,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]=("])),(l()(),e.sb(4653,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(4655,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4656,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(4659,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(4661,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4662,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[") denote an induced-subgraph of "])),(l()(),e.sb(4665,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(4668,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(4670,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4671,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" consists of all ancestors of "])),(l()(),e.sb(4674,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" including "])),(l()(),e.sb(4677,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(4680,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(4682,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4683,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is the induced edges of "])),(l()(),e.sb(4686,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(4688,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4689,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(4692,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[".\nFor a set "])),(l()(),e.sb(4695,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" of vertices, an event "])),(l()(),e.sb(4698,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4700,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4701,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" $\\frac{2}{3}$-dominates "])),(l()(),e.sb(4704,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" if there are more than 2/3 of vertices "])),(l()(),e.sb(4707,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4709,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4710,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(4713,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(4716,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4718,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4719,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" dominates "])),(l()(),e.sb(4722,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4724,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4725,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". Recall that "])),(l()(),e.sb(4728,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4730,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is the set of all leaf vertices in "])),(l()(),e.sb(4733,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[". The $\\frac{2}{3}$-dom set "])),(l()(),e.sb(4736,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(4738,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" is the same as the set "])),(l()(),e.sb(4741,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4743,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[".The $\\frac{2}{3}$-dom set "])),(l()(),e.sb(4746,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(4748,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4749,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is defined as follows:\nA vertex "])),(l()(),e.sb(4752,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4754,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4755,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" belongs to a $\\frac{2}{3}$-dom set within the graph "])),(l()(),e.sb(4758,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(4761,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4763,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4764,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["], if "])),(l()(),e.sb(4767,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(4769,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4770,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" $\\frac{2}{3}$-dominates "])),(l()(),e.sb(4773,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4775,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". The $\\frac{2}{3}$-dom set "])),(l()(),e.sb(4778,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(4780,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4781,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" consists of all roots "])),(l()(),e.sb(4784,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(4786,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4787,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(4790,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(4792,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4793,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" \u2209 "])),(l()(),e.sb(4796,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(4798,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4799,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", \u2200 "])),(l()(),e.sb(4802,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" = 1..("])),(l()(),e.sb(4805,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1), and "])),(l()(),e.sb(4808,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(4810,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4811,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" $\\frac{2}{3}$-dominates "])),(l()(),e.sb(4814,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(4816,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(4817,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[".\nThe $\\frac{2}{3}$-dom set "])),(l()(),e.sb(4821,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(4823,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4824,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is the same with the root set "])),(l()(),e.sb(4827,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4829,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4830,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", for all nodes."])),(l()(),e.sb(4833,0,null,null,1,"h2",[["id","examples-of-domination-relation-in-dags"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Examples of domination relation in DAGs"])),(l()(),e.sb(4835,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section gives several examples of DAGs and the domination relation between their event blocks."])),(l()(),e.sb(4837,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(a)"])),(l()(),e.sb(4839,0,null,null,0,"img",[["alt","Examples of OPERA chain and dominator tree"],["src","domtrees.png"],["title","fig:"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\n(b)"])),(l()(),e.sb(4841,0,null,null,0,"img",[["alt","Examples of OPERA chain and dominator tree"],["src","domtrees_add1event.png"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(4842,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:domtrees1] shows an examples of a DAG and dominator trees."])),(l()(),e.sb(4844,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(4845,0,null,null,0,"img",[["alt","An example of OPERA chain and its 2/3 domination graph. The \\frac{2}{3}-dom sets are shown in grey."],["src","domset.png"]],null,null,null,null,null)),(l()(),e.sb(4846,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:domset1] depicts an example of a DAG and 2/3 dom sets."])),(l()(),e.sb(4848,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(a) "])),(l()(),e.sb(4850,0,null,null,0,"img",[["alt","An example of dependency graphs on individual nodes. From (a)-(c) there is one new event block appended. There is no fork, the simplified dependency graphs become trees."],["src","deptrees.png"],["title","fig:"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\n(b) "])),(l()(),e.sb(4852,0,null,null,0,"img",[["alt","An example of dependency graphs on individual nodes. From (a)-(c) there is one new event block appended. There is no fork, the simplified dependency graphs become trees."],["src","deptrees_mod_add1event.png"],["title","fig:"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\n(c) "])),(l()(),e.sb(4854,0,null,null,0,"img",[["alt","An example of dependency graphs on individual nodes. From (a)-(c) there is one new event block appended. There is no fork, the simplified dependency graphs become trees."],["src","deptrees_mod_add2event.png"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(4855,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:deptreesmod1] shows an example an dependency graphs. On each row, the left most figure shows the latest OPERA chain. The left figures on each row depict the dependency graphs of each node, which are in their compact form. When no fork presents, each of the compact dependency graphs is a tree."])),(l()(),e.sb(4857,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(a)"])),(l()(),e.sb(4859,0,null,null,0,"img",[["alt","An example of a pair of fork events in an OPERA chain. The fork events are shown in red and green. The OPERA chains from (a) to (d) are different by adding one single event at a time."],["src","deptrees_fork.png"],["title","fig:"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\n(b)"])),(l()(),e.sb(4861,0,null,null,0,"img",[["alt","An example of a pair of fork events in an OPERA chain. The fork events are shown in red and green. The OPERA chains from (a) to (d) are different by adding one single event at a time."],["src","deptrees_fork_add1event.png"],["title","fig:"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\n(c)"])),(l()(),e.sb(4863,0,null,null,0,"img",[["alt","An example of a pair of fork events in an OPERA chain. The fork events are shown in red and green. The OPERA chains from (a) to (d) are different by adding one single event at a time."],["src","deptrees_fork_add2event.png"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(4864,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:deptreesfork1] shows an example of a pair of fork events. Each row shows an OPERA chain (left most) and the compact dependency graphs on each node (right). The fork events are shown in red and green vertices"])),(l()(),e.sb(4866,0,null,null,1,"h2",[["id","root-selection"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Root Selection"])),(l()(),e.sb(4868,0,null,null,139,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["All nodes can create event blocks and an event block can be a root when satisfying specific conditions. Not all event blocks can be roots. First, the first created event blocks are themselves roots. These leaf event blocks form the first root set "])),(l()(),e.sb(4870,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4872,0,null,null,4,"sub",[],null,null,null,null,null)),(l()(),e.sb(4873,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4875,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" of the first frame "])),(l()(),e.sb(4878,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4880,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". If there are total "])),(l()(),e.sb(4883,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" nodes and these nodes create the event blocks, then the cardinality of the first root set |"])),(l()(),e.sb(4886,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4888,0,null,null,4,"sub",[],null,null,null,null,null)),(l()(),e.sb(4889,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4891,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["| is "])),(l()(),e.sb(4894,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[". Second, if an event block "])),(l()(),e.sb(4897,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" can reach at least 2n/3 roots, then "])),(l()(),e.sb(4900,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" is called a root. This event "])),(l()(),e.sb(4903,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" does not belong to "])),(l()(),e.sb(4906,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4908,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(4909,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", but the next root set "])),(l()(),e.sb(4913,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4915,0,null,null,4,"sub",[],null,null,null,null,null)),(l()(),e.sb(4916,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4918,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" of the next frame "])),(l()(),e.sb(4921,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4923,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". Thus, excluding the first root set, the range of cardinality of root set "])),(l()(),e.sb(4926,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4928,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4929,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4931,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4932,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" is 2"])),(l()(),e.sb(4935,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3\u2004<\u2004|"])),(l()(),e.sb(4938,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4940,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4941,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4943,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4944,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["|\u2264"])),(l()(),e.sb(4947,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[". The event blocks including "])),(l()(),e.sb(4950,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4952,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(4953,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4955,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4956,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" before "])),(l()(),e.sb(4959,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4961,0,null,null,6,"sub",[],null,null,null,null,null)),(l()(),e.sb(4962,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4964,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(4965,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" is in the frame "])),(l()(),e.sb(4969,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4971,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4972,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[". The roots in "])),(l()(),e.sb(4975,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(4977,0,null,null,6,"sub",[],null,null,null,null,null)),(l()(),e.sb(4978,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(4980,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(4981,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" does not belong to the frame "])),(l()(),e.sb(4985,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4987,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4988,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[". Those are included in the frame "])),(l()(),e.sb(4991,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4993,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(4994,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" when a root belonging to "])),(l()(),e.sb(4998,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(5e3,0,null,null,6,"sub",[],null,null,null,null,null)),(l()(),e.sb(5001,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(5003,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(5004,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" occurs."])),(l()(),e.sb(5008,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We introduce the use of a flag table to quickly determine whether a new event block becomes a root. Each node maintains a flag table of the top event block. Every event block that is newly created is assigned "])),(l()(),e.sb(5010,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" hashes for its "])),(l()(),e.sb(5013,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" referenced event blocks. We apply an "])),(l()(),e.sb(5016,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O**R"])),(l()(),e.Ib(-1,null,[" operation on each set in the flag table of the referenced event blocks."])),(l()(),e.sb(5019,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[H] "])),(l()(),e.sb(5021,0,null,null,0,"embed",[["height","226"],["src","Root_selection.pdf"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(5022,0,null,null,66,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:ex_ft] shows an example of how to use flag tables to determine a root. In this example, "])),(l()(),e.sb(5024,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5026,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is the most recently created event block. We apply an "])),(l()(),e.sb(5029,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O**R"])),(l()(),e.Ib(-1,null,[" operation on each set of the flag tables for "])),(l()(),e.sb(5032,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5034,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2019s "])),(l()(),e.sb(5037,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" referenced event blocks. The result is the flag table of "])),(l()(),e.sb(5040,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5042,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". If the cardinality of the root set in "])),(l()(),e.sb(5045,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5047,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2019s flag table is more than 2"])),(l()(),e.sb(5050,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3, "])),(l()(),e.sb(5053,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5055,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is a root. In this example, the cardinality of the root set in "])),(l()(),e.sb(5058,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5060,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is 4, which is greater than 2"])),(l()(),e.sb(5063,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 ("])),(l()(),e.sb(5066,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["=5). Thus, "])),(l()(),e.sb(5069,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5071,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" becomes root. In this example, "])),(l()(),e.sb(5074,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5076,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is added to frame "])),(l()(),e.sb(5079,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5081,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" since "])),(l()(),e.sb(5084,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5086,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" becomes new root."])),(l()(),e.sb(5089,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The root selection algorithm is as follows:"])),(l()(),e.sb(5091,0,null,null,74,"ol",[],null,null,null,null,null)),(l()(),e.sb(5092,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(5093,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The first event blocks are considered as roots."])),(l()(),e.sb(5095,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(5096,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When a new event block is added in the OPERA chain (DAG), we check whether the event block is a root by applying an "])),(l()(),e.sb(5098,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O**R"])),(l()(),e.Ib(-1,null,[" operation on each set of the flag tables connected to the new event block. If the cardinality of the root set in the flag table for the new event block is more than 2n/3, the new event block becomes a root."])),(l()(),e.sb(5101,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(5102,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When a new root appears on the OPERA chain, nodes update their frames. If one of the new event blocks becomes a root, all nodes that share the new event block add the hash value of the event block to their frames."])),(l()(),e.sb(5104,0,null,null,23,"li",[],null,null,null,null,null)),(l()(),e.sb(5105,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The new root set is created if the cardinality of the previous root set "])),(l()(),e.sb(5107,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(5109,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(5110,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(5112,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5113,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" is more than 2n/3 and the new event block can reach 2"])),(l()(),e.sb(5116,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 roots in "])),(l()(),e.sb(5119,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(5121,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(5122,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(5124,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5125,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5128,0,null,null,37,"li",[],null,null,null,null,null)),(l()(),e.sb(5129,0,null,null,36,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When the new root set "])),(l()(),e.sb(5131,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(5133,0,null,null,6,"sub",[],null,null,null,null,null)),(l()(),e.sb(5134,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(5136,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(5137,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" is created, the event blocks from the previous root set "])),(l()(),e.sb(5141,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(5143,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(5144,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(5146,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5147,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" to before "])),(l()(),e.sb(5150,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(5152,0,null,null,6,"sub",[],null,null,null,null,null)),(l()(),e.sb(5153,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(5155,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(5156,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" belong to the frame "])),(l()(),e.sb(5160,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5162,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5163,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5166,0,null,null,1,"h2",[["id","clotho-selection"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Clotho Selection"])),(l()(),e.sb(5168,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A Clotho is a root that satisfies the Clotho creation conditions. Clotho creation conditions are that more than 2n/3 nodes know the root and a root knows this information."])),(l()(),e.sb(5170,0,null,null,53,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In order for a root "])),(l()(),e.sb(5172,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" in frame "])),(l()(),e.sb(5175,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5177,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5178,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" to become a Clotho, "])),(l()(),e.sb(5181,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" must be reached by more than n/3 roots in the frame "])),(l()(),e.sb(5184,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5186,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(5187,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[". Based on the definition of the root, each root reaches more than 2n/3 roots in previous frames. If more than n/3 roots in the frame "])),(l()(),e.sb(5191,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5193,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(5194,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" can reach "])),(l()(),e.sb(5198,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(5201,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" is spread to all roots in the frame "])),(l()(),e.sb(5204,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5206,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(5207,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[". It means that all nodes know the existence of "])),(l()(),e.sb(5211,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[". If we have any root in the frame "])),(l()(),e.sb(5214,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5216,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(5217,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20053"])),(l()(),e.Ib(-1,null,[", a root knows that "])),(l()(),e.sb(5221,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" is spread to more than 2n/3 nodes. It satisfies Clotho creation conditions."])),(l()(),e.sb(5224,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[H] "])),(l()(),e.sb(5226,0,null,null,0,"embed",[["src","frame4.pdf"],["style","width:50.0%"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(5227,0,null,null,86,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the example in Figure [fig:frame4], n is 5 and each circle indicates a root in a frame. Each arrow means one root can reach (happened-before) to the previous root. Each root has 4 or 5 arrows (out-degree) since n is 5 (more than 2n/3 \u2265 4). "])),(l()(),e.sb(5229,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5231,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(5234,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5236,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" in frame "])),(l()(),e.sb(5239,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5241,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" are roots that can reach "])),(l()(),e.sb(5244,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5246,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" in frame "])),(l()(),e.sb(5249,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5251,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". "])),(l()(),e.sb(5254,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(5256,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(5259,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(5261,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" also can reach "])),(l()(),e.sb(5264,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5266,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", but we only marked "])),(l()(),e.sb(5269,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5271,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(5274,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5276,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" (when n is 5, more than n/3 \u2265 2) since we show at least more than n/3 conditions in this example. And it was marked with a blue bold arrow (Namely, the roots that can reach root "])),(l()(),e.sb(5279,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5281,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" have the blue bold arrow). In this situation, an event block must be able to reach "])),(l()(),e.sb(5284,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.sb(5286,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" or "])),(l()(),e.sb(5289,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5291,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" in order to become a root in frame "])),(l()(),e.sb(5294,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5296,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[" (In our example, n=5, more than n/3 \u2265 2, and more than 2n/3 \u2265 4. Thus, to be a root, either must be reached). All roots in frame "])),(l()(),e.sb(5299,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5301,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[" reach "])),(l()(),e.sb(5304,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5306,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" in frame "])),(l()(),e.sb(5309,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5311,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5314,0,null,null,41,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["To be a root in frame "])),(l()(),e.sb(5316,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5318,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[", an event block must reach more than 2n/3 roots in frame "])),(l()(),e.sb(5321,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5323,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[" that can reach "])),(l()(),e.sb(5326,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5328,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[". Therefore, if any of the root in frame "])),(l()(),e.sb(5331,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5333,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[" exists, the root must have happened-before more than 2n/3 roots in frame "])),(l()(),e.sb(5336,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5338,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[". Thus, the root of "])),(l()(),e.sb(5341,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5343,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[" knows that "])),(l()(),e.sb(5346,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5348,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" is spread over more than 2n/3 of the entire nodes. Thus, we can select "])),(l()(),e.sb(5351,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5353,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" as Clotho."])),(l()(),e.sb(5356,0,null,null,0,"embed",[["src","Clotho_fig1.pdf"],["style","width:80.0%"]],null,null,null,null,null)),(l()(),e.sb(5357,0,null,null,21,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:Clotho] shows an example of a Clotho. In this example, all roots in the frame "])),(l()(),e.sb(5359,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5361,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" have happened-before more than n/3 roots in the frame "])),(l()(),e.sb(5364,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5366,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". We can select all roots in the frame "])),(l()(),e.sb(5369,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5371,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" as Clotho since the recent frame is "])),(l()(),e.sb(5374,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5376,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5379,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[H]"])),(l()(),e.sb(5381,0,null,null,54,"p",[],null,null,null,null,null)),(l()(),e.sb(5382,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Input"])),(l()(),e.Ib(-1,null,[": a root "])),(l()(),e.sb(5385,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(5387,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5390,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i**s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(5393,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5395,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(5398,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["h**o"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(5402,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(5404,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["l"])),(l()(),e.sb(5407,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5410,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(5412,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" \u2190 0 c.yes \u2190 c.yes + 1 "])),(l()(),e.sb(5416,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5419,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i**s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(5422,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5424,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(5427,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["h**o"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(5431,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(5433,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(5436,0,null,null,93,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Algorithm [al:acs] shows the pseudo code for Clotho selection. The algorithm takes a root "])),(l()(),e.sb(5438,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" as input. Line 4 and 5 set "])),(l()(),e.sb(5441,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5444,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i**s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(5447,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5449,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(5452,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["h**o"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(5456,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5459,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(5461,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(5465,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(5467,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,[" and 0 respectively. Line 6-8 checks whether any root "])),(l()(),e.sb(5471,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u2032 in "])),(l()(),e.sb(5474,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5476,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(5479,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5483,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20053,\u2006"])),(l()(),e.sb(5486,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[") has happened-before with the 2n/3 condition "])),(l()(),e.sb(5489,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" where "])),(l()(),e.sb(5492,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is the current frame. In line 9-10, if the number of roots in "])),(l()(),e.sb(5495,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5497,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(5500,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5504,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20052,\u2006"])),(l()(),e.sb(5507,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[") which happened-before "])),(l()(),e.sb(5510,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" is more than 2"])),(l()(),e.sb(5513,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3, the root "])),(l()(),e.sb(5516,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" is set as a Clotho. The time complexity of Algorithm 3 is "])),(l()(),e.sb(5519,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5522,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(5524,0,null,null,1,"sup",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["), where "])),(l()(),e.sb(5527,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of nodes."])),(l()(),e.sb(5530,0,null,null,0,"embed",[["src","Clotho_fig2.pdf"]],null,null,null,null,null)),(l()(),e.sb(5531,0,null,null,28,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:ClothoNodeA] shows the state of node "])),(l()(),e.sb(5533,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" when a Clotho is selected. In this example, node "])),(l()(),e.sb(5536,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" knows all roots in the frame "])),(l()(),e.sb(5539,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5541,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" become Clotho\u2019s. Node "])),(l()(),e.sb(5544,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" prunes unnecessary information on its own structure. In this case, node "])),(l()(),e.sb(5547,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" prunes the root set in the frame "])),(l()(),e.sb(5550,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5552,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" since all roots in the frame "])),(l()(),e.sb(5555,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5557,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" become Clotho and the Clotho Check list stores the Clotho information."])),(l()(),e.sb(5560,0,null,null,1,"h2",[["id","atropos-selection"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Atropos Selection"])),(l()(),e.sb(5562,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Atropos selection algorithm is the process in which the candidate time generated from Clotho selection is shared with other nodes, and each root re-selects candidate time repeatedly until all nodes have same candidate time for a Clotho."])),(l()(),e.sb(5564,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["After a Clotho is nominated, each node then computes a candidate time of the Clotho. If there are more than two-thirds of the nodes that compute the same value for candidate time, that time value is recorded. Otherwise, each node reselects candidate time. By the reselection process, each node reaches time consensus for candidate time of Clotho as the OPERA chain (DAG) grows. The candidate time reaching the consensus is called Atropos consensus time. After Atropos consensus time is computed, the Clotho is nominated to Atropos and each node stores the hash value of Atropos and Atropos consensus time in Main-Chain (blockchain). The Main-chain is used for time order between event blocks. The proof of Atropos consensus time selection is shown in the section [se:proof]."])),(l()(),e.sb(5566,0,null,null,0,"embed",[["height","302"],["src","Atropos_fig1.pdf"]],null,null,null,null,null)),(l()(),e.sb(5567,0,null,null,61,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:Atropos] shows the example of Atropos selection. In Figure [fig:Clotho], all roots in the frame "])),(l()(),e.sb(5569,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5571,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" are selected as Clotho through the existence of roots in the frame "])),(l()(),e.sb(5574,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5576,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[". Each root in the frame "])),(l()(),e.sb(5579,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5581,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["5"])),(l()(),e.Ib(-1,null,[" computes candidate time using timestamps of reachable roots in the frame "])),(l()(),e.sb(5584,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5586,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[". Each root in the frame "])),(l()(),e.sb(5589,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5591,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["5"])),(l()(),e.Ib(-1,null,[" stores the candidate time to min-max value space. The root "])),(l()(),e.sb(5594,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(5596,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["6"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(5599,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5601,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["6"])),(l()(),e.Ib(-1,null,[" can reach more than 2n/3 roots in "])),(l()(),e.sb(5604,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5606,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["5"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(5609,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(5611,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["6"])),(l()(),e.Ib(-1,null,[" can know the candidate time of the reachable roots that "])),(l()(),e.sb(5614,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5616,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["5"])),(l()(),e.Ib(-1,null,[" takes. If "])),(l()(),e.sb(5619,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(5621,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["6"])),(l()(),e.Ib(-1,null,[" knows the same candidate time than more than 2n/3, we select the candidate time as Atropos consensus time. Then all Clotho in the frame "])),(l()(),e.sb(5624,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5626,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" become Atropos."])),(l()(),e.sb(5629,0,null,null,0,"embed",[["src","Atropos_fig2.pdf"]],null,null,null,null,null)),(l()(),e.sb(5630,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:Atropos_Node] shows the state of node "])),(l()(),e.sb(5632,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" when Atropos is selected. In this example, node "])),(l()(),e.sb(5635,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" knows all roots in the frame "])),(l()(),e.sb(5638,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5640,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" become Atropos. Then node "])),(l()(),e.sb(5643,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" prunes information of the frame "])),(l()(),e.sb(5646,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5648,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" in clotho check list since all roots in the frame "])),(l()(),e.sb(5651,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5653,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" become Atropos and main chain stores Atropos information."])),(l()(),e.sb(5656,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[H]"])),(l()(),e.sb(5658,0,null,null,199,"p",[],null,null,null,null,null)),(l()(),e.sb(5659,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Input"])),(l()(),e.Ib(-1,null,[": "])),(l()(),e.sb(5662,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5665,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(5667,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(5670,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["h**o"])),(l()(),e.Ib(-1,null,[" in frame "])),(l()(),e.sb(5674,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5676,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5677,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(5679,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5682,0,null,null,13,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5684,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["o"])),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(5687,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(5690,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(5693,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(5697,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5699,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(5703,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(5705,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["l"])),(l()(),e.sb(5708,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" \u2190 the index of the last frame "])),(l()(),e.sb(5711,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5713,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5714,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(5716,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[" \u2190 be the Root set "])),(l()(),e.sb(5719,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(5721,0,null,null,8,"sub",[],null,null,null,null,null)),(l()(),e.sb(5722,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(5724,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(5725,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u2005"])),(l()(),e.sb(5728,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" in frame "])),(l()(),e.sb(5731,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5733,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(5734,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u2005"])),(l()(),e.sb(5737,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(5739,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5742,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5744,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5748,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") \u2190 "])),(l()(),e.sb(5751,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5754,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.sb(5756,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(5759,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(5762,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(5766,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5768,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,[" s \u2190 the set of Root in "])),(l()(),e.sb(5772,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5774,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(5775,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[" that "])),(l()(),e.sb(5779,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" can be happened-before with 2n/3 condition t \u2190 RESELECTION(s, "])),(l()(),e.sb(5782,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") k \u2190 the number of root having "])),(l()(),e.sb(5785,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(5788,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(5790,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5793,0,null,null,13,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5795,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["o"])),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(5798,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(5801,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(5804,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(5808,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5810,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(5814,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5816,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5819,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5821,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5825,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") \u2190 "])),(l()(),e.sb(5828,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5830,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5833,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5835,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5839,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") \u2190 "])),(l()(),e.sb(5842,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5844,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5847,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5849,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5853,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") \u2190 the minimum value in "])),(l()(),e.sb(5856,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(5858,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[H]"])),(l()(),e.sb(5860,0,null,null,139,"p",[],null,null,null,null,null)),(l()(),e.sb(5861,0,null,null,3,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" ALG@cmd@@L @Function @currentfunction"])),(l()(),e.sb(5863,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Reselection"])),(l()(),e.sb(5865,0,null,null,3,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" bsphack @writeauxout"])),(l()(),e.sb(5867,0,null,null,0,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" esphack "])),(l()(),e.sb(5869,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Input"])),(l()(),e.Ib(-1,null,[": Root set "])),(l()(),e.sb(5872,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[", and Clotho "])),(l()(),e.sb(5875,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5877,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Output"])),(l()(),e.Ib(-1,null,[": candidate time "])),(l()(),e.sb(5880,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5882,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c4"])),(l()(),e.Ib(-1,null,[" \u2190 set of all "])),(l()(),e.sb(5885,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5887,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5888,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(5891,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(5894,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5896,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5900,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") for all "])),(l()(),e.sb(5903,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(5906,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(5908,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" \u2190 set of tuples ("])),(l()(),e.sb(5911,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5913,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5914,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(5917,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5919,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5920,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") computed from "])),(l()(),e.sb(5923,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c4"])),(l()(),e.Ib(-1,null,[", where "])),(l()(),e.sb(5926,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5928,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5929,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(5932,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5934,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["o"])),(l()(),e.Ib(-1,null,["u"])),(l()(),e.sb(5937,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5941,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5943,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5944,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") "])),(l()(),e.sb(5947,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(5949,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(5953,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5955,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["o"])),(l()(),e.Ib(-1,null,["u"])),(l()(),e.sb(5958,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(5962,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(5964,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(5968,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(5970,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5971,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") "])),(l()(),e.sb(5974,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(5977,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(5979,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(5982,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(5985,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["t**e"])),(l()(),e.sb(5988,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(5991,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(5993,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(5994,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(5996,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["return"])),(l()(),e.sb(5998,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(6e3,0,null,null,138,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Algorithm [al:atc] and [al:resel] show pseudo code of Atropos consensus time selection and Consensus time reselection. In Algorithm [al:atc], at line 6, "])),(l()(),e.sb(6002,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" saves the deference of relationship between root set of "])),(l()(),e.sb(6005,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6008,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["w"])),(l()(),e.Ib(-1,null,[". Thus, line 8 means that "])),(l()(),e.sb(6011,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["w"])),(l()(),e.Ib(-1,null,[" is one of the elements in root set of the frame "])),(l()(),e.sb(6014,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(6016,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6017,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20053"])),(l()(),e.Ib(-1,null,[", where the frame "])),(l()(),e.sb(6021,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(6023,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6024,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" includes "])),(l()(),e.sb(6027,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[". Line 10, each root in the frame "])),(l()(),e.sb(6030,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(6032,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6033,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" selects own Lamport timestamp as candidate time of "])),(l()(),e.sb(6036,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" when they confirm root "])),(l()(),e.sb(6039,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" as Cltoho. In line 12, 13, and 14, "])),(l()(),e.sb(6042,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(6045,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(6048,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" save the set of root that "])),(l()(),e.sb(6051,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["w"])),(l()(),e.Ib(-1,null,[" can be happened-before with 2n/3 condition "])),(l()(),e.sb(6054,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[", the result of "])),(l()(),e.sb(6057,0,null,null,16,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6059,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(6062,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(6065,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(6068,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["T"])),(l()(),e.Ib(-1,null,["I"])),(l()(),e.sb(6071,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,[" function, and the number of root in "])),(l()(),e.sb(6075,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" having "])),(l()(),e.sb(6078,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[". Line 15 is checking whether there is a difference as much as "])),(l()(),e.sb(6081,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.Ib(-1,null,[" between "])),(l()(),e.sb(6084,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6087,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" where "])),(l()(),e.sb(6090,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.Ib(-1,null,[" is a constant value for minimum selection frame. Line 16-20 is checking whether more than two-thirds of root in the frame "])),(l()(),e.sb(6093,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(6095,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6096,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[" nominate the same candidate time. If two-thirds of root in the frame "])),(l()(),e.sb(6100,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(6102,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6103,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[" nominate the same candidate time, the root "])),(l()(),e.sb(6107,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" is assigned consensus time as "])),(l()(),e.sb(6110,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[". Line 22 is minimum selection frame. In minimum selection frame, minimum value of candidate time is selected to reach byzantine agreement. Algorithm [al:resel] operates in the middle of Algorithm [al:atc]. In Algorithm [al:resel], input is a root set "])),(l()(),e.sb(6113,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["W"])),(l()(),e.Ib(-1,null,[" and output is a reselected candidate time. Line 4-5 computes the frequencies of each candidate time from all the roots in "])),(l()(),e.sb(6116,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["W"])),(l()(),e.Ib(-1,null,[". In line 6-11, a candidate time which is smallest time that is the most nomitated. The time complexity of Algorithm [al:resel] is "])),(l()(),e.sb(6119,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(6122,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[") where "])),(l()(),e.sb(6125,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of nodes. Since Algorithm [al:atc] includes Algorithm [al:resel], the time complexity of Algorithm [al:atc] is "])),(l()(),e.sb(6128,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(6131,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6133,0,null,null,1,"sup",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[") where "])),(l()(),e.sb(6136,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of nodes."])),(l()(),e.sb(6139,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the Atropos Consensus Time Selection algorithm, nodes reach consensus agreement about candidate time of a Clotho without additional communication (i.e., exchanging candidate time) with each other. Each node communicates with each other through the Lachesis protocol, the OPERA chain of all nodes grows up into same shape. This allows each node to know the candidate time of other nodes based on its OPERA chain and reach a consensus agreement. The proof that the agreement based on OPERA chain become agreement in action is shown in the section [se:proof]."])),(l()(),e.sb(6141,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Atropos can be determined by the consensus time of each Clotho. It is an event block that is determined by finality and is non-modifiable. Furthermore, all event blocks can be reached from Atropos guarantee finality."])),(l()(),e.sb(6143,0,null,null,1,"h2",[["id","lachesis-consensus"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis Consensus"])),(l()(),e.sb(6145,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(6146,0,null,null,0,"img",[["alt","Consensus Method in a DAG (combines chain with consensus process of pBFT)"],["height","264"],["src","pBFTtoPath"]],null,null,null,null,null)),(l()(),e.sb(6147,0,null,null,146,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:pBFTtoPath] illustrates how consensus is reached through the domination relation in the OPERA chain. In the figure, leaf set, denoted by "])),(l()(),e.sb(6149,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6151,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6152,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", consists of the first event blocks created by individual participant nodes. "])),(l()(),e.sb(6156,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" is the set of event blocks that do not belong neither in "])),(l()(),e.sb(6159,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6161,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6162,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" nor in any root set "])),(l()(),e.sb(6166,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6168,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6169,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s**i"])),(l()(),e.Ib(-1,null,[". Given a vertex "])),(l()(),e.sb(6172,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(6175,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,["\u2005\u222a\u2005"])),(l()(),e.sb(6178,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6180,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6181,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s**i"])),(l()(),e.Ib(-1,null,[", there exists a path from "])),(l()(),e.sb(6184,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" that can reach a leaf vertex "])),(l()(),e.sb(6187,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(6190,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6192,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6193,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[". Let "])),(l()(),e.sb(6197,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6199,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6202,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6204,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" be root event blocks in root set "])),(l()(),e.sb(6207,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6209,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6210,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6214,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6216,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6217,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", respectively. "])),(l()(),e.sb(6221,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6223,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is the block where a quorum or more blocks exist on a path that reaches a leaf event block. Every path from "])),(l()(),e.sb(6226,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6228,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" to a leaf vertex will contain a vertex in "])),(l()(),e.sb(6231,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(6233,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". Thus, if there exists a vertex "])),(l()(),e.sb(6236,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(6239,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(6241,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(6244,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" is created by more than a quorum of participants, then "])),(l()(),e.sb(6247,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" is already included in "])),(l()(),e.sb(6250,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6252,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6253,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". Likewise, "])),(l()(),e.sb(6257,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6259,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" is a block that can be reached for "])),(l()(),e.sb(6262,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(6264,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(6265,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" including "])),(l()(),e.sb(6269,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6271,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" through blocks made by a quorum of participants. For all leaf event blocks that could be reached by "])),(l()(),e.sb(6274,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6276,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", they are connected with more than quorum participants through the presence of "])),(l()(),e.sb(6279,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6281,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". The existence of the root "])),(l()(),e.sb(6284,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6286,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" shows that information of "])),(l()(),e.sb(6289,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6291,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is connected with more than a quorum. This kind of a path search allows the chain to reach consensus in a similar manner as the pBFT consensus processes. It is essential to keep track of the blocks satisfying the pBFT consensus process for quicker path search; our OPERA chain and Main-chain keep track of these blocks."])),(l()(),e.sb(6294,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The sequential order of each event block is an important aspect for Byzantine fault tolerance. In order to determine the pre-and-post sequence between all event blocks, we use Atropos consensus time, Lamport timestamp algorithm and the hash value of the event block."])),(l()(),e.sb(6296,0,null,null,0,"embed",[["src","topological_ordering_rule.pdf"],["style","width:100.0%"]],null,null,null,null,null)),(l()(),e.sb(6297,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["First, when each node creates event blocks, they have a logical timestamp based on Lamport timestamp. This means that they have a partial ordering between the relevant event blocks. Each Clotho has consensus time to the Atropos. This consensus time is computed based on the logical time nominated from other nodes at the time of the 2n/3 agreement."])),(l()(),e.sb(6299,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each event block is based on the following three rules to reach an agreement:"])),(l()(),e.sb(6301,0,null,null,9,"ol",[],null,null,null,null,null)),(l()(),e.sb(6302,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(6303,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If there are more than one Atropos with different times on the same frame, the event block with smaller consensus time has higher priority."])),(l()(),e.sb(6305,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(6306,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If there are more than one Atropos having any of the same consensus time on the same frame, determine the order based on the own logical time from Lamport timestamp."])),(l()(),e.sb(6308,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(6309,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When there are more than one Atropos having the same consensus time, if the local logical time is same, a smaller hash value is given priority through hash function."])),(l()(),e.sb(6311,0,null,null,0,"embed",[["src","topological_ordering.pdf"],["style","width:90.0%"]],null,null,null,null,null)),(l()(),e.sb(6312,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:sequence of operachain] shows the part of OPERA chain in which the final consensus order is determined based on these 3 rules. The number represented by each event block is a logical time based on Lamport timestamp. Final topological consensus order containing the event blocks are based on agreement from the apropos. Based on each Atropos, they will have different colors depending on their range."])),(l()(),e.sb(6314,0,null,null,1,"h2",[["id","detecting-forks"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Detecting Forks"])),(l()(),e.sb(6316,0,null,null,41,"p",[],null,null,null,null,null)),(l()(),e.sb(6317,0,null,null,40,"span",[],null,null,null,null,null)),(l()(),e.sb(6318,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(Fork)"])),(l()(),e.sb(6320,0,null,null,37,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A pair of events ("])),(l()(),e.sb(6322,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6324,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6325,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(6328,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6330,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6331,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") is a fork if "])),(l()(),e.sb(6334,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6336,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6337,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6340,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6342,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6343,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" have the same creator, but neither is a self-ancestor of the other. Denoted by "])),(l()(),e.sb(6346,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6348,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6349,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u22d4\u2004"])),(l()(),e.sb(6352,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6354,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6355,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(6358,0,null,null,96,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For example, let "])),(l()(),e.sb(6360,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6362,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6363,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["z"])),(l()(),e.Ib(-1,null,[" be an event in node "])),(l()(),e.sb(6366,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6368,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and two child events "])),(l()(),e.sb(6371,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6373,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6374,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6377,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6379,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6380,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" of "])),(l()(),e.sb(6383,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6385,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6386,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["z"])),(l()(),e.Ib(-1,null,[". if "])),(l()(),e.sb(6389,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6391,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6392,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(6395,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6396,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(6398,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6400,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6401,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["z"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(6404,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6406,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6407,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(6410,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6411,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(6413,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6415,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6416,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["z"])),(l()(),e.Ib(-1,null,[", $v_x \\not {\\hookrightarrow^{s}}v_y$, $v_y \\not {\\hookrightarrow^{s}}v_z$, then ("])),(l()(),e.sb(6419,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6421,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6422,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(6425,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6427,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6428,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") is a fork. The fork relation is symmetric; that is "])),(l()(),e.sb(6431,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6433,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6434,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u22d4\u2004"])),(l()(),e.sb(6437,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6439,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6440,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" iff "])),(l()(),e.sb(6443,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6445,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6446,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u2004\u22d4\u2004"])),(l()(),e.sb(6449,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6451,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6452,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(6455,0,null,null,43,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["By definition, ("])),(l()(),e.sb(6457,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6459,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6460,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(6463,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6465,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6466,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") is a fork if "])),(l()(),e.sb(6469,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c**r"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(6472,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6474,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6475,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[")="])),(l()(),e.sb(6478,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c**r"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(6481,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6483,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6484,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["), $v_x \\not {\\hookrightarrow^{a}}v_y$ and $v_y \\not {\\hookrightarrow^{a}}v_x$. Using Happened-Before, the second part means $v_x \\not \\rightarrow v_y$ and $v_y \\not \\rightarrow v_x$. By definition of concurrent, we get "])),(l()(),e.sb(6487,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6489,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6490,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2225\u2004"])),(l()(),e.sb(6493,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6495,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6496,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(6499,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If there is a fork "])),(l()(),e.sb(6501,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6503,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6504,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u22d4\u2004"])),(l()(),e.sb(6507,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6509,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6510,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(6513,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6515,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6516,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6519,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6521,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6522,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" cannot both be roots on honest nodes."])),(l()(),e.sb(6525,0,null,null,85,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Here, we show a proof by contradiction. Any honest node cannot accept a fork so "])),(l()(),e.sb(6527,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6529,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6530,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6533,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6535,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6536,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" cannot be roots on the same honest node. Now we prove a more general case. Suppose that both "])),(l()(),e.sb(6539,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6541,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6542,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(6545,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6547,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6548,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6551,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6553,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6554,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" is root of "])),(l()(),e.sb(6557,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6559,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6560,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[", where "])),(l()(),e.sb(6563,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6565,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6566,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(6569,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6571,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6572,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" are honest nodes. Since "])),(l()(),e.sb(6575,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6577,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6578,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is a root, it reached events created by more than 2/3 of member nodes. Similarly, "])),(l()(),e.sb(6581,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6583,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6584,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" is a root, it reached events created by more than 2/3 of member nodes. Thus, there must be an overlap of more than "])),(l()(),e.sb(6587,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 members of those events in both sets. Since we assume less than "])),(l()(),e.sb(6590,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 members are not honest, so there must be at least one honest member in the overlap set. Let "])),(l()(),e.sb(6593,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6595,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6596,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" be such an honest member. Because "])),(l()(),e.sb(6599,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6601,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6602,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" is honest, "])),(l()(),e.sb(6605,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6607,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6608,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" does not allow the fork."])),(l()(),e.sb(6611,0,null,null,1,"h1",[["id","conclusion"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Conclusion"])),(l()(),e.sb(6613,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We further optimize the OPERA chain and Main-chain for faster consensus. By using Lamport timestamps and domination relation, the topological ordering of event blocks in OPERA chain and Main chain is more intuitive and reliable in distributed system."])),(l()(),e.sb(6615,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We have presented a formal semantics for Lachesis protocol in Section [se:lca]. Our formal proof of pBFT for our Lachesis protocol is given in Section [se:proof]. Our work is the first that studies such concurrent common knowledge sematics and dominator relationships in DAG-based protocols."])),(l()(),e.sb(6617,0,null,null,1,"h1",[["id","appendix"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Appendix"])),(l()(),e.sb(6619,0,null,null,1,"h2",[["id","preliminaries"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Preliminaries"])),(l()(),e.sb(6621,0,null,null,104,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The history of a Lachesis protocol can be represented by a directed acyclic graph "])),(l()(),e.sb(6623,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004=\u2004("])),(l()(),e.sb(6626,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(6629,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["), where "])),(l()(),e.sb(6632,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" is a set of vertices and "])),(l()(),e.sb(6635,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" is a set of edges. Each vertex in a row (node) represents an event. Time flows left-to-right of the graph, so left vertices represent earlier events in history. A path "])),(l()(),e.sb(6638,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(6641,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[" is a sequence of vertices ("])),(l()(),e.sb(6644,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6646,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(6649,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6651,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", \u2026, "])),(l()(),e.sb(6654,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6656,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6657,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[") by following the edges in "])),(l()(),e.sb(6660,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[". Let "])),(l()(),e.sb(6663,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6665,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6666,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" be a vertex in "])),(l()(),e.sb(6669,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[". A vertex "])),(l()(),e.sb(6672,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6674,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6675,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" is the "])),(l()(),e.sb(6678,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["parent"])),(l()(),e.Ib(-1,null,[" of "])),(l()(),e.sb(6681,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6683,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6684,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is an edge from "])),(l()(),e.sb(6687,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6689,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6690,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(6693,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6695,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6696,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[". A vertex "])),(l()(),e.sb(6699,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6701,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6702,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is an "])),(l()(),e.sb(6705,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["ancestor"])),(l()(),e.Ib(-1,null,[" of "])),(l()(),e.sb(6708,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6710,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6711,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is a path from "])),(l()(),e.sb(6714,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6716,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6717,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(6720,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6722,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6723,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(6726,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each machine that participates in the Lachesis protocol is called a node."])),(l()(),e.sb(6728,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let "])),(l()(),e.sb(6730,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" denote the total number of nodes."])),(l()(),e.sb(6733,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each node can create event blocks, send (receive) messages to (from) other nodes."])),(l()(),e.sb(6735,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block is a vertex of the OPERA chain."])),(l()(),e.sb(6737,0,null,null,40,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Suppose a node "])),(l()(),e.sb(6739,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6741,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6742,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" creates an event "])),(l()(),e.sb(6745,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6747,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6748,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" after an event "])),(l()(),e.sb(6751,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6753,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6754,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(6757,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6759,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6760,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". Each event block has exactly "])),(l()(),e.sb(6763,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" references. One of the references is self-reference, and the other "])),(l()(),e.sb(6766,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1 references point to the top events of "])),(l()(),e.sb(6769,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6771,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6772,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s "])),(l()(),e.sb(6775,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1 peer nodes."])),(l()(),e.sb(6778,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A node "])),(l()(),e.sb(6780,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6782,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6783,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" has "])),(l()(),e.sb(6786,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peer nodes."])),(l()(),e.sb(6789,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(6791,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a top event of a node "])),(l()(),e.sb(6794,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6796,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6797,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" if there is no other event in "])),(l()(),e.sb(6800,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(6802,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6803,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" referencing "])),(l()(),e.sb(6806,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(6809,0,null,null,40,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(6811,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6813,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6814,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[' is called \u201cself-ref" of event '])),(l()(),e.sb(6817,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6819,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6820,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[", if the self-ref hash of "])),(l()(),e.sb(6823,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6825,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6826,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" points to the event "])),(l()(),e.sb(6829,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6831,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6832,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(6835,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6837,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6838,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(6841,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6842,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(6844,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6846,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6847,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(6850,0,null,null,40,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(6852,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6854,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6855,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[' is called \u201cref" of event '])),(l()(),e.sb(6858,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6860,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6861,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if the reference hash of "])),(l()(),e.sb(6864,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6866,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6867,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" points to the event "])),(l()(),e.sb(6870,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6872,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6873,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(6876,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6878,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6879,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(6882,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6883,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(6885,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6887,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6888,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(6891,0,null,null,9,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For simplicity, we can use \u21aa to denote a reference relationship (either \u21aa"])),(l()(),e.sb(6893,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6894,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" or \u21aa"])),(l()(),e.sb(6897,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6898,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(6901,0,null,null,64,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(6903,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6905,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6906,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is self-ancestor of an event block "])),(l()(),e.sb(6909,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6911,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6912,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is a sequence of events such that "])),(l()(),e.sb(6915,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6917,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6918,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(6921,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6922,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(6924,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6926,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(6929,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6930,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["\u2026\u21aa"])),(l()(),e.sb(6933,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6934,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(6936,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6938,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6939,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(6942,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6943,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(6945,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6947,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6948,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(6951,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6953,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6954,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(6957,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(6958,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s**a"])),(l()(),e.sb(6960,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6962,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6963,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(6966,0,null,null,51,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(6968,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6970,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6971,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is an ancestor of an event block "])),(l()(),e.sb(6974,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6976,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6977,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is a sequence of events such that "])),(l()(),e.sb(6980,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6982,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6983,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u2004\u21aa\u2004"])),(l()(),e.sb(6986,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6988,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u21aa\u2004\u2026\u2004\u21aa\u2004"])),(l()(),e.sb(6991,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6993,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(6994,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["\u2004\u21aa\u2004"])),(l()(),e.sb(6997,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(6999,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7e3,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(7003,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7005,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7006,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(7009,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7010,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(7012,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7014,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7015,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7018,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For simplicity, we simply use "])),(l()(),e.sb(7020,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7022,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7023,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(7026,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7027,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(7029,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7031,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7032,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" to refer both ancestor and self-ancestor relationship, unless we need to distinguish the two cases."])),(l()(),e.sb(7035,0,null,null,64,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["OPERA chain is a DAG graph "])),(l()(),e.sb(7037,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004=\u2004("])),(l()(),e.sb(7040,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(7043,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[") consisting of "])),(l()(),e.sb(7046,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" vertices and "])),(l()(),e.sb(7049,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" edges. Each vertex "])),(l()(),e.sb(7052,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7054,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7055,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(7058,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" is an event block. An edge ("])),(l()(),e.sb(7061,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7063,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7064,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(7067,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7069,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7070,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[")\u2208"])),(l()(),e.sb(7073,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" refers to a hashing reference from "])),(l()(),e.sb(7076,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7078,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7079,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(7082,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7084,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7085,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["; that is, "])),(l()(),e.sb(7088,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7090,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7091,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u21aa\u2004"])),(l()(),e.sb(7094,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7096,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7097,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7100,0,null,null,1,"h3",[["id","domination-relation"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Domination relation"])),(l()(),e.sb(7102,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Then we define the domination relation for event blocks. To begin with, we first introduce pseudo vertices, "])),(l()(),e.sb(7104,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["top"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(7107,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["bot"])),(l()(),e.Ib(-1,null,[", of the DAG OPERA chain "])),(l()(),e.sb(7110,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7113,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A pseudo vertex, called top, is the parent of all top event blocks. Denoted by \u22a4."])),(l()(),e.sb(7115,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A pseudo vertex, called bottom, is the child of all leaf event blocks. Denoted by \u22a5."])),(l()(),e.sb(7117,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["With the pseudo vertices, we have \u22a5 happened before all event blocks. Also all event blocks happened before \u22a4. That is, for all event "])),(l()(),e.sb(7119,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7121,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7122,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", \u22a5\u2004\u2192\u2004"])),(l()(),e.sb(7125,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7127,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7128,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(7131,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7133,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7134,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004\u22a4."])),(l()(),e.sb(7137,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(7139,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7141,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7142,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" dominates an event "])),(l()(),e.sb(7145,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7147,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7148,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" if every path from \u22a4 to "])),(l()(),e.sb(7151,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7153,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7154,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" must go through "])),(l()(),e.sb(7157,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7159,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7160,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(7163,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7165,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7166,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u2004\u226b\u2004"])),(l()(),e.sb(7169,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7171,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7172,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7175,0,null,null,52,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event "])),(l()(),e.sb(7177,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7179,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7180,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" strictly dominates an event "])),(l()(),e.sb(7183,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7185,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7186,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(7189,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7191,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7192,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u2004\u226b\u2004"])),(l()(),e.sb(7195,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7197,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7198,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(7201,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7203,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7204,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" does not equal "])),(l()(),e.sb(7207,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7209,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7210,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(7213,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7215,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7216,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u226b"])),(l()(),e.sb(7219,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7220,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(7222,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7224,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7225,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7228,0,null,null,52,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A vertex "])),(l()(),e.sb(7230,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7232,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7233,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" is said \u201cdomfront\u201d a vertex "])),(l()(),e.sb(7236,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7238,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7239,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(7242,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7244,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7245,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" dominates an immediate predecessor of "])),(l()(),e.sb(7248,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7250,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7251,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", but "])),(l()(),e.sb(7254,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7256,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7257,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" does not strictly dominate "])),(l()(),e.sb(7260,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7262,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7263,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(7266,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7268,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7269,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u226b"])),(l()(),e.sb(7272,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7273,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(7275,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7277,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7278,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7281,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The dominance frontier of a vertex "])),(l()(),e.sb(7283,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7285,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7286,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" is the set of all nodes "])),(l()(),e.sb(7289,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7291,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7292,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(7295,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7297,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7298,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u226b"])),(l()(),e.sb(7301,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7302,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(7304,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7306,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7307,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(7310,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D**F"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(7313,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7315,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7316,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(7319,0,null,null,31,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["From the above definitions of domfront and dominance frontier, the following holds. If "])),(l()(),e.sb(7321,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7323,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7324,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["\u226b"])),(l()(),e.sb(7327,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7328,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(7330,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7332,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7333,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(7336,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7338,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7339,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(7342,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D**F"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(7345,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7347,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7348,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(7351,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Here, we introduce a new idea that extends the concept domination."])),(l()(),e.sb(7353,0,null,null,55,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For a vertex "])),(l()(),e.sb(7355,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in a DAG "])),(l()(),e.sb(7358,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[", let "])),(l()(),e.sb(7361,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(7364,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]=("])),(l()(),e.sb(7367,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(7369,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7370,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(7373,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(7375,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7376,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[") denote an induced-subgraph of "])),(l()(),e.sb(7379,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(7382,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(7384,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7385,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" consists of all ancestors of "])),(l()(),e.sb(7388,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" including "])),(l()(),e.sb(7391,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(7394,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(7396,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7397,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is the induced edges of "])),(l()(),e.sb(7400,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(7402,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7403,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(7406,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7409,0,null,null,58,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For a set "])),(l()(),e.sb(7411,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" of vertices, an event "])),(l()(),e.sb(7414,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7416,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7417,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" $\\frac{2}{3}$-dominates "])),(l()(),e.sb(7420,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" if there are more than 2/3 of vertices "])),(l()(),e.sb(7423,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7425,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7426,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(7429,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(7432,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7434,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7435,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" dominates "])),(l()(),e.sb(7438,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7440,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7441,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". Recall that "])),(l()(),e.sb(7444,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(7446,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is the set of all leaf vertices in "])),(l()(),e.sb(7449,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[". The $\\frac{2}{3}$-dom set "])),(l()(),e.sb(7452,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(7454,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" is the same as the set "])),(l()(),e.sb(7457,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(7459,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[".The $\\frac{2}{3}$-dom set "])),(l()(),e.sb(7462,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(7464,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7465,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is defined as follows:"])),(l()(),e.sb(7468,0,null,null,70,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A vertex "])),(l()(),e.sb(7470,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7472,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7473,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" belongs to a $\\frac{2}{3}$-dom set within the graph "])),(l()(),e.sb(7476,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(7479,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7481,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7482,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,["], if "])),(l()(),e.sb(7485,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7487,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7488,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" $\\frac{2}{3}$-dominates "])),(l()(),e.sb(7491,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(7493,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". The $\\frac{2}{3}$-dom set "])),(l()(),e.sb(7496,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(7498,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7499,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" consists of all roots "])),(l()(),e.sb(7502,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(7504,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7505,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(7508,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(7510,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7511,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" \u2209 "])),(l()(),e.sb(7514,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(7516,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7517,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", \u2200 "])),(l()(),e.sb(7520,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" = 1..("])),(l()(),e.sb(7523,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1), and "])),(l()(),e.sb(7526,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(7528,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7529,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" $\\frac{2}{3}$-dominates "])),(l()(),e.sb(7532,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(7534,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(7535,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7539,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The $\\frac{2}{3}$-dom set "])),(l()(),e.sb(7541,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(7543,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7544,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is the same with the root set "])),(l()(),e.sb(7547,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(7549,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7550,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", for all nodes."])),(l()(),e.sb(7553,0,null,null,1,"h2",[["id","proof-of-lachesis-consensus-algorithm"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Proof of Lachesis Consensus Algorithm"])),(l()(),e.sb(7555,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section presents a proof of liveness and safety of our Lachesis protocols. We aim to show that our consensus is Byzantine fault tolerant with a presumption that more than two-thirds of participants are reliable nodes. We first provide some definitions, lemmas and theorems. Then we validate the Byzantine fault tolerance."])),(l()(),e.sb(7557,0,null,null,1,"h3",[["id","proof-of-byzantine-fault-tolerance-for-lachesis-consensus-algorithm"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Proof of Byzantine Fault Tolerance for Lachesis Consensus Algorithm"])),(l()(),e.sb(7559,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(7561,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7563,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7564,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is said Happened-Immediate-Before an event block "])),(l()(),e.sb(7567,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7569,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7570,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(7573,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7575,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7576,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is a (self-) ref of "])),(l()(),e.sb(7579,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7581,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7582,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(7585,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7587,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7588,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u21a6\u2004"])),(l()(),e.sb(7591,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7593,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7594,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7597,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(7599,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7601,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7602,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is said Happened-Before an event block "])),(l()(),e.sb(7605,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7607,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7608,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(7611,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7613,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7614,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is a (self-) ancestor of "])),(l()(),e.sb(7617,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7619,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7620,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[". Denoted by "])),(l()(),e.sb(7623,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7625,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7626,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(7629,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7631,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7632,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7635,0,null,null,58,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The happens-before relation is the transitive closure of happens-immediately-before. Thus, an event "])),(l()(),e.sb(7637,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7639,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7640,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" happened before an event "])),(l()(),e.sb(7643,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7645,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7646,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" if one of the followings happens: (a) "])),(l()(),e.sb(7649,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7651,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7652,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(7655,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7656,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(7658,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7660,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7661,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", (b) "])),(l()(),e.sb(7664,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7666,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7667,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(7670,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7671,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(7673,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7675,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7676,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", or (c) "])),(l()(),e.sb(7679,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7681,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7682,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(7685,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7686,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(7688,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7690,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7691,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[". We come up with the following proposition:"])),(l()(),e.sb(7694,0,null,null,39,"p",[],null,null,null,null,null)),(l()(),e.sb(7695,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7697,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7698,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u21a6\u2004"])),(l()(),e.sb(7701,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7703,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7704,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" iff "])),(l()(),e.sb(7707,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7709,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7710,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u2004\u21aa\u2004"])),(l()(),e.sb(7713,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7715,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7716,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" iff edge ("])),(l()(),e.sb(7719,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7721,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7722,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(7725,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7727,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7728,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[") \u2208"])),(l()(),e.sb(7731,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" of OPERA chain."])),(l()(),e.sb(7734,0,null,null,27,"p",[],null,null,null,null,null)),(l()(),e.sb(7735,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7737,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7738,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(7741,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7743,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7744,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" iff "])),(l()(),e.sb(7747,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7749,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7750,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(7753,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(7754,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(7756,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7758,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7759,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7762,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Two event blocks "])),(l()(),e.sb(7764,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7766,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7767,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(7770,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7772,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7773,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" are said concurrent if neither of them happened before the other. Denoted by "])),(l()(),e.sb(7776,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7778,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7779,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2225\u2004"])),(l()(),e.sb(7782,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7784,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7785,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7788,0,null,null,91,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Given two vertices "])),(l()(),e.sb(7790,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7792,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7793,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(7796,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7798,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7799,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" both contained in two OPERA chains "])),(l()(),e.sb(7802,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7804,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(7807,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7809,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" on two nodes. We have the following: (1) "])),(l()(),e.sb(7812,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7814,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7815,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(7818,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7820,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7821,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(7824,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7826,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" iff "])),(l()(),e.sb(7829,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7831,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7832,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(7835,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7837,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7838,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(7841,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7843,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["; (2) "])),(l()(),e.sb(7846,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7848,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7849,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2225\u2004"])),(l()(),e.sb(7852,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7854,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7855,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(7858,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7860,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" iff "])),(l()(),e.sb(7863,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7865,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7866,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2225\u2004"])),(l()(),e.sb(7869,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(7871,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7872,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(7875,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7877,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7880,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Below is some main definitions in Lachesis protocol."])),(l()(),e.sb(7882,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The first created event block of a node is called a leaf event block."])),(l()(),e.sb(7884,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[def:root] The leaf event block of a node is a root. When an event block "])),(l()(),e.sb(7886,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" can reach more than 2"])),(l()(),e.sb(7889,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 of the roots in the previous frames, "])),(l()(),e.sb(7892,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" becomes a root."])),(l()(),e.sb(7895,0,null,null,56,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The set of all first event blocks (leaf events) of all nodes form the first root set "])),(l()(),e.sb(7897,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(7899,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" (|"])),(l()(),e.sb(7902,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(7904,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["| = "])),(l()(),e.sb(7907,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["). The root set "])),(l()(),e.sb(7910,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(7912,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7913,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" consists of all roots "])),(l()(),e.sb(7916,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(7918,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7919,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(7922,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(7924,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7925,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" \u2209 "])),(l()(),e.sb(7928,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(7930,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7931,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", \u2200 "])),(l()(),e.sb(7934,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" = 1..("])),(l()(),e.sb(7937,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1) and "])),(l()(),e.sb(7940,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(7942,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7943,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" can reach more than 2n/3 other roots in the current frame, "])),(l()(),e.sb(7946,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" = 1..("])),(l()(),e.sb(7949,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-1)."])),(l()(),e.sb(7952,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Frame "])),(l()(),e.sb(7954,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(7956,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7957,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is a natural number that separates Root sets."])),(l()(),e.sb(7960,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The root set at frame "])),(l()(),e.sb(7962,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(7964,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7965,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is denoted by "])),(l()(),e.sb(7968,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(7970,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(7971,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(7974,0,null,null,40,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[dfn:conchains] OPERA chains "])),(l()(),e.sb(7976,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7978,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(7981,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7983,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" are consistent iff for any event "])),(l()(),e.sb(7986,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" contained in both chains, "])),(l()(),e.sb(7989,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7991,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(7994,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]="])),(l()(),e.sb(7997,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(7999,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(8002,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]. Denoted by "])),(l()(),e.sb(8005,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8007,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(8010,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8012,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(8015,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When two consistent chains contain the same event "])),(l()(),e.sb(8017,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", both chains contain the same set of ancestors for "])),(l()(),e.sb(8020,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", with the same reference and self-ref edges between those ancestors:"])),(l()(),e.sb(8023,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[thm:conchains] All nodes have consistent OPERA chains."])),(l()(),e.sb(8025,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If two nodes have OPERA chains containing event "])),(l()(),e.sb(8027,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", then they have the same "])),(l()(),e.sb(8030,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" hashes contained within "])),(l()(),e.sb(8033,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[". A node will not accept an event during a sync unless that node already has "])),(l()(),e.sb(8036,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" references for that event, so both OPERA chains must contain "])),(l()(),e.sb(8039,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" references for "])),(l()(),e.sb(8042,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[". The cryptographic hashes are assumed to be secure, therefore the references must be the same. By induction, all ancestors of "])),(l()(),e.sb(8045,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" must be the same. Therefore, the two OPERA chains are consistent."])),(l()(),e.sb(8048,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If a node "])),(l()(),e.sb(8050,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8052,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8053,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" creates an event block "])),(l()(),e.sb(8056,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", then the creator of "])),(l()(),e.sb(8059,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[", denoted by "])),(l()(),e.sb(8062,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c**r"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(8065,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["), is "])),(l()(),e.sb(8068,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8070,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8071,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(8074,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The pair of events ("])),(l()(),e.sb(8076,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8078,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8079,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(8082,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8084,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8085,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") is a fork if "])),(l()(),e.sb(8088,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8090,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8091,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8094,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8096,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8097,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" have the same creator, but neither is a self-ancestor of the other. Denoted by "])),(l()(),e.sb(8100,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8102,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8103,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u22d4\u2004"])),(l()(),e.sb(8106,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8108,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8109,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(8112,0,null,null,96,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For example, let "])),(l()(),e.sb(8114,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8116,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8117,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["z"])),(l()(),e.Ib(-1,null,[" be an event in node "])),(l()(),e.sb(8120,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8122,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and two child events "])),(l()(),e.sb(8125,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8127,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8128,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8131,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8133,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8134,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" of "])),(l()(),e.sb(8137,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8139,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8140,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["z"])),(l()(),e.Ib(-1,null,[". if "])),(l()(),e.sb(8143,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8145,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8146,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(8149,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8150,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(8152,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8154,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8155,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["z"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(8158,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8160,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8161,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u21aa"])),(l()(),e.sb(8164,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8165,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(8167,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8169,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8170,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["z"])),(l()(),e.Ib(-1,null,[", $v_x \\not {\\hookrightarrow^{s}}v_y$, $v_y \\not {\\hookrightarrow^{s}}v_z$, then ("])),(l()(),e.sb(8173,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8175,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8176,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(8179,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8181,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8182,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") is a fork. The fork relation is symmetric; that is "])),(l()(),e.sb(8185,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8187,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8188,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u22d4\u2004"])),(l()(),e.sb(8191,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8193,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8194,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" iff "])),(l()(),e.sb(8197,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8199,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8200,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["\u2004\u22d4\u2004"])),(l()(),e.sb(8203,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8205,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8206,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(8209,0,null,null,42,"p",[],null,null,null,null,null)),(l()(),e.sb(8210,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8212,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8213,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u22d4\u2004"])),(l()(),e.sb(8216,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8218,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8219,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" iff "])),(l()(),e.sb(8222,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c**r"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(8225,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8227,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8228,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[")="])),(l()(),e.sb(8231,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c**r"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(8234,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8236,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8237,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") and "])),(l()(),e.sb(8240,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8242,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8243,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2225\u2004"])),(l()(),e.sb(8246,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8248,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8249,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(8252,0,null,null,43,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["By definition, ("])),(l()(),e.sb(8254,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8256,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8257,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(8260,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8262,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8263,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") is a fork if "])),(l()(),e.sb(8266,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c**r"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(8269,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8271,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8272,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[")="])),(l()(),e.sb(8275,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c**r"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(8278,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8280,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8281,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["), $v_x \\not {\\hookrightarrow^{a}}v_y$ and $v_y \\not {\\hookrightarrow^{a}}v_x$. Using Happened-Before, the second part means $v_x \\not \\rightarrow v_y$ and $v_y \\not \\rightarrow v_x$. By definition of concurrent, we get "])),(l()(),e.sb(8284,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8286,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8287,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2225\u2004"])),(l()(),e.sb(8290,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8292,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8293,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(8296,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(fork detection). If there is a fork "])),(l()(),e.sb(8298,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8300,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8301,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u22d4\u2004"])),(l()(),e.sb(8304,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8306,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8307,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(8310,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8312,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8313,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8316,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8318,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8319,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" cannot both be roots on honest nodes."])),(l()(),e.sb(8322,0,null,null,85,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Here, we show a proof by contradiction. Any honest node cannot accept a fork so "])),(l()(),e.sb(8324,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8326,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8327,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8330,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8332,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8333,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" cannot be roots on the same honest node. Now we prove a more general case. Suppose that both "])),(l()(),e.sb(8336,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8338,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8339,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(8342,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8344,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8345,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8348,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8350,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8351,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" is root of "])),(l()(),e.sb(8354,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8356,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8357,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[", where "])),(l()(),e.sb(8360,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8362,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8363,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8366,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8368,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8369,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" are honest nodes. Since "])),(l()(),e.sb(8372,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8374,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8375,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is a root, it reached events created by more than 2/3 of member nodes. Similary, "])),(l()(),e.sb(8378,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8380,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8381,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" is a root, it reached events created by more than 2/3 of member nodes. Thus, there must be an overlap of more than "])),(l()(),e.sb(8384,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 members of those events in both sets. Since we assume less than "])),(l()(),e.sb(8387,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 members are not honest, so there must be at least one honest member in the overlap set. Let "])),(l()(),e.sb(8390,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8392,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8393,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" be such an honest member. Because "])),(l()(),e.sb(8396,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8398,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8399,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" is honest, "])),(l()(),e.sb(8402,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8404,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8405,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" does not allow the fork. This contradicts the assumption. Thus, the lemma is proved."])),(l()(),e.sb(8408,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each node "])),(l()(),e.sb(8410,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(8412,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8413,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" has an OPERA chain "])),(l()(),e.sb(8416,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8418,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8419,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". We define a consistent chain from a sequence of OPERA chain "])),(l()(),e.sb(8422,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8424,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8425,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(8428,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A global consistent chain "])),(l()(),e.sb(8430,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8432,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8433,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" is a chain if "])),(l()(),e.sb(8436,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8438,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8439,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(8442,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8444,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8445,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" for all "])),(l()(),e.sb(8448,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8450,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8451,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(8454,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We denote "])),(l()(),e.sb(8456,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004\u2291\u2004"])),(l()(),e.sb(8459,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2032 to stand for "])),(l()(),e.sb(8462,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,[" is a subgraph of "])),(l()(),e.sb(8465,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2032."])),(l()(),e.sb(8468,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2200"])),(l()(),e.sb(8470,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8472,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8473,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(8476,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8478,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8479,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["\u2004\u2291\u2004"])),(l()(),e.sb(8482,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8484,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8485,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(8488,0,null,null,34,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2200"])),(l()(),e.sb(8490,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(8493,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8495,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8496,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" \u2200"])),(l()(),e.sb(8499,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8501,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8502,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(8505,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8507,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8508,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(8511,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]\u2291"])),(l()(),e.sb(8514,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8516,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8517,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(8520,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["])."])),(l()(),e.sb(8523,0,null,null,49,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(\u2200"])),(l()(),e.sb(8525,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8527,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8528,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(8531,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8533,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8534,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[") (\u2200"])),(l()(),e.sb(8537,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8539,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8540,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(8543,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8545,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8546,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") (("])),(l()(),e.sb(8549,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8551,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8552,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(8555,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8557,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8558,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[")\u21d2"])),(l()(),e.sb(8561,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(8563,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8564,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(8567,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8569,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8570,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(8573,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Now we state the following important propositions."])),(l()(),e.sb(8575,0,null,null,36,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Two chains "])),(l()(),e.sb(8577,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8579,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8582,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8584,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" are root consistent, if for every "])),(l()(),e.sb(8587,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" contained in both chains, and "])),(l()(),e.sb(8590,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(8593,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th frame in "])),(l()(),e.sb(8596,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8598,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(8601,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(8604,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th frame in "])),(l()(),e.sb(8607,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8609,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(8612,0,null,null,21,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If "])),(l()(),e.sb(8614,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8616,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(8619,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8621,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(8624,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8626,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8629,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8631,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" are root consistent."])),(l()(),e.sb(8634,0,null,null,194,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["By consistent chains, if "])),(l()(),e.sb(8636,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8638,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(8641,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8643,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8646,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" belongs to both chains, then "])),(l()(),e.sb(8649,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8651,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(8654,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["] = "])),(l()(),e.sb(8657,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8659,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(8662,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]. We can prove the proposition by induction. For "])),(l()(),e.sb(8665,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" = 0, the first root set is the same in both "])),(l()(),e.sb(8668,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8670,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8673,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8675,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". Hence, it holds for "])),(l()(),e.sb(8678,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" = 0. Suppose that the proposition holds for every "])),(l()(),e.sb(8681,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" from 0 to "])),(l()(),e.sb(8684,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[". We prove that it also holds for "])),(l()(),e.sb(8687,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["= "])),(l()(),e.sb(8690,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" + 1. Suppose that "])),(l()(),e.sb(8693,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of frame "])),(l()(),e.sb(8696,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(8698,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(8699,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(8703,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8705,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". Then there exists a set "])),(l()(),e.sb(8708,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" reaching 2/3 of members in "])),(l()(),e.sb(8711,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8713,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" of frame "])),(l()(),e.sb(8716,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(8718,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8719,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" such that \u2200"])),(l()(),e.sb(8722,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(8725,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(8728,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(8731,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["). As "])),(l()(),e.sb(8734,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8736,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(8739,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8741,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(8744,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(8747,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8749,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", then \u2200"])),(l()(),e.sb(8752,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(8755,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(8758,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(8761,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8763,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["). Since the proposition holds for "])),(l()(),e.sb(8766,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["="])),(l()(),e.sb(8769,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[", As "])),(l()(),e.sb(8772,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,[" is a root of frame "])),(l()(),e.sb(8775,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(8777,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8778,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(8781,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8783,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(8786,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,[" is a root of frame "])),(l()(),e.sb(8789,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(8791,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8792,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(8795,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8797,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". Hence, the set "])),(l()(),e.sb(8800,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,[" of 2/3 members "])),(l()(),e.sb(8803,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,[" happens before "])),(l()(),e.sb(8806,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(8809,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8811,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". So "])),(l()(),e.sb(8814,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" belongs to "])),(l()(),e.sb(8817,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(8819,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(8820,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(8824,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8826,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". The proposition is proved."])),(l()(),e.sb(8829,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["From the above proposition, one can deduce the following:"])),(l()(),e.sb(8831,0,null,null,12,"p",[],null,null,null,null,null)),(l()(),e.sb(8832,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8834,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8835,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" is root consistent with "])),(l()(),e.sb(8838,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8840,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8841,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" for all nodes."])),(l()(),e.sb(8844,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Thus, all nodes have the same consistent root sets, which are the root sets in "])),(l()(),e.sb(8846,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8848,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(8849,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[". Frame numbers are consistent for all nodes."])),(l()(),e.sb(8852,0,null,null,27,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For any top event "])),(l()(),e.sb(8854,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in both OPERA chains "])),(l()(),e.sb(8857,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8859,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8862,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8864,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(8867,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8869,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(8872,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8874,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", then the flag tables of "])),(l()(),e.sb(8877,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" are consistent iff they are the same in both chains."])),(l()(),e.sb(8880,0,null,null,74,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["From the above lemmas, the root sets of "])),(l()(),e.sb(8882,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8884,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8887,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8889,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" are consistent. If "])),(l()(),e.sb(8892,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" contained in "])),(l()(),e.sb(8895,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8897,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(8900,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(8903,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th frame in "])),(l()(),e.sb(8906,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8908,0,null,null,1,"sup",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(8911,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" is a root of "])),(l()(),e.sb(8914,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th frame in "])),(l()(),e.sb(8917,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8919,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8920,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". Since "])),(l()(),e.sb(8923,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8925,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2004\u223c\u2004"])),(l()(),e.sb(8928,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8930,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(8933,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8935,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(8938,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]="])),(l()(),e.sb(8941,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(8943,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["["])),(l()(),e.sb(8946,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["]. The reference event blocks of "])),(l()(),e.sb(8949,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" are the same in both chains. Thus the flag tables of "])),(l()(),e.sb(8952,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" of both chains are the same."])),(l()(),e.sb(8955,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Thus, all nodes have consistent flag tables."])),(l()(),e.sb(8957,0,null,null,46,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A root "])),(l()(),e.sb(8959,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(8961,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8962,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(8965,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(8967,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(8968,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20053"])),(l()(),e.Ib(-1,null,[" can nominate a root "])),(l()(),e.sb(8972,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(8974,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8975,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" as Clotho if more than 2n/3 roots in the frame "])),(l()(),e.sb(8978,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(8980,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(8981,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" Happened-Before "])),(l()(),e.sb(8985,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(8987,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8988,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(8991,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(8993,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(8994,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" Happened-Before the roots in the frame "])),(l()(),e.sb(8997,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(8999,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9e3,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(9004,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[lem:root] For any root set "])),(l()(),e.sb(9006,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[", all nodes nominate same root into Clotho."])),(l()(),e.sb(9009,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Based on Theorem [thm:same], each node nominates a root into Clotho via the flag table. If all nodes have an OPERA chain with same shape, the values in flag table should be equal to each other in OPERA chain. Thus, all nodes nominate the same root into Clotho since the OPERA chain of all nodes has same shape."])),(l()(),e.sb(9011,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[lem:resel] In the Reselection algorithm, for any Clotho, a root in OPERA chain selects the same consensus time candidate."])),(l()(),e.sb(9013,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Based on Theorem [thm:same], if all nodes have an OPERA chain with the same partial shape, a root in OPERA chain selects the same consensus time candidate by the Reselection algorithm."])),(l()(),e.sb(9015,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[lem:fork] If the pair of event blocks (x,y) is fork and a root has Happened-before the fork, this fork is detected in the Clotho selection process."])),(l()(),e.sb(9017,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We show a proof by contradiction. Assume that no node can detect the fork in the Clotho selection process."])),(l()(),e.sb(9019,0,null,null,82,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Assume that there is a root "])),(l()(),e.sb(9021,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9023,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9024,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" that becomes Clotho in "])),(l()(),e.sb(9027,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9029,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9030,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", which was selected as Clotho by n/3 of the roots in "])),(l()(),e.sb(9033,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9035,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9036,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[". More than 2n/3 roots in "])),(l()(),e.sb(9040,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9042,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9043,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" should have happened-before by a root in "])),(l()(),e.sb(9047,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9049,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9050,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[". If a pair ("])),(l()(),e.sb(9054,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9056,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9057,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(9060,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9062,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9063,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") is fork, There are two cases: (1) assume that "])),(l()(),e.sb(9066,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9068,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9069,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is one of "])),(l()(),e.sb(9072,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9074,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9075,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(9078,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9080,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9081,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[", (2) assume that "])),(l()(),e.sb(9084,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9086,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9087,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" can reach both "])),(l()(),e.sb(9090,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9092,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9093,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(9096,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9098,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9099,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(9102,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Our proof for both two cases is as follows."])),(l()(),e.sb(9104,0,null,null,26,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let "])),(l()(),e.sb(9106,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" denote that the number of roots in "])),(l()(),e.sb(9109,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9111,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9112,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" that can reach "])),(l()(),e.sb(9116,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9118,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9119,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(9122,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9124,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9125,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" (\u2234 n/3 < "])),(l()(),e.sb(9128,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(9131,0,null,null,42,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In order to select root in "])),(l()(),e.sb(9133,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9135,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9136,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[", the root in "])),(l()(),e.sb(9140,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9142,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9143,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" should reach more than 2n/3 of roots in "])),(l()(),e.sb(9147,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9149,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9150,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" by Definition [def:root]. At the moment, assume that "])),(l()(),e.sb(9154,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,[" is the number of roots in "])),(l()(),e.sb(9157,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9159,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9160,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" that can be reached by the root in "])),(l()(),e.sb(9164,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9166,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9167,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" (\u2234 2n/3 < "])),(l()(),e.sb(9171,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(9174,0,null,null,78,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["At this time, n < k + l (\u2235 n/3 + 2n/3 < "])),(l()(),e.sb(9176,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" + "])),(l()(),e.sb(9179,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,["), there are (n - "])),(l()(),e.sb(9182,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" + "])),(l()(),e.sb(9185,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,[") roots in frame "])),(l()(),e.sb(9188,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9190,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9191,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" that should reach "])),(l()(),e.sb(9195,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9197,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9198,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(9201,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9203,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9204,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and all roots in "])),(l()(),e.sb(9207,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9209,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9210,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" should reach at least n \u2013 "])),(l()(),e.sb(9214,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" + "])),(l()(),e.sb(9217,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,[" of roots in "])),(l()(),e.sb(9220,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9222,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9223,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[". It means that all roots in "])),(l()(),e.sb(9227,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9229,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9230,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" know the existence of "])),(l()(),e.sb(9234,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9236,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9237,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". Therefore, the node that generated all the roots of "])),(l()(),e.sb(9240,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9242,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9243,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" detect the fork in the Clotho selection of "])),(l()(),e.sb(9247,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9249,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9250,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", which contradicts the assumption."])),(l()(),e.sb(9253,0,null,null,58,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["It can be covered two cases. If "])),(l()(),e.sb(9255,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9257,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9258,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is part of the fork, we can detect in "])),(l()(),e.sb(9261,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9263,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9264,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[". If there is fork ("])),(l()(),e.sb(9268,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9270,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9271,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(9274,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9276,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9277,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") that can be reached by "])),(l()(),e.sb(9280,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9282,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9283,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", it also can be detected in "])),(l()(),e.sb(9286,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9288,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9289,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" since we can detect the fork in the Clotho selection of "])),(l()(),e.sb(9293,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9295,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9296,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and it indicates that all event blocks that can be reached by "])),(l()(),e.sb(9299,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9301,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9302,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" are detected by the roots in "])),(l()(),e.sb(9305,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9307,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9308,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(9312,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For a root "])),(l()(),e.sb(9314,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" happened-before a fork in OPERA chain, "])),(l()(),e.sb(9317,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" must see the fork before becoming Clotho."])),(l()(),e.sb(9320,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Suppose that a node creates two event blocks ("])),(l()(),e.sb(9322,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9324,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9325,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9328,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9330,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9331,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["), which forms a fork. To create two Clothos that can reach both events, the event blocks should reach by more than 2n/3 nodes. Therefore, the OPERA chain can structurally detect the fork before roots become Clotho."])),(l()(),e.sb(9334,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[thm:same] All nodes grows up into same consistent OPERA chain "])),(l()(),e.sb(9336,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(9338,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9339,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[", which contains no fork."])),(l()(),e.sb(9342,0,null,null,56,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Suppose that there are two event blocks "])),(l()(),e.sb(9344,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9346,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9347,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(9350,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9352,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9353,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" contained in both "])),(l()(),e.sb(9356,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(9358,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(9361,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(9363,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", and their path between "])),(l()(),e.sb(9366,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9368,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9369,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(9372,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9374,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9375,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(9378,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(9380,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is not equal to that in "])),(l()(),e.sb(9383,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(9385,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". We can consider that the path difference between the nodes is a kind of fork attack. Based on Lemma [lem:fork], if an attacker forks an event block, each chain of "])),(l()(),e.sb(9388,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(9390,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9391,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(9394,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(9396,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" can detect and remove the fork before the Clotho is generated. Thus, any two nodes have consistent OPERA chain."])),(l()(),e.sb(9399,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If the consensus time of Clotho is validated, the Clotho become an Atropos."])),(l()(),e.sb(9401,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[thm:ct] Lachesis consensus algorithm guarantees to reach agreement for the consensus time."])),(l()(),e.sb(9403,0,null,null,20,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For any root set "])),(l()(),e.sb(9405,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(9408,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9410,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9411,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", time consensus algorithm checks whether more than 2n/3 roots in the frame "])),(l()(),e.sb(9414,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9416,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9417,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[" selects the same value. However, each node selects one of the values collected from the root set in the previous frame by the time consensus algorithm and Reselection process. Based on the Reselection process, the time consensus algorithm can reach agreement. However, there is a possibility that consensus time candidate does not reach agreement . To solve this problem, time consensus algorithm includes minimal selection frame per next "])),(l()(),e.sb(9421,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.Ib(-1,null,[" frame. In minimal value selection algorithm, each root selects minimum value among values collected from previous root set. Thus, the consensus time reaches consensus by time consensus algorithm."])),(l()(),e.sb(9424,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[thm:bft] If the number of reliable nodes is more than 2"])),(l()(),e.sb(9426,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3, event blocks created by reliable nodes must be assigned to consensus order."])),(l()(),e.sb(9429,0,null,null,38,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In OPERA chain, since reliable nodes try to create event blocks by communicating with every other nodes continuously, reliable nodes will share the event block "])),(l()(),e.sb(9431,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" with each other. If a root "])),(l()(),e.sb(9434,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(9437,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9439,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9440,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" Happened-Before event block "])),(l()(),e.sb(9443,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and more than n/3 roots in the frame "])),(l()(),e.sb(9446,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9448,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9449,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" Happened-Before the root "])),(l()(),e.sb(9453,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[", the root "])),(l()(),e.sb(9456,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" will be nominated as Clotho and Atropos. Thus, event block "])),(l()(),e.sb(9459,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and root "])),(l()(),e.sb(9462,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" will be assigned consensus time "])),(l()(),e.sb(9465,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(9468,0,null,null,39,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For an event block, assigning consensus time means that the validated event block is shared by more than 2n/3 nodes. Therefore, malicious node cannot try to attack after the event blocks are assigned consensus time. When the event block "])),(l()(),e.sb(9470,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" has consensus time "])),(l()(),e.sb(9473,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[", it cannot occur to discover new event blocks with earlier consensus time than "])),(l()(),e.sb(9476,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[". There are two conditions to be assigned consensus time earlier than "])),(l()(),e.sb(9479,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" for new event blocks. First, a root "])),(l()(),e.sb(9482,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(9485,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9487,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9488,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" should be able to share new event blocks. Second, the more than 2n/3 roots in the frame "])),(l()(),e.sb(9491,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9493,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9494,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" should be able to share "])),(l()(),e.sb(9498,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[". Even if the first condition is satisfied by malicious nodes (e.g., parasite chain), the second condition cannot be satisfied since at least 2n/3 roots in the frame "])),(l()(),e.sb(9501,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(9503,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9504,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" are already created and cannot be changed. Therefore, after an event block is validated, new event blocks should not be participate earlier consensus time to OPERA chain."])),(l()(),e.sb(9508,0,null,null,1,"h2",[["id","semantics-of-lachesis-protocol"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Semantics of Lachesis protocol"])),(l()(),e.sb(9510,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section gives the formal semantics of Lachesis consensus protocol. We use CCK model of an asynchronous system as the base of the semantics of our Lachesis protocol. Events are ordered based on Lamport\u2019s happens-before relation. In particular, we use Lamport\u2019s theory to describe global states of an asynchronous system."])),(l()(),e.sb(9512,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We present notations and concepts, which are important for Lachesis protocol. In several places, we adapt the notations and concepts of CCK paper to suit our Lachesis protocol."])),(l()(),e.sb(9514,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An asynchronous system consists of the following:"])),(l()(),e.sb(9516,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A process "])),(l()(),e.sb(9518,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.sb(9520,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9521,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" represents a machine or a node. The process identifier of "])),(l()(),e.sb(9524,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.sb(9526,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9527,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is "])),(l()(),e.sb(9530,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". A set "])),(l()(),e.sb(9533,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" = {1,...,"])),(l()(),e.sb(9536,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["} denotes the set of process identifiers."])),(l()(),e.sb(9539,0,null,null,31,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A process "])),(l()(),e.sb(9541,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" can send messages to process "])),(l()(),e.sb(9544,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" if there is a channel ("])),(l()(),e.sb(9547,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[","])),(l()(),e.sb(9550,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["). Let "])),(l()(),e.sb(9553,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" \u2286 {("])),(l()(),e.sb(9556,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[","])),(l()(),e.sb(9559,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[") s.t. "])),(l()(),e.sb(9562,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9565,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(9568,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["} denote the set of channels."])),(l()(),e.sb(9571,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A local state of a process "])),(l()(),e.sb(9573,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is denoted by "])),(l()(),e.sb(9576,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9578,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9579,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9581,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9582,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(9585,0,null,null,35,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A local state consists of a sequence of event blocks "])),(l()(),e.sb(9587,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9589,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9590,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9592,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9593,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(9596,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9598,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(9600,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9601,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9604,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9606,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(9608,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9609,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006\u2026,\u2006"])),(l()(),e.sb(9612,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9614,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9615,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9617,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9618,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(9621,0,null,null,55,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In a DAG-based protocol, each "])),(l()(),e.sb(9623,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9625,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9626,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9628,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9629,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" event block is valid only the reference blocks exist exist before it. From a local state "])),(l()(),e.sb(9632,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9634,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9635,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9637,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9638,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", one can reconstruct a unique DAG. That is, the mapping from a local state "])),(l()(),e.sb(9641,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9643,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9644,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9646,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9647,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" into a DAG is "])),(l()(),e.sb(9650,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["injective"])),(l()(),e.Ib(-1,null,[" or one-to-one. Thus, for Lachesis, we can simply denote the "])),(l()(),e.sb(9653,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th local state of a process "])),(l()(),e.sb(9656,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" by the OPERA chain "])),(l()(),e.sb(9659,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(9661,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9662,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9664,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9665,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" (often we simply use "])),(l()(),e.sb(9668,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.sb(9670,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9671,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" to denote the current local state of a process "])),(l()(),e.sb(9674,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(9677,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An action is a function from one local state to another local state."])),(l()(),e.sb(9679,0,null,null,64,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Generally speaking, an action can be either: a "])),(l()(),e.sb(9681,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9683,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(9687,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[") action where "])),(l()(),e.sb(9690,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" is a message, a "])),(l()(),e.sb(9693,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(9695,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(9698,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(9701,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(9705,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[") action, and an internal action. A message "])),(l()(),e.sb(9708,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" is a triple \u27e8"])),(l()(),e.sb(9711,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9714,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9717,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,["\u27e9 where "])),(l()(),e.sb(9720,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(9723,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" is the sender of the message, "])),(l()(),e.sb(9726,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(9729,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" is the message recipient, and "])),(l()(),e.sb(9732,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" is the body of the message. Let "])),(l()(),e.sb(9735,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.Ib(-1,null,[" denote the set of messages. In Lachesis protocol, "])),(l()(),e.sb(9738,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" consists of the content of an event block "])),(l()(),e.sb(9741,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[". Semantics-wise, in Lachesis, there are two actions that can change a process\u2019s local state: creating a new event and receiving an event from another process."])),(l()(),e.sb(9744,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event is a tuple \u27e8"])),(l()(),e.sb(9746,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9749,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9752,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["\u2032\u27e9 consisting of a state, an action, and a state."])),(l()(),e.sb(9755,0,null,null,47,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Sometimes, the event can be represented by the end state "])),(l()(),e.sb(9757,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["\u2032. The "])),(l()(),e.sb(9760,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th event in history "])),(l()(),e.sb(9763,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(9765,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9766,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" of process "])),(l()(),e.sb(9769,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is \u27e8"])),(l()(),e.sb(9772,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9774,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(9775,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.sb(9778,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9779,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9782,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9785,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9787,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9788,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9790,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9791,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u27e9, denoted by "])),(l()(),e.sb(9794,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9796,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9797,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9799,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9800,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(9803,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A local history "])),(l()(),e.sb(9805,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(9807,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9808,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" of process "])),(l()(),e.sb(9811,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is a (possibly infinite) sequence of alternating local states \u2014 beginning with a distinguished initial state. A set "])),(l()(),e.sb(9814,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.sb(9816,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9817,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" of possible local histories for each process "])),(l()(),e.sb(9820,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(9823,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(9826,0,null,null,115,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The state of a process can be obtained from its initial state and the sequence of actions or events that have occurred up to the current state. In Lachesis protocol, we use append-only sematics. The local history may be equivalently described as either of the following:\n"])),(l()(),e.sb(9828,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(9830,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9831,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(9834,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9836,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(9838,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9839,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9842,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.sb(9844,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(9846,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9847,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9850,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.sb(9852,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(9854,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9855,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9858,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.sb(9860,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.sb(9862,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9863,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2026\n"])),(l()(),e.sb(9866,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(9868,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9869,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(9872,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9874,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(9876,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9877,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9880,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9882,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(9884,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9885,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9888,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9890,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(9892,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9893,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9896,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(9898,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.sb(9900,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9901,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2026\n"])),(l()(),e.sb(9904,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(9906,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9907,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(9910,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9912,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(9914,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9915,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9918,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9920,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(9922,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9923,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9926,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9928,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(9930,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9931,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9934,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(9936,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.sb(9938,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9939,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006\u2026"])),(l()(),e.sb(9942,0,null,null,54,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In Lachesis, a local history is equivalently expressed as:\n"])),(l()(),e.sb(9944,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(9946,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9947,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(9950,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(9952,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(9954,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9955,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9958,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(9960,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.sb(9962,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9963,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9966,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(9968,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(9970,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9971,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(9974,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(9976,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.sb(9978,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9979,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006\u2026 where "])),(l()(),e.sb(9982,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(9984,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(9985,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(9987,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(9988,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is the "])),(l()(),e.sb(9991,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th local OPERA chain (local state) of the process "])),(l()(),e.sb(9994,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(9997,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each asynchronous run is a vector of local histories. Denoted by "])),(l()(),e.sb(9999,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2004=\u2004\u27e8"])),(l()(),e.sb(10002,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(10004,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(10007,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(10009,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(10012,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(10014,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[",\u2006..."])),(l()(),e.sb(10017,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(10019,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10020,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,["\u27e9."])),(l()(),e.sb(10023,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let "])),(l()(),e.sb(10025,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[" denote the set of asynchronous runs."])),(l()(),e.sb(10028,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We can now use Lamport\u2019s theory to talk about global states of an asynchronous system. A global state of run "])),(l()(),e.sb(10030,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[" is an "])),(l()(),e.sb(10033,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["-vector of prefixes of local histories of "])),(l()(),e.sb(10036,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[", one prefix per process. The happens-before relation can be used to define a consistent global state, often termed a consistent cut, as follows."])),(l()(),e.sb(10039,0,null,null,46,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A consistent cut of a run "])),(l()(),e.sb(10041,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[" is any global state such that if "])),(l()(),e.sb(10044,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(10046,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10047,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.sb(10049,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10050,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(10053,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(10055,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10056,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(10058,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10059,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(10062,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(10064,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10065,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(10067,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10068,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" is in the global state, then "])),(l()(),e.sb(10071,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(10073,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10074,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.sb(10076,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10077,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is also in the global state. Denoted by "])),(l()(),e.sb(10080,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10083,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(10086,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["By Theorem [thm:conchains], all nodes have consistent local OPERA chains. The concept of consistent cut formalizes such a global state of a run. A consistent cut consists of all consistent OPERA chains. A received event block exists in the global state implies the existence of the original event block. Note that a consistent cut is simply a vector of local states; we will use the notation "])),(l()(),e.sb(10088,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10091,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")["])),(l()(),e.sb(10094,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["] to indicate the local state of "])),(l()(),e.sb(10097,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in cut "])),(l()(),e.sb(10100,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" of run "])),(l()(),e.sb(10103,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(10106,0,null,null,58,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The formal semantics of an asynchronous system is given via the satisfaction relation \u22a2. Intuitively "])),(l()(),e.sb(10108,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10111,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(10114,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[", \u201c"])),(l()(),e.sb(10117,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10120,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") satisfies "])),(l()(),e.sb(10123,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[",\u201d if fact "])),(l()(),e.sb(10126,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true in cut "])),(l()(),e.sb(10129,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" of run "])),(l()(),e.sb(10132,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[". We assume that we are given a function "])),(l()(),e.sb(10135,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c0"])),(l()(),e.Ib(-1,null,[" that assigns a truth value to each primitive proposition "])),(l()(),e.sb(10138,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[". The truth of a primitive proposition "])),(l()(),e.sb(10141,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(10144,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10147,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") is determined by "])),(l()(),e.sb(10150,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c0"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(10153,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[". This defines "])),(l()(),e.sb(10156,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10159,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(10162,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(10165,0,null,null,52,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Two cuts "])),(l()(),e.sb(10167,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10170,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") and "])),(l()(),e.sb(10173,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*"])),(l()(),e.Ib(-1,null,["\u2032"])),(l()(),e.sb(10176,0,null,null,7,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10178,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032) are equivalent with respect to "])),(l()(),e.sb(10181,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" if:\n"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(10185,0,null,null,7,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10187,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u223c"])),(l()(),e.sb(10190,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10191,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(10194,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["*\u2032"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10197,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032)\u2004\u21d4\u2004"])),(l()(),e.sb(10200,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10203,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")["])),(l()(),e.sb(10206,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["]="])),(l()(),e.sb(10209,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*\u2032"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10212,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032)["])),(l()(),e.sb(10215,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["]"])),(l()(),e.sb(10218,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We introduce two families of modal operators, denoted by "])),(l()(),e.sb(10220,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["K"])),(l()(),e.sb(10222,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10223,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(10226,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10228,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10229,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", respectively. Each family indexed by process identifiers. Given a fact "])),(l()(),e.sb(10232,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[", the modal operators are defined as follows:"])),(l()(),e.sb(10235,0,null,null,63,"p",[],null,null,null,null,null)),(l()(),e.sb(10236,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["K"])),(l()(),e.sb(10238,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10239,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10242,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") represents the statement \u201c"])),(l()(),e.sb(10245,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true in all possible consistent global states that include "])),(l()(),e.sb(10248,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s local state\u201d.\n"])),(l()(),e.sb(10251,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10254,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(10257,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["K"])),(l()(),e.sb(10259,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10260,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10263,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\u21d4\u2200"])),(l()(),e.sb(10266,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*"])),(l()(),e.Ib(-1,null,["\u2032"])),(l()(),e.sb(10269,0,null,null,4,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10271,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032)("])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(10275,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["*\u2032"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10278,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032)\u223c"])),(l()(),e.sb(10281,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10282,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(10284,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10287,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") \u21d2 "])),(l()(),e.sb(10290,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*\u2032"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10293,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2032)\u2004\u22a2\u2004"])),(l()(),e.sb(10296,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")"])),(l()(),e.sb(10299,0,null,null,63,"p",[],null,null,null,null,null)),(l()(),e.sb(10300,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10302,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10303,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10306,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") represents the statement \u201cthere is some consistent global state in this run that includes "])),(l()(),e.sb(10309,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s local state, in which "])),(l()(),e.sb(10312,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true.\u201d\n"])),(l()(),e.sb(10315,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10318,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(10321,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10323,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10324,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10327,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\u21d4\u2203"])),(l()(),e.sb(10330,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*"])),(l()(),e.Ib(-1,null,["\u2032"])),(l()(),e.sb(10333,0,null,null,4,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10335,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")("])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(10339,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["*\u2032"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10342,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u223c"])),(l()(),e.sb(10345,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10346,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(10348,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10351,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[") \u2227 "])),(l()(),e.sb(10354,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c*\u2032"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10357,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(10360,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")"])),(l()(),e.sb(10363,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The next modal operator is written "])),(l()(),e.sb(10365,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10367,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10368,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" and stands for \u201cmajority concurrently knows.\u201d This is adapted from the \u201ceveryone concurrently knows\u201d in CCK paper . The definition of "])),(l()(),e.sb(10371,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10373,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10374,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10377,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") is as follows."])),(l()(),e.sb(10380,0,null,null,48,"p",[],null,null,null,null,null)),(l()(),e.sb(10381,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10383,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10384,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10387,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")="])),(l()(),e.sb(10390,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(10391,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(10393,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,["\u22c0"])),(l()(),e.sb(10397,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(10398,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(10401,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(10403,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["K"])),(l()(),e.sb(10405,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10406,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(10408,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10410,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10411,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10414,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["), where "])),(l()(),e.sb(10417,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,["\u2004\u2286\u2004"])),(l()(),e.sb(10420,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" and |"])),(l()(),e.sb(10423,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,["|>2"])),(l()(),e.sb(10426,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3."])),(l()(),e.sb(10429,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the presence of one-third of faulty nodes, the original operator \u201ceveryone concurrently knows\u201d is sometimes not feasible. Our modal operator "])),(l()(),e.sb(10431,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10433,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10434,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10437,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") fits precisely the semantics for BFT systems, in which unreliable processes may exist."])),(l()(),e.sb(10440,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The last modal operator is concurrent common knowledge (CCK), denoted by "])),(l()(),e.sb(10442,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10444,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10445,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(10448,0,null,null,21,"p",[],null,null,null,null,null)),(l()(),e.sb(10449,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10451,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10452,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10455,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") is defined as a fixed point of "])),(l()(),e.sb(10458,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10460,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10461,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10464,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2005\u2227\u2005"])),(l()(),e.sb(10467,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,[")"])),(l()(),e.sb(10470,0,null,null,67,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["CCK defines a state of process knowledge that implies that all processes are in that same state of knowledge, with respect to "])),(l()(),e.sb(10472,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[", along some cut of the run. In other words, we want a state of knowledge "])),(l()(),e.sb(10475,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,[" satisfying: "])),(l()(),e.sb(10478,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(10481,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10483,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10484,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10487,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2005\u2227\u2005"])),(l()(),e.sb(10490,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,["). "])),(l()(),e.sb(10493,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10495,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10496,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" will be defined semantically as the weakest such fixed point, namely as the greatest fixed-point of "])),(l()(),e.sb(10499,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10501,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10502,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10505,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2005\u2227\u2005"])),(l()(),e.sb(10508,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,["). It therefore satisfies:\n"])),(l()(),e.sb(10511,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10513,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10514,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10517,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\u21d4"])),(l()(),e.sb(10520,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10522,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10523,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10526,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2005\u2227\u2005"])),(l()(),e.sb(10529,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10531,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10532,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10535,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["))"])),(l()(),e.sb(10538,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Thus, "])),(l()(),e.sb(10540,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10542,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10543,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10546,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") states that there is some cut in the same asynchronous run "])),(l()(),e.sb(10549,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[" including "])),(l()(),e.sb(10552,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s local state, such that "])),(l()(),e.sb(10555,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true in that cut."])),(l()(),e.sb(10558,0,null,null,55,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Note that "])),(l()(),e.sb(10560,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" implies "])),(l()(),e.sb(10563,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10565,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10566,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10569,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["). But it is not the case, in general, that "])),(l()(),e.sb(10572,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10574,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10575,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10578,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") implies "])),(l()(),e.sb(10581,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" or even that "])),(l()(),e.sb(10584,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10586,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10587,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10590,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") implies "])),(l()(),e.sb(10593,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[". The truth of "])),(l()(),e.sb(10596,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10598,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10599,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10602,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") is determined with respect to some cut "])),(l()(),e.sb(10605,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10608,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["). A process cannot distinguish which cut, of the perhaps many cuts that are in the run and consistent with its local state, satisfies "])),(l()(),e.sb(10611,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["; it can only know the existence of such a cut."])),(l()(),e.sb(10614,0,null,null,43,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Fact "])),(l()(),e.sb(10616,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is valid in system "])),(l()(),e.sb(10619,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[", denoted by "])),(l()(),e.sb(10622,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004"])),(l()(),e.sb(10625,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[", if "])),(l()(),e.sb(10628,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is true in all cuts of all runs of "])),(l()(),e.sb(10631,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[".\n"])),(l()(),e.sb(10634,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004"])),(l()(),e.sb(10637,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2004\u21d4\u2004(\u2200"])),(l()(),e.sb(10640,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(10643,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[")(\u2200"])),(l()(),e.sb(10646,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[")("])),(l()(),e.sb(10649,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10652,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(10655,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")"])),(l()(),e.sb(10658,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Fact "])),(l()(),e.sb(10660,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is valid, denoted \u22a2"])),(l()(),e.sb(10663,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[", if "])),(l()(),e.sb(10666,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is valid in all systems, i.e. (\u2200"])),(l()(),e.sb(10669,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[")("])),(l()(),e.sb(10672,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004"])),(l()(),e.sb(10675,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(10678,0,null,null,24,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A fact "])),(l()(),e.sb(10680,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is local to process "])),(l()(),e.sb(10683,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in system "])),(l()(),e.sb(10686,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(10689,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004("])),(l()(),e.sb(10692,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["\u2004\u21d2\u2004"])),(l()(),e.sb(10695,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["K"])),(l()(),e.sb(10697,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10698,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(10700,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")"])),(l()(),e.sb(10703,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If "])),(l()(),e.sb(10705,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is local to process "])),(l()(),e.sb(10708,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in system "])),(l()(),e.sb(10711,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(10714,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004("])),(l()(),e.sb(10717,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10719,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10720,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10723,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\u21d2"])),(l()(),e.sb(10726,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(10729,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If fact "])),(l()(),e.sb(10731,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is local to 2/3 of the processes in a system "])),(l()(),e.sb(10734,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(10737,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004("])),(l()(),e.sb(10740,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.sb(10742,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10743,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10746,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\u21d2"])),(l()(),e.sb(10749,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") and furthermore "])),(l()(),e.sb(10752,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03a3"])),(l()(),e.Ib(-1,null,["\u2004\u22a2\u2004("])),(l()(),e.sb(10755,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10757,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10758,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10761,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")\u21d2"])),(l()(),e.sb(10764,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(10767,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A fact "])),(l()(),e.sb(10769,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is attained in run "])),(l()(),e.sb(10772,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[" if \u2203"])),(l()(),e.sb(10775,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10778,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")("])),(l()(),e.sb(10781,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10784,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(10787,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(10790,0,null,null,40,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Often, we refer to \u201cknowing\u201d a fact "])),(l()(),e.sb(10792,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" in a state rather than in a consistent cut, since knowledge is dependent only on the local state of a process. Formally, "])),(l()(),e.sb(10795,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" knows "])),(l()(),e.sb(10798,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" in state "])),(l()(),e.sb(10801,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" is shorthand for\n\u2200"])),(l()(),e.sb(10804,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10807,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")("])),(l()(),e.sb(10810,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10813,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")["])),(l()(),e.sb(10816,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["]="])),(l()(),e.sb(10819,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["\u2004\u21d2\u2004"])),(l()(),e.sb(10822,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10825,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[")\u22a2"])),(l()(),e.sb(10828,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[")"])),(l()(),e.sb(10831,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For example, if a process in Lachesis protocol knows a fork exists (i.e., "])),(l()(),e.sb(10833,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is the exsistenc of fork) in its local state "])),(l()(),e.sb(10836,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" (i.e., "])),(l()(),e.sb(10839,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(10841,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10842,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(10844,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10845,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["), then a consistent cut contains the state "])),(l()(),e.sb(10848,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" will know the existence of that fork."])),(l()(),e.sb(10851,0,null,null,58,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Process "])),(l()(),e.sb(10853,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" learns "])),(l()(),e.sb(10856,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" in state "])),(l()(),e.sb(10859,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(10861,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10862,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(10864,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10865,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" of run "])),(l()(),e.sb(10868,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(10871,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" knows "])),(l()(),e.sb(10874,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(10877,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(10879,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10880,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(10882,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10883,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and, for all previous states "])),(l()(),e.sb(10886,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(10888,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10889,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.sb(10891,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10892,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in run "])),(l()(),e.sb(10895,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(10898,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2004<\u2004"])),(l()(),e.sb(10901,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(10904,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" does not know "])),(l()(),e.sb(10907,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(10910,0,null,null,27,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The following theorem says that if "])),(l()(),e.sb(10912,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10914,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10915,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10918,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" is attained in a run then all processes "])),(l()(),e.sb(10921,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" learn "])),(l()(),e.sb(10924,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10926,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10927,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(10929,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10931,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10932,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10935,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") along a single consistent cut."])),(l()(),e.sb(10938,0,null,null,30,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If "])),(l()(),e.sb(10940,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10942,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10943,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10946,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") is attained in a run "])),(l()(),e.sb(10949,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,[", then the set of states in which all processes learn "])),(l()(),e.sb(10952,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(10954,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(10955,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(10957,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(10959,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(10960,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(10963,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[") forms a consistent cut in "])),(l()(),e.sb(10966,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c3"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(10969,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We have presented a formal semantics of Lachesis protocol based on the concepts and notations of concurrent common knowledge . For a proof of the above theorems and lemmas in this Section, we can use similar proofs as described in the original CCK paper."])),(l()(),e.sb(10971,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["With the formal semantics of Lachesis, the theorems and lemmas described in Section [se:proof] can be expressed in term of CCK. For example, one can study a fact "])),(l()(),e.sb(10973,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03d5"])),(l()(),e.Ib(-1,null,[" (or some primitive proposition "])),(l()(),e.sb(10976,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[") in the following forms: \u2018is there any existence of fork?\u2019. One can make Lachesis-specific questions like \u2019is event block "])),(l()(),e.sb(10979,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" a root?\u2019, \u2019is "])),(l()(),e.sb(10982,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" a clotho?\u2019, or \u2019is "])),(l()(),e.sb(10985,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" a atropos?\u2019. This is a remarkable result, since we are the first that define such a formal semantics for DAG-based protocol."])),(l()(),e.sb(10988,0,null,null,1,"h1",[["id","reference"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Reference"]))],null,null)}function B(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-framework",[],null,null,null,P,E)),e.rb(1,49152,null,0,x,[],null,null)],null,null)}var D=e.ob("app-framework",x,B,{},{},[]),R=function(){return function(){}}(),F=e.qb({encapsulation:2,styles:[],data:{}});function L(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"h1",[["id","introduction"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Introduction"])),(l()(),e.sb(2,0,null,null,1,"h2",[["id","what-is-lachesis-"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["What is Lachesis?"])),(l()(),e.sb(4,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis is an open-source software component intended for developers who want to build peer-to-peer (p2p) applications, mobile or other, without having to implement their own p2p networking layer from scratch. Under the hood, it enables many computers to behave as one; a technique known as state machine replication. "])),(l()(),e.sb(6,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis is designed to easily plug into applications written in any programming language. Developers can focus on building the application logic and simply integrate with Lachesis to handle the replication aspect. Basically, Lachesis will connect to other Lachesis nodes and guarantee that everyone processes the same commands in the same order. To do this, it uses p2p networking and a Byzantine Fault Tolerant (BFT) consensus algorithm."])),(l()(),e.sb(8,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[".. image:: assets/lachesis_network.png :height: 453px :width: 640px :align: left"])),(l()(),e.sb(10,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis is:"])),(l()(),e.sb(12,0,null,null,16,"ul",[],null,null,null,null,null)),(l()(),e.sb(13,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(14,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Asynchronous"])),(l()(),e.Ib(-1,null,[": Participants have the freedom to process commands at different times."])),(l()(),e.sb(17,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(18,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Leaderless"])),(l()(),e.Ib(-1,null,[": No participant plays a 'special' role."])),(l()(),e.sb(21,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(22,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Byzantine Fault-Tolerant"])),(l()(),e.Ib(-1,null,[": Supports one third of faulty nodes, including malicious behavior."])),(l()(),e.sb(25,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(26,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Final"])),(l()(),e.Ib(-1,null,[": Lachesis's output can be used immediately, no need for block confirmations, etc."]))],null,null)}function G(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-home",[],null,null,null,L,F)),e.rb(1,49152,null,0,R,[],null,null)],null,null)}var S=e.ob("app-home",R,G,{},{},[]),O=function(){return function(){}}(),H=e.qb({encapsulation:2,styles:[],data:{}});function j(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This guide has been moved to: "])),(l()(),e.sb(2,0,null,null,1,"a",[["href","https://fantom-foundation.github.io/guide/getting-started"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["https://fantom-foundation.github.io/guide/getting-started"])),(l()(),e.sb(4,0,null,null,0,"hr",[],null,null,null,null,null)),(l()(),e.sb(5,0,null,null,1,"h3",[["id","lachesis-and-dependencies"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis and dependencies"])),(l()(),e.sb(7,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Clone the "])),(l()(),e.sb(9,0,null,null,1,"a",[["href","https://github.com/andrecronje/lachesis"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["repository"])),(l()(),e.Ib(-1,null,[" in the appropriate\nGOPATH subdirectory:"])),(l()(),e.sb(12,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(13,0,null,null,1,"code",[["class","lang-bash"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["$ mkdir -p $GOPATH/src/github.com/andrecronje/\n$ cd $GOPATH/src/github.com/andrecronje\n[...]/andrecronje$ git clone https://github.com/andrecronje/lachesis.git\n"])),(l()(),e.sb(15,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis uses "])),(l()(),e.sb(17,0,null,null,1,"a",[["href","http://github.com/Masterminds/glide"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Glide"])),(l()(),e.Ib(-1,null,[" to manage dependencies."])),(l()(),e.sb(20,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(21,0,null,null,1,"code",[["class","lang-bash"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[...]/lachesis$ curl https://glide.sh/get | sh\n[...]/lachesis$ glide install\n"])),(l()(),e.sb(23,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This will download all dependencies and put them in the "])),(l()(),e.sb(25,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["vendor"])),(l()(),e.Ib(-1,null,[" folder."]))],null,null)}function N(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-installing-lachesis",[],null,null,null,j,H)),e.rb(1,49152,null,0,O,[],null,null)],null,null)}var _=e.ob("app-installing-lachesis",O,N,{},{},[]),W=function(){return function(){}}(),q=e.qb({encapsulation:2,styles:[],data:{}});function z(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"h1",[["id","introduction"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Introduction"])),(l()(),e.sb(2,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Beyond the success of cryptocurrencies, blockchain has recently emerged as a technology platform that offers secure decentralized consistent transaction ledgers and has powered innovations across domains including financial systems, supply chains and health care. Despite the high demand in distributed ledger technology , commercialization opportunities have been obstructed by long processing time for consensus, and high power consumption. These issues have been addressed in consensus algorithms such as ."])),(l()(),e.sb(4,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Distributed database systems often address "])),(l()(),e.sb(6,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Byzantine"])),(l()(),e.Ib(-1,null,[" fault tolerance in which up to just under one-third of the participant nodes may be compromised. Consensus algorithms ensures the integrity of transactions between participants over a distributed network and is equivalent to the proof of "])),(l()(),e.sb(9,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Byzantine"])),(l()(),e.Ib(-1,null,[" fault tolerance in distributed database systems . Byzantine consensus is not guaranteed for deterministic, completely asynchronous system with unbounded delays . But achieving consensus is feasible for nondeterministic system with probability one."])),(l()(),e.sb(12,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["There are several approaches to consensus in distributed system. The original Nakamoto consensus protocol in Bitcoin uses Proof of Work (PoW), which requires large amounts of computational work to generate the blocks by participants . Alternative schemes such as Proof Of Stake (PoS) have been proposed. PoS uses participants\u2019 stakes to generate the blocks respectively. Another approach utilizes directed acyclic graphs (DAG) to facilitate consensus."])),(l()(),e.sb(14,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Examples of DAG-based consensus algorithms include Tangle , Byteball , and Hashgraph . Tangle selects the blocks to connect in the network utilizing accumulated weight of nonce and Monte Carlo Markov Chain (MCMC). Byteball generates a main chain from the DAG and reaches consensus through index information of the chain. Hashgraph connects each block from a node to another random node. Hashgraph searches whether 2/3 members can reach each block and provides a proof of Byzantine fault tolerance via graph search."])),(l()(),e.sb(16,0,null,null,1,"h2",[["id","motivation"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Motivation"])),(l()(),e.sb(18,0,null,null,9,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Practical Byzantine Fault Tolerance (pBFT) allows all nodes to successfully reach an agreement for a block (information) when a Byzantine node exists . In pBFT, consensus is reached once a created block is shared with other participants and the share information is shared with others again . After consensus is achieved, the block is added to the participants\u2019 chains . Currently, it takes "])),(l()(),e.sb(20,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(23,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.sb(25,0,null,null,1,"sup",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[") for pBFT."])),(l()(),e.sb(28,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,['HashGraph proposes \u201cgossip about gossip" and virtual voting to reach consensus. There are several limitations with HashGraph. First, the algorithm operates on a known network, which needs full awareness of all authoritative participants. Second, gossip propagation is slow and latency increases to '])),(l()(),e.sb(30,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(33,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[") with "])),(l()(),e.sb(36,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" participants. Third, it remains unclear whether virtual voting is faster than chain weight aka longest chain/proof of work concept. These issues are gossip problems and not consensus problems."])),(l()(),e.sb(39,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We are interested in a new approach to address the aforementioned issues in pBFT approaches and HashGraph . Specifically, we propose a new consensus algorithm that addresses the following questions: (1) Can we reach local consensus in a "])),(l()(),e.sb(41,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-cluster faster for some "])),(l()(),e.sb(44,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["?, (2) Can we make gossips faster such as using a broadcast based gossip subset?, (3) Can continuous common knowledge be used for consensus decisions with high probability? (4) Can complex decisions be reduced to binary value consensus?"])),(l()(),e.sb(47,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In this paper, we propose a new approach that can quickly search for Byzantine nodes within the block DAG. In particular, we introduce a new class of consensus protocols, namely Lachesis protocol denoted by \u2112. The core idea of Lachesis is to use a new DAG structure, the OPERA chain, which allows faster path search for consensus. We then propose an example of the Lachesis protocol class, which is called the Lachesis protocol "])),(l()(),e.sb(49,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(51,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(54,0,null,null,1,"h2",[["id","generic-framework-of-protocols"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Generic framework of \u2112 Protocols"])),(l()(),e.sb(56,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We introduce a generic framework of Lachesis protocols, called \u2112. The basic idea of Lachesis protocol is a DAG-based asynchronous non-deterministic protocol that guarantees pBFT. We propose OPERA chain \u2014 a new DAG structure for faster consensus. Lachesis protocol generates each block asynchronously and the Lachesis algorithm achieves consensus by confirming how many nodes know the blocks using the OPERA chain. Figure [fig:operachain] shows an example of OPERA chain constructed through a Lachesis protocol."])),(l()(),e.sb(58,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(59,0,null,null,0,"img",[["alt","An Example of OPERA Chain"],["height","264"],["src","lachesis_output.pdf"]],null,null,null,null,null)),(l()(),e.sb(60,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The main concepts of Lachesis are given as follows:"])),(l()(),e.sb(62,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Event block\nAll nodes can create event blocks as time "])),(l()(),e.sb(64,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[". The structure of an event block includes the signature, generation time, transaction history, and hash information to references. The information of the referenced event blocks can be copied by each node. The first event block of each node is called a "])),(l()(),e.sb(67,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["leaf event"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(70,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Lachesis protocol\nLachesis protocol is the rule-set to communicate between nodes. When each node creates event blocks, it determines which nodes choose other nodes to broadcast to. Node selection can be random or via some cost function."])),(l()(),e.sb(72,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Happened-before\nHappened-before is the relationship between nodes which have event blocks. If there is a path from an event block "])),(l()(),e.sb(74,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(77,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(80,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" Happened-before "])),(l()(),e.sb(83,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[". \u201c"])),(l()(),e.sb(86,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" Happened-before "])),(l()(),e.sb(89,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,['" means that the node creating '])),(l()(),e.sb(92,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" knows event block "])),(l()(),e.sb(95,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(98,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Root\nAn event block is called a "])),(l()(),e.sb(100,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["root"])),(l()(),e.Ib(-1,null,[" if either (1) it is the first generated event block of a node, or (2) it can reach more than two-thirds of other roots. Every root can be candidate for Clotho."])),(l()(),e.sb(103,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Root set\nRoot set ("])),(l()(),e.sb(105,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(107,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(108,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[") is the set of all roots in the frame. The cardinality of the set is 2"])),(l()(),e.sb(111,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3\u2004<\u2004"])),(l()(),e.sb(114,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(116,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(117,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["\u2264 "])),(l()(),e.sb(120,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[", where "])),(l()(),e.sb(123,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of all nodes."])),(l()(),e.sb(126,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Frame\nFrame "])),(l()(),e.sb(128,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" is a natural number that separates Root sets. The frame increases by 1 in case of a root in the new set ("])),(l()(),e.sb(131,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,["\u2005+\u20051). And all event blocks between the new set and the previous Root set are included in the frame "])),(l()(),e.sb(134,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(137,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Flag table\nThe Flag table stores reachability from an event block to another root. The sum of all reachabilities, namely all values in flag table, indicates the number of reacheabilities from an event block to other roots."])),(l()(),e.sb(139,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Lamport timestamps\nFor topological ordering, Lamport timestamps algorithm uses the happened-before relation to determine a partial order of the whole event block based on logical clocks."])),(l()(),e.sb(141,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Clotho\nA Clotho is a root that satisfies that they are known by more than 2"])),(l()(),e.sb(143,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 nodes and more than 2"])),(l()(),e.sb(146,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 nodes know the information that they are known in nodes. A Clotho can be a candidate for Atropos."])),(l()(),e.sb(149,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Atropos\nAn Atropos is assigned consensus time through the Lachesis consensus algorithm and is utilized for determining the order between event blocks. Atropos blocks form a Main-chain, which allows time consensus ordering and responses to attacks."])),(l()(),e.sb(151,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Reselection\nTo solve the byzantine agreement problem, each node reselects a consensus time for a Clotho, based on the collected consensus time in the root set of the previous frame. When the consensus time reaches byzantine agreement, a Clotho is confirmed as an Atropos and is then used for time consensus ordering."])),(l()(),e.sb(153,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 OPERA chain\nThe OPERA chain is the local view of the DAG held by each node, this local view is used to identify topological ordering, select Clotho, and create time consensus through Atropos selection."])),(l()(),e.sb(155,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u2022 Main-Chain\nMain-chain is a core subset of the OPERA chain. It is comprised of Atropos event blocks. Thus, the OPERA chain uses Main-chain to find rapid ordering between event blocks. In OPERA chain, each event block is assigned a proper consensus position."])),(l()(),e.sb(157,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(158,0,null,null,0,"img",[["alt","Consensus Method through Path Search in a DAG (combines chain with consensus process of pBFT)"],["height","264"],["src","pBFTtoPath.pdf"]],null,null,null,null,null)),(l()(),e.sb(159,0,null,null,146,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["As a motivating example, Figure [fig:pBFTtoPath] illustrates how consensus is reached through the path search in the OPERA chain. In the figure, leaf set, denoted by "])),(l()(),e.sb(161,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(163,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(164,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", consists of the first event blocks created by individual participant nodes. "])),(l()(),e.sb(168,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" is the set of event blocks that do not belong neither in "])),(l()(),e.sb(171,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(173,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(174,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" nor in any root set "])),(l()(),e.sb(178,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(180,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(181,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s**i"])),(l()(),e.Ib(-1,null,[". Given a vertex "])),(l()(),e.sb(184,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(187,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,["\u2005\u222a\u2005"])),(l()(),e.sb(190,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(192,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(193,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s**i"])),(l()(),e.Ib(-1,null,[", there exists a path from "])),(l()(),e.sb(196,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,[" that can reach a leaf vertex "])),(l()(),e.sb(199,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(202,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(204,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(205,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[". Let "])),(l()(),e.sb(209,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(211,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(214,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(216,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" be root event blocks in root set "])),(l()(),e.sb(219,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(221,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(222,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(226,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(228,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(229,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", respectively. "])),(l()(),e.sb(233,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(235,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is the block where a quorum or more blocks exist on a path that reaches a leaf event block. Every path from "])),(l()(),e.sb(238,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(240,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" to a leaf vertex will contain a vertex in "])),(l()(),e.sb(243,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(245,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". Thus, if there exists a vertex "])),(l()(),e.sb(248,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(251,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.sb(253,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" such that "])),(l()(),e.sb(256,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" is created by more than a quorum of participants, then "])),(l()(),e.sb(259,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" is already included in "])),(l()(),e.sb(262,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(264,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(265,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". Likewise, "])),(l()(),e.sb(269,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(271,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" is a block that can be reached for "])),(l()(),e.sb(274,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(276,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(277,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" including "])),(l()(),e.sb(281,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(283,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" through blocks made by a quorum of participants. For all leaf event blocks that could be reached by "])),(l()(),e.sb(286,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(288,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", they are shared with more than quorum participants through the presence of "])),(l()(),e.sb(291,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(293,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". The existence of the root "])),(l()(),e.sb(296,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(298,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" shows that information of "])),(l()(),e.sb(301,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(303,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is shared with more than a quorum. This kind of a path search allows the chain to reach consensus in a similar manner as the pBFT consensus processes. It is essential to keep track of the blocks satisfying the pBFT consensus process for quicker path search; our OPERA chain and Main-chain keep track of these blocks."])),(l()(),e.sb(306,0,null,null,5,"h2",[["id","lachesis-protocol-l-sub-0-sub-"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis protocol "])),(l()(),e.sb(308,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(310,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(312,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We now introduce a new specific Lachesis consensus protocol, called "])),(l()(),e.sb(314,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(316,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[". The new protocol "])),(l()(),e.sb(319,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(321,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" is a DAG-based asynchronous non-deterministic protocol that guarantees pBFT. "])),(l()(),e.sb(324,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(326,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" generates each block asynchronously and uses the OPERA chain for faster consensus by checking how many nodes know the blocks."])),(l()(),e.sb(329,0,null,null,18,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In this "])),(l()(),e.sb(331,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(333,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" protocol, we propose several algorithms. In particular, we introduce an algorithm in which a node can identify lazy participants from cost-effective peers \u2014 say its "])),(l()(),e.sb(336,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peers. We must stress that a generic Lachesis protocol does not depend on any "])),(l()(),e.sb(339,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peer selection algorithm; each node can choose "])),(l()(),e.sb(342,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peers randomly. Each message created by a node is then signed by the creating node and its "])),(l()(),e.sb(345,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peers. We also introduce a flag table data structure that stores connection information of event blocks. The flag table allows us to quickly traverse the OPERA chain to find reachability between event blocks."])),(l()(),e.sb(348,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["OPERA chain can be used to optimize path search. By using certain event blocks (Root, Clotho, and Atropos), Main chain \u2014 a core subgraph of OPERA chain, can maintain reliable information between event blocks and reach consensus. Generating event blocks via Lachesis protocol, the OPERA chain and Main chain are updated frequently and can respond strongly to attack situations such as forking and parasite attack. Further, using the flag table over the OPERA chain, consensus can be quickly reached, and the ordering between specific event block can be determined."])),(l()(),e.sb(350,0,null,null,1,"h2",[["id","contributions"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Contributions"])),(l()(),e.sb(352,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In summary, this paper makes the following contributions."])),(l()(),e.sb(354,0,null,null,34,"ul",[],null,null,null,null,null)),(l()(),e.sb(355,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(356,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We propose a new family \u2112 of Lachesis protocols. We introduce the OPERA chain and Main-chain for faster consensus."])),(l()(),e.sb(358,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(359,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We define a topological ordering of nodes and event blocks in the OPERA chain. By using Lamport timestamps, the ordering is more intuitive and reliable in distributed system. We introduce a flag table at each block to improve root detection."])),(l()(),e.sb(361,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(362,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We present proof of how a DAG-based protocol can implement concurrent common knowledge for consistent cuts."])),(l()(),e.sb(364,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(365,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The Lachesis protocols allow for faster node synchronization with "])),(l()(),e.sb(367,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-neighbor broadcasts."])),(l()(),e.sb(370,0,null,null,18,"li",[],null,null,null,null,null)),(l()(),e.sb(371,0,null,null,17,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A specific Lachesis protocol "])),(l()(),e.sb(373,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(375,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" is then introduced with specific algorithms. The benefits of Lachesis protocol "])),(l()(),e.sb(378,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(380,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" include (1) root selection algorithm via flag table; (2) an algorithm to build the Main-chain; (3) an algorithm for "])),(l()(),e.sb(383,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peers selection via cost function; (4) faster consensus selection via "])),(l()(),e.sb(386,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peer broadcasts; (5) data pruning via root creation."])),(l()(),e.sb(389,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The rest of this paper is organised as follows. Section [se:Previous] gives an overview of Blockchain related work as well as existing DAG-based protocols. Section [se:protocol] describes our new Lachesis protocol. Section [se:lca] presents Lachesis consensus algorithm. Several discussions about Lachesis protocols are presented in Section [se:discuss]. Section [se:con] concludes with some future work. Section [se:appendix]. Proof of Byzantine fault tolerance is described in Section [se:proof]. In Section [se:ra], we present responses to certain attacks with the Lachesis protocol and consensus algorithm."])),(l()(),e.sb(391,0,null,null,1,"h1",[["id","related-work"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Related work"])),(l()(),e.sb(393,0,null,null,1,"h2",[["id","lamport-timestamps"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lamport timestamps"])),(l()(),e.sb(395,0,null,null,67,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lamport defines the \u201chappened before\u201d relation between any pair of events in a distributed system of machines. The happened before relation, denoted by \u2192, is defined without using physical clocks to give a partial ordering of events in the system. The relation \u201c\u2192\u201d satisfies the following three conditions: (1) If "])),(l()(),e.sb(397,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(400,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 are events in the same process, and "])),(l()(),e.sb(403,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" comes before "])),(l()(),e.sb(406,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032, then "])),(l()(),e.sb(409,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(412,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032. (2) If "])),(l()(),e.sb(415,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" is the sending of a message by one process and "])),(l()(),e.sb(418,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 is the receipt of the same message by another process, then "])),(l()(),e.sb(421,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(424,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032. (3) If "])),(l()(),e.sb(427,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(430,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 and "])),(l()(),e.sb(433,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032\u2192"])),(l()(),e.sb(436,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2033 then "])),(l()(),e.sb(439,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(442,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2033. Two distinct events "])),(l()(),e.sb(445,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(448,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 are said to be concurrent if "])),(l()(),e.sb(451,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u219b\u2004"])),(l()(),e.sb(454,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 and "])),(l()(),e.sb(457,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032\u219b"])),(l()(),e.sb(460,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(463,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The happens before relation can be viewed as a causality effect: that "])),(l()(),e.sb(465,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(468,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 implies event "])),(l()(),e.sb(471,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" may causally affect event "])),(l()(),e.sb(474,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032. Two events are concurrent if neither can causally affect the other."])),(l()(),e.sb(477,0,null,null,91,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lamport introduces logical clocks which is a way of assigning a number to an event. A clock "])),(l()(),e.sb(479,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(481,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(482,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" for each process "])),(l()(),e.sb(485,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(487,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(488,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is a function which assigns a number "])),(l()(),e.sb(491,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(493,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(494,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(497,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[") to any event "])),(l()(),e.sb(500,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(503,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(505,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(506,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[". The entire system of blocks is represented by the function "])),(l()(),e.sb(509,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" which assigns to any event "])),(l()(),e.sb(512,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" the number "])),(l()(),e.sb(515,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(518,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["), where "])),(l()(),e.sb(521,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(524,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[")="])),(l()(),e.sb(527,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(529,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(530,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(533,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[") if "])),(l()(),e.sb(536,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" is an event in process "])),(l()(),e.sb(539,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(541,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(542,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[". The Clock Condition states that for any events "])),(l()(),e.sb(545,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(548,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032: if "])),(l()(),e.sb(551,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(554,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 then "])),(l()(),e.sb(557,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(560,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[") < "])),(l()(),e.sb(563,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(566,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032)."])),(l()(),e.sb(569,0,null,null,34,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["To satisfies the Clock Condition, the clocks must satisfy two conditions. First, each process "])),(l()(),e.sb(571,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(573,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(574,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" increments "])),(l()(),e.sb(577,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(579,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(580,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" between any two successive events. Second, we require that each message "])),(l()(),e.sb(583,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" contains a timestamp "])),(l()(),e.sb(586,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["T"])),(l()(),e.sb(588,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(589,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[", which equals the time at which the message was sent. Upon receiving a message timestamped "])),(l()(),e.sb(592,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["T"])),(l()(),e.sb(594,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(595,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[", a process must advance its clock to be later than "])),(l()(),e.sb(598,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["T"])),(l()(),e.sb(600,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(601,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(604,0,null,null,79,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Given any arbitrary total ordering \u227a of the processes, the total ordering \u21d2 is defined as follows: if "])),(l()(),e.sb(606,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is an event in process "])),(l()(),e.sb(609,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(611,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(612,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(615,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" is an event in process "])),(l()(),e.sb(618,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(620,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(621,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(624,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u21d2\u2004"])),(l()(),e.sb(627,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 if and only if either (i) "])),(l()(),e.sb(630,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(632,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(633,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(636,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[")<"])),(l()(),e.sb(639,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(641,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(642,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(645,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032) or (ii) "])),(l()(),e.sb(648,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(651,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[")="])),(l()(),e.sb(654,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C**j"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(657,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032) and "])),(l()(),e.sb(660,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(662,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(663,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u227a\u2004"])),(l()(),e.sb(666,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(668,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(669,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[". The Clock Condition implies that if "])),(l()(),e.sb(672,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(675,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 then "])),(l()(),e.sb(678,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u21d2\u2004"])),(l()(),e.sb(681,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032."])),(l()(),e.sb(684,0,null,null,1,"h2",[["id","concurrent-common-knowledge"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Concurrent common knowledge"])),(l()(),e.sb(686,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the Concurrent common knowledge (CCK) paper , they define a model to reason about the concurrent common knowledge in asynchronous, distributed systems. A system is composed of a set of processes that can communicate only by sending messages along a fixed set of channels. The network is not necessarily completely connected. The system is asynchronous in the sense that there is no global clock in the system, the relative speeds of processes are independent, and the delivery time of messages is finite but unbounded."])),(l()(),e.sb(688,0,null,null,95,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A local state of a process is denoted by "])),(l()(),e.sb(690,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(692,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(693,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(695,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(696,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[". Actions are state transformers; an action is a function from local states to local states. An action can be either: a send(m) action where m is a message, a receive(m) action, and an internal action. A local history, "])),(l()(),e.sb(699,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(701,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(702,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", of process "])),(l()(),e.sb(705,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", is a (possibly infinite) sequence of alternating local states\u2014beginning with a distinguished initial state\u2014and actions. We write such a sequence as follows: $h_i = s_i^0 \\xrightarrow{ \\alpha_i^1 } s_i^1 \\xrightarrow{\\alpha_i^2} s_i^2 \\xrightarrow{\\alpha_i^3} ...$ The notation of "])),(l()(),e.sb(708,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(710,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(711,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(713,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(714,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(717,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.sb(719,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(720,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(722,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(723,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[") refers to the "])),(l()(),e.sb(726,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["-th state (action) in process "])),(l()(),e.sb(729,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s local history An event is a tuple \u27e8"])),(l()(),e.sb(732,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(735,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(738,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["\u2032\u27e9 consisting of a state, an action, and a state. The "])),(l()(),e.sb(741,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["th event in process "])),(l()(),e.sb(744,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2019s history is "])),(l()(),e.sb(747,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(749,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(750,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(752,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(753,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" denoting \u27e8"])),(l()(),e.sb(756,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(758,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(759,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(761,0,null,null,3,"sup",[],null,null,null,null,null)),(l()(),e.sb(762,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(766,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03b1"])),(l()(),e.sb(768,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(769,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(771,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(772,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(775,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(777,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(778,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(780,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(781,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u27e9."])),(l()(),e.sb(784,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An asynchronous system consists of the following sets."])),(l()(),e.sb(786,0,null,null,146,"ol",[],null,null,null,null,null)),(l()(),e.sb(787,0,null,null,11,"li",[],null,null,null,null,null)),(l()(),e.sb(788,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A set "])),(l()(),e.sb(790,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" = {1,...,"])),(l()(),e.sb(793,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,["} of process identifiers, where "])),(l()(),e.sb(796,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,[" is the total number of processes in the system."])),(l()(),e.sb(799,0,null,null,37,"li",[],null,null,null,null,null)),(l()(),e.sb(800,0,null,null,36,"p",[],null,null,null,null,null)),(l()(),e.sb(801,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" set "])),(l()(),e.sb(804,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" \u2286 {("])),(l()(),e.sb(807,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[","])),(l()(),e.sb(810,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[") s.t. "])),(l()(),e.sb(813,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(816,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(819,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["} of channels. The occurrence of ("])),(l()(),e.sb(822,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(825,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[") in "])),(l()(),e.sb(828,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" indicates that process "])),(l()(),e.sb(831,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" can send messages to process "])),(l()(),e.sb(834,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(837,0,null,null,17,"li",[],null,null,null,null,null)),(l()(),e.sb(838,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A set "])),(l()(),e.sb(840,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.sb(842,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(843,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" of possible local histories for each process "])),(l()(),e.sb(846,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(849,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(851,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["o**c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(855,0,null,null,32,"li",[],null,null,null,null,null)),(l()(),e.sb(856,0,null,null,31,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A set "])),(l()(),e.sb(858,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" of asynchronous runs. Each asynchronous run is a vector of local histories, one per process, indexed by process identifiers. Thus, we use the notation "])),(l()(),e.sb(861,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2004=\u2004\u27e8"])),(l()(),e.sb(864,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(866,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(869,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(871,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(874,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(876,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[",\u2006..."])),(l()(),e.sb(879,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(881,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(882,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,["\u27e9. Constraints on the set "])),(l()(),e.sb(885,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" are described throughout this section."])),(l()(),e.sb(888,0,null,null,44,"li",[],null,null,null,null,null)),(l()(),e.sb(889,0,null,null,43,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A set "])),(l()(),e.sb(891,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.Ib(-1,null,[" of messages. A message is a triple \u27e8"])),(l()(),e.sb(894,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(897,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(900,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,["\u27e9 where "])),(l()(),e.sb(903,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(906,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(908,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["o**c"])),(l()(),e.Ib(-1,null,[" is the sender of the message, "])),(l()(),e.sb(912,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(915,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(917,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["o**c"])),(l()(),e.Ib(-1,null,[" is the message recipient, and "])),(l()(),e.sb(921,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" is the body of the message. "])),(l()(),e.sb(924,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" can be either a special value (e.g. a tag to denote a special-purpose message), or some proposition about the run (e.g. \u201c"])),(l()(),e.sb(927,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" has reset variable "])),(l()(),e.sb(930,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["X"])),(l()(),e.Ib(-1,null,[" to zero\u201d), or both. We assume, for ease of exposition only, that messages are unique."])),(l()(),e.sb(933,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The set of channels "])),(l()(),e.sb(935,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" and our assumptions about their behavior induce two constraints on the runs in "])),(l()(),e.sb(938,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[". First, "])),(l()(),e.sb(941,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" cannot send a message to "])),(l()(),e.sb(944,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" unless ("])),(l()(),e.sb(947,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(950,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[") is a channel. Second, if the reception of a message "])),(l()(),e.sb(953,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" is in the run, then the sending of "])),(l()(),e.sb(956,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" must also be in that run; this implies that the network cannot introduce spurious messages or alter messages."])),(l()(),e.sb(959,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The CCK model of an asynchronous system does not mention time. Events are ordered based on Lamport\u2019s happens-before relation. They use Lamport\u2019s theory to describe global states of an asynchronous system. A global state of run "])),(l()(),e.sb(961,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is an "])),(l()(),e.sb(964,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["-vector of prefixes of local histories of "])),(l()(),e.sb(967,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[", one prefix per process. The happens-before relation can be used to define a consistent global state, often termed a consistent cut, as follows."])),(l()(),e.sb(970,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A consistent cut of a run is any global state such that if "])),(l()(),e.sb(972,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(974,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(975,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(977,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(978,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(981,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(983,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(984,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(986,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(987,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(990,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(992,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(993,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(995,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(996,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" is in the global state, then "])),(l()(),e.sb(999,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(1001,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1002,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1004,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1005,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" is also in the global state."])),(l()(),e.sb(1008,0,null,null,117,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A message chain of an asynchronous run is a sequence of messages "])),(l()(),e.sb(1010,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1012,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(1015,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1017,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(1020,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1022,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[", \u2026, such that, for all "])),(l()(),e.sb(1025,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(1028,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1030,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1033,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1036,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1040,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1042,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1043,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1046,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1048,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1052,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1054,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1055,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,["). Consequently, "])),(l()(),e.sb(1059,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1061,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1065,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1067,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1070,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1072,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1075,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1078,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1082,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1084,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1087,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1089,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1093,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1095,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1098,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1100,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1103,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1106,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1110,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1112,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[") \u2192 "])),(l()(),e.sb(1115,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1117,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["n**d"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1121,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1123,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[") \u2026."])),(l()(),e.sb(1126,0,null,null,1,"h2",[["id","consensus-algorithms"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Consensus algorithms"])),(l()(),e.sb(1128,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In a consensus algorithm, all participant nodes of a distributed network share transactions and agree integrity of the shared transactions . It is equivalent to the proof of Byzantine fault tolerance in distributed database systems . The Practical Byzantine Fault Tolerance (pBFT) allows all nodes to successfully reach an agreement for a block when a Byzantine node exists ."])),(l()(),e.sb(1130,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["There are numerous consensus algorithms being proposed . Proof of Work (PoW) requires large amounts of computational work to generate the blocks . Proof of Stake (PoS) use participants\u2019 stakes and delegated participants\u2019 stake to generate the blocks respectively. Alternative schemes are proposed to improve algorithms using directed acyclic graphs (DAG) . These DAG-based approaches utilize the graph structures to decide consensus; blocks and connections are considered as vertexes and edges, respectively."])),(l()(),e.sb(1132,0,null,null,1,"h2",[["id","dag-based-approaches"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["DAG-based Approaches"])),(l()(),e.sb(1134,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["IOTA published a DAG-based technology called Tangle. The Tips concept was used to address scalability issues with the limitations of the Internet of Things. Also, a nonce by using weight level was composed to achieve the transaction consensus by setting the user\u2019s difficulty. To solve the double spending problem and parasite attack, they used the Markov Chain Monte Carlo (MCMC) tip selection algorithm, which randomly selects the tips based on the size of the accumulated transaction weights. However, if a transaction conflicts with another, there is still a need to examine all past transaction history to find the conflict."])),(l()(),e.sb(1136,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Byteball uses an internal pay system called bytes. This is used to pay for adding data to the distributed database. Each storage unit is linked to each other that includes one or more hashes of earlier storage units. In particular, the consensus ordering is composed by selecting a single Main Chain, which is determined as a root consisting of the most roots. A majority of roots detects the double-spend attempts through consensus time of Main Chain. The fee is charged according to the size of the bytes, and the list of all units should be searched and updated in the process of determining the roots."])),(l()(),e.sb(1138,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["RaiBlocks has been developed to improve high fees and slow transaction processing. It is a process of obtaining consensus through the balance weighted vote on conflicting transactions. Each node participating in the network becomes the principal and manages its data history locally. However, since RaiBlocks generate transactions in a similar way to an anti-spam tool of PoW, all nodes must communicate to create transactions. In terms of scalability, there is a need for steps to verify the entire history of transactions when a new node is added."])),(l()(),e.sb(1140,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Hashgraph is an asynchronous DAG-based distributed ledger. Each node is connected by its own ancestor and randomly communicates known events through a gossip protocol. At this time, any famous node can be determined by the "])),(l()(),e.sb(1142,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["see"])),(l()(),e.Ib(-1,null,[" and relationship at each round to reach consensus quickly. They state that if more than 2/3 of the nodes reach consensus for an event, it will be assigned consensus position."])),(l()(),e.sb(1145,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Conflux is a DAG-based Nakamoto consensus protocol. Conflux is a fast, scalable and decentralized block chain system that optimistically processes concurrent blocks without discarding any as forks. The Conflux protocol achieves consensus on a total order of the blocks. The total order of the transactions is decided by all participants of the network. Conflux can tolerate up to half of the network as malicious while the BFT-based approaches can only tolerate up to one third of malicious nodes."])),(l()(),e.sb(1147,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Parsec proposes an algorithm for reaching consensus in the presence of Byzantine faults in a randomly synchronous network. Like Hashgraph , it has no leaders, no round robin, no proof-of-work and reaches eventual consensus with probability one. Unlike Hashgraph, it can provide high speed even in the presence of faults. Parsec algorithm reaches BFT consensus with very weak synchrony assumptions. Messages are delivered with random delays, such that the average delay is finite. It allows up to one-third Byzantine (arbitrary) failures."])),(l()(),e.sb(1149,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Phantom is a PoW based protocol for a permissionless ledger that generalizes Nakamoto\u2019s blockchain to a DAG of blocks. PHANTOM includes a parameter "])),(l()(),e.sb(1151,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" to adjust the tolerance level of the protocol to blocks that were created concurrently, which can be set to accommodate higher throughput. It thus avoids the security-scalability tradeoff as in Satoshi\u2019s protocol. PHANTOM uses a greedy algorithm on the DAG to distinguish between blocks by honest nodes and those by non-cooperating nodes. This distinction gives PHANTOM a robust total order of the blocks that is eventually agreed upon by all honest nodes."])),(l()(),e.sb(1154,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Similar to PHANTOM, the GHOSTDAG protocol selects a "])),(l()(),e.sb(1156,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-cluster, which induces a colouring of the blocks as Blues (blocks in the selected cluster) and Reds (blocks outside the cluster). However, instead of searching for the largest "])),(l()(),e.sb(1159,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-cluster, GHOSTDAG finds a cluster using a greedy algorithm."])),(l()(),e.sb(1162,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Spectre is a new protocol for the consensus core of cryptocurrencies. SPECTRE, which is PoW-based protocol, relies on a data structure that generalizes Nakamoto\u2019s blockchain into a DAG. It remains secure from attackers with up to 50% of the computational power even under high throughput and fast confirmation times. Sprectre protocol satisfies weaker properties than classic consensus requires. In SPECTRE, the order between any two transactions can be decided from transactions performed by honest users. This is different from the conventional paradigm in which the order must be decided by all non-corrupt nodes."])),(l()(),e.sb(1164,0,null,null,17,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Blockmania is a mechanism to achieve consensus with several advantages over the more traditional pBFT protocol and its variants. In Blockmania nodes in a quorum only emit blocks linking to other blocks, irrespective of the consensus state machine. The resulting directed acyclic graph of blocks (block DAG) is later interpreted to ensure consensus safety, finality and liveliness. The resulting system has communication complexity "])),(l()(),e.sb(1166,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1169,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.sb(1171,0,null,null,1,"sup",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[") even in the worse case, and low constant factors \u2014 as compared to "])),(l()(),e.sb(1174,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1177,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.sb(1179,0,null,null,1,"sup",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[") for pBFT."])),(l()(),e.sb(1182,0,null,null,1,"h1",[["id","generic-framework-of-lachesis-protocols"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Generic framework of Lachesis Protocols"])),(l()(),e.sb(1184,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section describes the key concepts of our new family of Lachesis protocols."])),(l()(),e.sb(1186,0,null,null,1,"h2",[["id","opera-chain"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["OPERA chain"])),(l()(),e.sb(1188,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The core idea of Lachesis protocols is to use a DAG-based structure, called OPERA chain for our consensus algorithm. In Lachesis protocol, a (participant) node is a server (machine) of the distributed system. Each node can create messages, send messages to and receive messages from other nodes. The communication between nodes is asynchronous."])),(l()(),e.sb(1190,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis Protocol consists of event blocks including user information and edges between event blocks. In Lachesis Protocol, event blocks are created by a node after the node communicates information of OPERA chain with another node. The OPERA chain is comprised of event blocks as vertices and block communication as edges."])),(l()(),e.sb(1192,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let "])),(l()(),e.sb(1194,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" be the number of participant nodes. For consensus, the algorithm examines whether an event block is "])),(l()(),e.sb(1197,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["shared"])),(l()(),e.Ib(-1,null,[" with 2"])),(l()(),e.sb(1200,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 nodes, where "])),(l()(),e.sb(1203,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of all nodes. Sharing an event block with 2"])),(l()(),e.sb(1206,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 nodes means that more than two-thirds of all nodes in the OPERA chain knows the event block."])),(l()(),e.sb(1209,0,null,null,1,"h2",[["id","main-chain"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Main-chain"])),(l()(),e.sb(1211,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For faster consensus, we introduce the "])),(l()(),e.sb(1213,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Main-chain"])),(l()(),e.Ib(-1,null,[", which is a special sub-graph of the OPERA chain. To improve path search, we propose to use a local hash table structure as a cache that is used to quickly determine the closest root to a event block."])),(l()(),e.sb(1216,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the OPERA chain, an event block is called a "])),(l()(),e.sb(1218,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["root"])),(l()(),e.Ib(-1,null,[" if the event block is linked to more than two-thirds of previous roots. A leaf vertex is also a root itself. With root event blocks, we can keep track of \u201cvital\u201d blocks that 2"])),(l()(),e.sb(1221,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 of the network agree on."])),(l()(),e.sb(1224,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The Main chain \u2014 a core subgraph of OPERA chain, plays the important role for ordering the event blocks. The Main chain stores shortcuts to connect between the Atropos. After the topological ordering is computed over all event blocks through Lachesis protocol, Atropos blocks are determined and form the Main chain. Figure [fig:mainchain] shows an example of Main chain composed of Atropos event blocks. In particular, the Main chain consists of Atropos blocks those are derived from root blocks and so are agreed by 2"])),(l()(),e.sb(1226,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 of the network nodes. Thus, this guarantees that at least 2"])),(l()(),e.sb(1229,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 of nodes have come to consensus on this Main chain."])),(l()(),e.sb(1232,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each participant node has a copy of the Main chain and can search consensus position of its own event blocks. Each event block can compute its own consensus position by checking the nearest Atropos event block. Assigning and searching consensus position are introduced in the consensus time selection section."])),(l()(),e.sb(1234,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The Main chain provides quick access to the previous transaction history to efficiently process new coming event blocks. From Main chain, information about unknown participants or attackers can be easily viewed. The Main chain can be used efficiently in transaction information management by providing quick access to new event blocks that have been agreed on by the majority of nodes. In short, the Main-chain gives the following advantages:"])),(l()(),e.sb(1236,0,null,null,6,"ul",[],null,null,null,null,null)),(l()(),e.sb(1237,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1238,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["All event blocks or nodes do not need to store all information. It is efficient for data management."])),(l()(),e.sb(1240,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1241,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Access to previous information is efficient and fast."])),(l()(),e.sb(1243,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Based on these advantages, OPERA chain can respond strongly to efficient transaction treatment and attacks through its Main-chain."])),(l()(),e.sb(1245,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[H] "])),(l()(),e.sb(1247,0,null,null,0,"img",[["alt","An Example of Main-chain"],["height","302"],["src","mainchain.pdf"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(1248,0,null,null,1,"h2",[["id","lachesis-consensus-algorithm-lca-"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis Consensus Algorithm (LCA)"])),(l()(),e.sb(1250,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Our Lachesis algorithm (LCA) is presented. LCA is one of the consensus algorithms for solving the byzantine agreement problem. In LCA, the OPERA chain uses root, Clotho and Atropos blocks to find consensus time for event blocks. Algorithm [al:main] shows the pseudo algorithm of a OPERA chain. The algorithm consists of two parts and runs them in parallel."])),(l()(),e.sb(1252,0,null,null,9,"ul",[],null,null,null,null,null)),(l()(),e.sb(1253,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(1254,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In one part, each node requests synchronization and creates an event block. In line 3, a node runs the Node Selection Algorithm. The Node Selection Algorithm returns the "])),(l()(),e.sb(1256,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" IDs of other nodes to communicate with. In line 4 and 5, the node synchronizes the OPERA chain with other nodes. Line 6 runs the Event block creation, at which step the node creates an event block and checks whether it is root. Then the node broadcasts the created event block to other nodes in line 7. The step in this line is optional. In line 8 and 9, Clotho selection and Atropos time consensus algorithms are invoked. The algorithms determinte whether the specified root can be a Clotho, assign the consensus time, and then confirm the Atropos."])),(l()(),e.sb(1259,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1260,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The second part is to respond to synchronization requests. In line 10 and 11, the node receives a synchronization request and then sends its response about the OPERA chain."])),(l()(),e.sb(1262,0,null,null,9,"p",[],null,null,null,null,null)),(l()(),e.sb(1263,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["loop"])),(l()(),e.Ib(-1,null,[": A, B = "])),(l()(),e.sb(1266,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-node Selection algorithm() Request sync to node A and B Sync all known events by Lachesis protocol Event block creation (optional) Broadcast out the message Root selection Clotho selection Atropos time consensus "])),(l()(),e.sb(1269,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["loop"])),(l()(),e.Ib(-1,null,[": Request sync from a node Sync all known events by Lachesis protocol"])),(l()(),e.sb(1272,0,null,null,1,"h2",[["id","node-structure"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Node Structure"])),(l()(),e.sb(1274,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section gives an overview of node structure in Lachesis."])),(l()(),e.sb(1276,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each node has a signature stamp, height vector, in-degree vector, flag table, root hash list, and Main-chain. Signature stamp is the data structure for storing the hash value that indicates the most recently created event block by the node. We call the most recently created event block the top event block. The flag table is a n dimensional vector. If an event block "])),(l()(),e.sb(1278,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" created by "])),(l()(),e.sb(1281,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1283,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1284,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" node can reach "])),(l()(),e.sb(1287,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1289,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1290,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" root, then the "])),(l()(),e.sb(1293,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.sb(1295,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1296,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" value in the flag table of "])),(l()(),e.sb(1299,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" becomes 1 (otherwise 0). Each node only maintains the flag table of the top event block."])),(l()(),e.sb(1302,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(1303,0,null,null,0,"img",[["alt","An Example of Node Structure"],["src","node_structure.pdf"]],null,null,null,null,null)),(l()(),e.sb(1304,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:node] shows an example of the node structure component of a node "])),(l()(),e.sb(1306,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[". In the figure, the "])),(l()(),e.sb(1309,0,null,null,13,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1311,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["g"])),(l()(),e.sb(1314,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(1317,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["u"])),(l()(),e.sb(1320,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(1323,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1324,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" stores the hash value of the top event block of "])),(l()(),e.sb(1327,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[". Each value in the height vector is the number of event blocks created by other nodes respectively. The value of "])),(l()(),e.sb(1330,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(1332,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1333,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is the number of event blocks created by the "])),(l()(),e.sb(1336,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1338,0,null,null,2,"sup",[],null,null,null,null,null)),(l()(),e.sb(1339,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**h"])),(l()(),e.Ib(-1,null,[" node. Each value in the in-degree vector is the number of edges from other event blocks created by other nodes to the top event block. The root hash list is the data structure storing the hash values of the root. The Main-chain is a data structure storing hash values of the Atropos blocks. The Main-chain is used to find event blocks with complete consensus. The root, Clotho and Atropos selection algorithm are introduced in Section [se:lca]."])),(l()(),e.sb(1342,0,null,null,1,"h2",[["id","event-block-creation"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Event block creation"])),(l()(),e.sb(1344,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In Lachesis protocol, every node can create an event block. Each event block refers to other event blocks. Reference means that the event block stores the hash values of the other event blocks. In a Lachesis protocol, an event block refers to "])),(l()(),e.sb(1346,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-neighbor event blocks under the conditions as follows,"])),(l()(),e.sb(1349,0,null,null,12,"ol",[],null,null,null,null,null)),(l()(),e.sb(1350,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1351,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The reference event blocks are the top event blocks."])),(l()(),e.sb(1353,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1354,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["One reference should be made to a self-parent."])),(l()(),e.sb(1356,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(1357,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The own top event block refers to at least "])),(l()(),e.sb(1359,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-neighbor of other nodes."])),(l()(),e.sb(1362,0,null,null,1,"h2",[["id","topological-ordering-of-events-using-lamport-timestamps"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Topological ordering of events using Lamport timestamps"])),(l()(),e.sb(1364,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Every node has a physical clock and it needs physical time to create an event block. However, for consensus, Lachesis protocols relies on a logical clock for each node. For the purpose, we use "])),(l()(),e.sb(1366,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u201cLamport timestamps\u201d"])),(l()(),e.Ib(-1,null,[" to determine the time ordering between event blocks in a asynchronous distributed system.\nThe Lamport timestamps algorithm is as follows:"])),(l()(),e.sb(1369,0,null,null,12,"ol",[],null,null,null,null,null)),(l()(),e.sb(1370,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1371,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each node increments its count value before creating an event block."])),(l()(),e.sb(1373,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1374,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When sending a message include its count value, receiver should consider which sender\u2019s message is received and increments its count value."])),(l()(),e.sb(1376,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1377,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If current counter is less than or equal to the received count value from another node, then the count value of the recipient is updated."])),(l()(),e.sb(1379,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1380,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If current counter is greater than the received count value from another node, then the current count value is updated."])),(l()(),e.sb(1382,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We use the Lamport\u2019s algorithm to enforce a topological ordering of event blocks and uses it in Atropos selection algorithm."])),(l()(),e.sb(1384,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Since an event block is created based on logical time, the sequence between each event blocks is immediately determined. Because the Lamport timestamps algorithm gives a partial order of all events, the whole time ordering process can be used for Byzantine fault tolerance."])),(l()(),e.sb(1386,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[t] "])),(l()(),e.sb(1388,0,null,null,0,"embed",[["height","302"],["src","Lamport_timestamps.pdf"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(1389,0,null,null,1,"h2",[["id","topological-consensus-ordering"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Topological consensus ordering"])),(l()(),e.sb(1391,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The sequential order of each event block is an important aspect for Byzantine fault tolerance. In order to determine the pre-and-post sequence between all event blocks, we use Atropos consensus time, Lamport timestamp algorithm and the hash value of the event block."])),(l()(),e.sb(1393,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["First, when each node creates event blocks, they have a logical timestamp based on Lamport timestamp. This means that they have a partial ordering between the relevant event blocks. Each Clotho has consensus time to the Atropos. This consensus time is computed based on the logical time nominated from other nodes at the time of the 2n/3 agreement."])),(l()(),e.sb(1395,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the LCA, each event block is based on the following three rules to reach an agreement:"])),(l()(),e.sb(1397,0,null,null,9,"ol",[],null,null,null,null,null)),(l()(),e.sb(1398,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1399,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If there are more than one Atropos with different times on the same frame, the event block with smaller consensus time has higher priority."])),(l()(),e.sb(1401,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1402,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If there are more than one Atropos having any of the same consensus time on the same frame, determine the order based on the own logical time from Lamport timestamp."])),(l()(),e.sb(1404,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1405,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When there are more than one Atropos having the same consensus time, if the local logical time is same, a smaller hash value is given priority through hash function."])),(l()(),e.sb(1407,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:topological consensus ordering] depicts an example of topological consensus ordering."])),(l()(),e.sb(1409,0,null,null,0,"embed",[["height","302"],["src","topological_consensus_ordering.pdf"]],null,null,null,null,null)),(l()(),e.sb(1410,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:sequence of operachain] shows the part of OPERA chain in which the final consensus order is determined based on these 3 rules. The number represented by each event block is a logical time based on Lamport timestamp."])),(l()(),e.sb(1412,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[H] "])),(l()(),e.sb(1414,0,null,null,0,"img",[["alt","An Example of time ordering of event blocks in OPERA chain"],["height","302"],["src","sequence_operachain.pdf"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(1415,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Final topological consensus order containing the event blocks based on agreement for the apropos. Based on each Atropos, they will have different colors depending on their range."])),(l()(),e.sb(1417,0,null,null,1,"h2",[["id","peer-selection-algorithm"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Peer selection algorithm"])),(l()(),e.sb(1419,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In order to create an event block, a node needs to select "])),(l()(),e.sb(1421,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" other nodes. Lachesis protocols does not depend on how peer nodes are selected. One simple approach can use a random selection from the pool of "])),(l()(),e.sb(1424,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" nodes. The other approach is to define some criteria or cost function to select other peers of a node."])),(l()(),e.sb(1427,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Within distributed system, a node can select other nodes with low communication costs, low network latency, high bandwidth, high successful transaction throughputs."])),(l()(),e.sb(1429,0,null,null,5,"h1",[["id","lachesis-consensus-protocol-l-sub-0-sub-"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis Consensus Protocol "])),(l()(),e.sb(1431,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(1433,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.sb(1435,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section presents our new Lachesis Consensus Protocol "])),(l()(),e.sb(1437,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(1439,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", which is a specific example of the Lachesis class. We describe the main ideas and algorithms used in the protocol."])),(l()(),e.sb(1442,0,null,null,1,"h2",[["id","root-selection"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Root Selection"])),(l()(),e.sb(1444,0,null,null,107,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["All nodes can create event blocks and an event block can be a root when satisfying specific conditions. Not all event blocks can be roots. First, the first created event blocks are themselves roots. These leaf event blocks form the first root set "])),(l()(),e.sb(1446,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1448,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1449,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". If there are total "])),(l()(),e.sb(1453,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" nodes and these nodes create the event blocks, then the cardinality of the first root set |"])),(l()(),e.sb(1456,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1458,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1459,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["| is "])),(l()(),e.sb(1463,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[". Second, if an event block "])),(l()(),e.sb(1466,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" can reach at least 2n/3 roots, then "])),(l()(),e.sb(1469,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" is called a root. This event "])),(l()(),e.sb(1472,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" does not belong to "])),(l()(),e.sb(1475,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1477,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1478,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", but the next root set "])),(l()(),e.sb(1482,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1484,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1485,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". Thus, excluding the first root set, the range of cardinality of root set "])),(l()(),e.sb(1489,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1491,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1492,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S**k"])),(l()(),e.Ib(-1,null,[" is 2"])),(l()(),e.sb(1495,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3\u2004<\u2004|"])),(l()(),e.sb(1498,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1500,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1501,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S**k"])),(l()(),e.Ib(-1,null,["|\u2264"])),(l()(),e.sb(1504,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[". The event blocks including "])),(l()(),e.sb(1507,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1509,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1510,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S**k"])),(l()(),e.Ib(-1,null,[" before "])),(l()(),e.sb(1513,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1515,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1516,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S**k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" is in the frame "])),(l()(),e.sb(1520,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1522,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1523,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[". The roots in "])),(l()(),e.sb(1526,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1528,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1529,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S**k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" does not belong to the frame "])),(l()(),e.sb(1533,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1535,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1536,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[". Those are included in the frame "])),(l()(),e.sb(1539,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1541,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1542,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051 when a root belonging to "])),(l()(),e.sb(1545,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1547,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1548,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S**k"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" occurs."])),(l()(),e.sb(1552,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We introduce the use of a flag table to quickly determine whether a new event block becomes a root or not. Each node maintains a flag table of the top event block. Every event block that is newly created is assigned "])),(l()(),e.sb(1554,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" hashes for its "])),(l()(),e.sb(1557,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" parent event blocks. We apply an "])),(l()(),e.sb(1560,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O**R"])),(l()(),e.Ib(-1,null,[" operation on the flag tables of the parent event blocks."])),(l()(),e.sb(1563,0,null,null,46,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:ex_ft] shows an example of how to use flag tables to determine a root. In this example, "])),(l()(),e.sb(1565,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1567,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is the most recently created event block. We apply an "])),(l()(),e.sb(1570,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O**R"])),(l()(),e.Ib(-1,null,[" operation on the flag tables of "])),(l()(),e.sb(1573,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1575,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2019s "])),(l()(),e.sb(1578,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" parent event blocks. The result is the flag table of "])),(l()(),e.sb(1581,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1583,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". If "])),(l()(),e.sb(1586,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1588,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["\u2019s flag table has more than 2"])),(l()(),e.sb(1591,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 set bits, "])),(l()(),e.sb(1594,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1596,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is a root. In this example, the number of set bits is 4, which is greater than 2"])),(l()(),e.sb(1599,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 ("])),(l()(),e.sb(1602,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["=5). Thus, "])),(l()(),e.sb(1605,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1607,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" becomes root."])),(l()(),e.sb(1610,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The root selection algorithm is as follows:"])),(l()(),e.sb(1612,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[t] "])),(l()(),e.sb(1614,0,null,null,0,"img",[["alt","An Example of Flag Table Calculation"],["height","302"],["src","flagtable"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(1615,0,null,null,68,"ol",[],null,null,null,null,null)),(l()(),e.sb(1616,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1617,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The first event blocks are considered as root."])),(l()(),e.sb(1619,0,null,null,5,"li",[],null,null,null,null,null)),(l()(),e.sb(1620,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When a new event block is added in the OPERA chain, we check whether the event block is a root by applying "])),(l()(),e.sb(1622,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O**R"])),(l()(),e.Ib(-1,null,[" operation on the flag tables connected to the new event block. If the sum of the flag table for the new event block is more than 2n/3, the new event block becomes a root."])),(l()(),e.sb(1625,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(1626,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When a new root appears on the OPERA chain, nodes update their root hash list. If one of new event blocks becomes a root, all nodes that share the new event block add the hash value of the event block to their root hash list."])),(l()(),e.sb(1628,0,null,null,17,"li",[],null,null,null,null,null)),(l()(),e.sb(1629,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The new root set is created if the cardinality of previous root set "])),(l()(),e.sb(1631,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1633,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1634,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S**p"])),(l()(),e.Ib(-1,null,[" is more than 2n/3 and the new event block can reach 2n/3 root in "])),(l()(),e.sb(1637,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1639,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(1640,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(1642,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1643,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1646,0,null,null,37,"li",[],null,null,null,null,null)),(l()(),e.sb(1647,0,null,null,36,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["When the new root set "])),(l()(),e.sb(1649,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1651,0,null,null,6,"sub",[],null,null,null,null,null)),(l()(),e.sb(1652,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(1654,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1655,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" is created, the event blocks from previous root set "])),(l()(),e.sb(1659,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1661,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(1662,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(1664,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1665,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" to before "])),(l()(),e.sb(1668,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1670,0,null,null,6,"sub",[],null,null,null,null,null)),(l()(),e.sb(1671,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(1673,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(1674,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" belong to the frame "])),(l()(),e.sb(1678,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1680,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1681,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1684,0,null,null,1,"h2",[["id","clotho-selection"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Clotho Selection"])),(l()(),e.sb(1686,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A Clotho is a root that satisfies the Clotho creation conditions. Clotho creation conditions are that more than 2n/3 nodes know the root and a root knows this information."])),(l()(),e.sb(1688,0,null,null,10,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:Clotho] shows an example of Clotho. Circles with a label "])),(l()(),e.sb(1690,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1692,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1693,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" (or "])),(l()(),e.sb(1696,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") represents a root (or Clotho) event block. If there are three other sets of root and there exists one root after the recent clotho set, then one of the roots in the first root set become Clotho."])),(l()(),e.sb(1699,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[t] "])),(l()(),e.sb(1701,0,null,null,0,"img",[["alt","An Example of Clotho"],["height","302"],["src","Clotho_example"],["title","fig:"]],null,null,null,null,null)),(l()(),e.sb(1702,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Clotho selection algorithm checks whether root event blocks in the root hash list satisfy the Clotho condition. If a root satisfies Clotho condition, the root becomes Clotho and makes a candidate time for Atropos. After the root is concluded as a Clotho, Atropos consensus time selection algorithm is triggered."])),(l()(),e.sb(1704,0,null,null,42,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For a root "])),(l()(),e.sb(1706,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[", we denote "])),(l()(),e.sb(1709,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1711,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(1714,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1718,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(1721,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[") to be the root "])),(l()(),e.sb(1724,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(1727,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["-th frame. For example, "])),(l()(),e.sb(1730,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1732,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(1735,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["(1,\u2006"])),(l()(),e.sb(1739,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[") is the first root belong to the frame "])),(l()(),e.sb(1742,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1744,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1747,0,null,null,93,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Algorithm [al:acs] shows the pseudo code for Clotho selection. The algorithm takes a root "])),(l()(),e.sb(1749,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" as input. Line 4 and 5 set "])),(l()(),e.sb(1752,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1755,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i**s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(1758,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1760,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(1763,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["h**o"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(1767,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1770,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(1772,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(1776,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(1778,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,[" and 0 respectively. Line 6-8 checks whether any root "])),(l()(),e.sb(1782,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["\u2032 in "])),(l()(),e.sb(1785,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1787,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(1790,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1794,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20053,\u2006"])),(l()(),e.sb(1797,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[") shares "])),(l()(),e.sb(1800,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" where "])),(l()(),e.sb(1803,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is the current frame. In line 9-10, if number of roots in "])),(l()(),e.sb(1806,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1808,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["a"])),(l()(),e.sb(1811,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1815,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20052,\u2006"])),(l()(),e.sb(1818,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[") which shares "])),(l()(),e.sb(1821,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" is more than 2"])),(l()(),e.sb(1824,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3, the root "])),(l()(),e.sb(1827,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" is set as a Clotho. The time complexity of Algorithm 3 is "])),(l()(),e.sb(1830,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1833,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(1835,0,null,null,1,"sup",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,["), where "])),(l()(),e.sb(1838,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of nodes."])),(l()(),e.sb(1841,0,null,null,54,"p",[],null,null,null,null,null)),(l()(),e.sb(1842,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Input"])),(l()(),e.Ib(-1,null,[": a root "])),(l()(),e.sb(1845,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(1847,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1850,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i**s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(1853,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1855,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(1858,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["h**o"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(1862,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(1864,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["l"])),(l()(),e.sb(1867,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1870,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(1872,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" \u2190 0 c.yes \u2190 c.yes + 1 "])),(l()(),e.sb(1876,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1879,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i**s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(1882,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1884,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(1887,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["h**o"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(1891,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.sb(1893,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1896,0,null,null,1,"h2",[["id","atropos-selection"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Atropos Selection"])),(l()(),e.sb(1898,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Atropos selection algorithm is the process in which the candidate time generated from Clotho selection is shared with other nodes, and each root re-selects candidate time repeatedly until all nodes have same candidate time for a Clotho."])),(l()(),e.sb(1900,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["After a Clotho is nominated, each node then computes candidate time of the Clotho. If there are more than two-thirds of the nodes that compute the same value for candidate time, that time value is recorded. Otherwise, each node reselects candidate time from some candidate time which the node collects. By the reselection process, each node reaches time consensus for candidate time of Clotho as OPERA chain grows. The candidate time reaching the consensus is called Atropos consensus time. After Atropos consensus time is computed, Clotho is nominated to Atropos and each node stores the hash value of Atropos and Atropos consensus time in Main-Chain. The Main-chain is used for time order between event blocks. The proof of Atropos consensus time selection is shown in the section [se:proof]."])),(l()(),e.sb(1902,0,null,null,199,"p",[],null,null,null,null,null)),(l()(),e.sb(1903,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Input"])),(l()(),e.Ib(-1,null,[": "])),(l()(),e.sb(1906,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1909,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(1911,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(1914,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["h**o"])),(l()(),e.Ib(-1,null,[" in frame "])),(l()(),e.sb(1918,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1920,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1921,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(1923,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1926,0,null,null,13,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(1928,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["o"])),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(1931,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(1934,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(1937,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(1941,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(1943,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(1947,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(1949,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["l"])),(l()(),e.sb(1952,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[" \u2190 the index of the last frame "])),(l()(),e.sb(1955,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1957,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(1958,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(1960,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[" \u2190 be the Root set "])),(l()(),e.sb(1963,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(1965,0,null,null,8,"sub",[],null,null,null,null,null)),(l()(),e.sb(1966,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(1968,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(1969,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u2005"])),(l()(),e.sb(1972,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" in frame "])),(l()(),e.sb(1975,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(1977,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(1978,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u2005"])),(l()(),e.sb(1981,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.sb(1983,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1986,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(1988,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(1992,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") \u2190 "])),(l()(),e.sb(1995,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(1998,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["l"])),(l()(),e.sb(2e3,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(2003,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,["o"])),(l()(),e.sb(2006,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(2010,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2012,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,[" s \u2190 the set of Root in "])),(l()(),e.sb(2016,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2018,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(2019,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[" that "])),(l()(),e.sb(2023,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" can share t \u2190 RESELECTION(s, "])),(l()(),e.sb(2026,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") k \u2190 the number of root having "])),(l()(),e.sb(2029,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(2032,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(2034,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2037,0,null,null,13,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2039,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["o"])),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(2042,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(2045,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(2048,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["u"])),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(2052,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2054,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(2058,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2060,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2063,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2065,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2069,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") \u2190 "])),(l()(),e.sb(2072,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2074,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2077,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2079,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2083,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") \u2190 "])),(l()(),e.sb(2086,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2088,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2091,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2093,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2097,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") \u2190 the minimum value in "])),(l()(),e.sb(2100,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(2102,0,null,null,138,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Algorithm [al:atc] and [al:resel] show pseudo code of Atropos consensus time selection and Consensus time reselection. In Algorithm [al:atc], at line 5, "])),(l()(),e.sb(2104,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["d"])),(l()(),e.Ib(-1,null,[" denotes the deference of relationship between root set of "])),(l()(),e.sb(2107,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2110,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[". Thus, line 7 means that "])),(l()(),e.sb(2113,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" is one of the elements in root set of the frame "])),(l()(),e.sb(2116,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2118,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(2119,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20053"])),(l()(),e.Ib(-1,null,[", where the frame "])),(l()(),e.sb(2123,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2125,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2126,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" includes "])),(l()(),e.sb(2129,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[". Line 10, each root in the frame "])),(l()(),e.sb(2132,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2134,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2135,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" selects own Lamport timestamp as candidate time of "])),(l()(),e.sb(2138,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" when they confirm root "])),(l()(),e.sb(2141,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" as Cltoho. In line 12, 13, and 14, "])),(l()(),e.sb(2144,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(2147,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(2150,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" save the set of root that "])),(l()(),e.sb(2153,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" can share "])),(l()(),e.sb(2156,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[", the result of "])),(l()(),e.sb(2159,0,null,null,16,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(2161,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(2164,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(2167,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2170,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["T"])),(l()(),e.Ib(-1,null,["I"])),(l()(),e.sb(2173,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,[" function, and the number of root in "])),(l()(),e.sb(2177,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" having "])),(l()(),e.sb(2180,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[". Line 15 is checking whether there is a difference as much as "])),(l()(),e.sb(2183,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.Ib(-1,null,[" between "])),(l()(),e.sb(2186,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2189,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" where "])),(l()(),e.sb(2192,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.Ib(-1,null,[" is a constant value for minimum selection frame. Line 16-20 is checking whether more than two-thirds of root in the frame "])),(l()(),e.sb(2195,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2197,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(2198,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[" nominate the same candidate time. If two-thirds of root in the frame "])),(l()(),e.sb(2202,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2204,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(2205,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[" nominate the same candidate time, the root "])),(l()(),e.sb(2209,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" is assigned consensus time as "])),(l()(),e.sb(2212,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[". Line 22 is minimum selection frame. In minimum selection frame, minimum value of candidate time is selected to reach byzantine agreement. Algorithm [al:resel] operates in the middle of Algorithm [al:atc]. In Algorithm [al:resel], input is a root set "])),(l()(),e.sb(2215,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[" and output is a reselected candidate time. Line 4-5 computes the frequencies of each candidate time from all the roots in "])),(l()(),e.sb(2218,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[". In line 6-11, a candidate time which is smallest time that is the most nomitated. The time complexity of Algorithm [al:resel] is "])),(l()(),e.sb(2221,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2224,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[") where "])),(l()(),e.sb(2227,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of nodes. Since Algorithm [al:atc] includes Algorithm [al:resel], the time complexity of Algorithm [al:atc] is "])),(l()(),e.sb(2230,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2233,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(2235,0,null,null,1,"sup",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[") where "])),(l()(),e.sb(2238,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of nodes."])),(l()(),e.sb(2241,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[H]"])),(l()(),e.sb(2243,0,null,null,139,"p",[],null,null,null,null,null)),(l()(),e.sb(2244,0,null,null,3,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" ALG@cmd@@L @Function @currentfunction"])),(l()(),e.sb(2246,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Reselection"])),(l()(),e.sb(2248,0,null,null,3,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" bsphack @writeauxout"])),(l()(),e.sb(2250,0,null,null,0,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" esphack "])),(l()(),e.sb(2252,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Input"])),(l()(),e.Ib(-1,null,[": Root set "])),(l()(),e.sb(2255,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[", and Clotho "])),(l()(),e.sb(2258,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2260,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Output"])),(l()(),e.Ib(-1,null,[": candidate time "])),(l()(),e.sb(2263,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2265,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c4"])),(l()(),e.Ib(-1,null,[" \u2190 set of all "])),(l()(),e.sb(2268,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2270,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2271,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(2274,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2277,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2279,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["m**e"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2283,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[") for all "])),(l()(),e.sb(2286,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(2289,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(2291,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" \u2190 set of tuples ("])),(l()(),e.sb(2294,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2296,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2297,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(2300,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2302,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2303,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") computed from "])),(l()(),e.sb(2306,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["\u03c4"])),(l()(),e.Ib(-1,null,[", where "])),(l()(),e.sb(2309,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2311,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2312,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(2315,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2317,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["o"])),(l()(),e.Ib(-1,null,["u"])),(l()(),e.sb(2320,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2324,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2326,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2327,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") "])),(l()(),e.sb(2330,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(2332,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["_"])),(l()(),e.sb(2336,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2338,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["o"])),(l()(),e.Ib(-1,null,["u"])),(l()(),e.sb(2341,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(2345,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.sb(2347,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2351,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2353,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2354,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[") "])),(l()(),e.sb(2357,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(2360,0,null,null,10,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(2362,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2365,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(2368,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["t**e"])),(l()(),e.sb(2371,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(2374,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2376,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2377,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.sb(2379,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["return"])),(l()(),e.sb(2381,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.sb(2383,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In the Atropos Consensus Time Selection algorithm, nodes reach consensus agreement about candidate time of a Clotho without additional communication (i.e., exchanging candidate time) with each other. Each node communicates with each other through the Lachesis protocol, the OPERA chain of all nodes grows up into same shape. This allows each node to know the candidate time of other nodes based on its OPERA chain and reach a consensus agreement. The proof that the agreement based on OPERA chain become agreement in action is shown in the section [se:proof]."])),(l()(),e.sb(2385,0,null,null,1,"h2",[["id","peer-selection-algorithm-via-cost-function"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Peer selection algorithm via Cost function"])),(l()(),e.sb(2387,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We define three versions of the Cost Function ("])),(l()(),e.sb(2389,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2391,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2392,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,["). Version one is focused around updated information share and is discussed below. The other two versions are focused on root creation and consensus facilitation, these will be discussed in a following paper."])),(l()(),e.sb(2395,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We define a Cost Function ("])),(l()(),e.sb(2397,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2399,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2400,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[") for preventing the creation of lazy nodes. The lazy node is a node that has a lower work portion in the OPERA chain. When a node creates an event block, the node selects other nodes with low values outputs from the cost function and refers to the top event blocks of the reference nodes. An equation ([eq1]) of "])),(l()(),e.sb(2403,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2405,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2406,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" is as follows,"])),(l()(),e.sb(2409,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.sb(2410,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2412,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2413,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,["\u2004=\u2004"])),(l()(),e.sb(2416,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.Ib(-1,null,["/"])),(l()(),e.sb(2419,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.sb(2421,0,null,null,43,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["where "])),(l()(),e.sb(2423,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2426,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" denote values of in-degree vector and height vector respectively. If the number of nodes with the lowest "])),(l()(),e.sb(2429,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2431,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2432,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" is more than "])),(l()(),e.sb(2435,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[", one of the nodes is selected at random. The reason for selecting high "])),(l()(),e.sb(2438,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" is that we can expect a high possibility to create a root because the high "])),(l()(),e.sb(2441,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[" indicates that the communication frequency of the node had more opportunities than others with low "])),(l()(),e.sb(2444,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[". Otherwise, the nodes that have high "])),(l()(),e.sb(2447,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2449,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2450,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[" (the case of "])),(l()(),e.sb(2453,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.Ib(-1,null,[" > "])),(l()(),e.sb(2456,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[") have generated fewer event blocks than the nodes that have low "])),(l()(),e.sb(2459,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(2461,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2462,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["F"])),(l()(),e.Ib(-1,null,[". Then we can judge that those kind of nodes are lazy. If we can detect whether a node is lazy based on cost function, we can change the lazy nodes to other participants or remove them."])),(l()(),e.sb(2465,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(2466,0,null,null,0,"img",[["alt","An Example of Cost Function 1"],["height","226"],["src","fig_cfEx1"]],null,null,null,null,null)),(l()(),e.sb(2467,0,null,null,38,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:cfEx1] shows an example of the node selection based on the cost function after the creation of leaf events by all nodes. In this example, there are five nodes and each node created leaf events. All nodes know other leaf events. Node "])),(l()(),e.sb(2469,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" creates an event block "])),(l()(),e.sb(2472,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2474,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2477,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" calculates the cost functions. Step 2 in Figure [fig:cfEx1] shows the results of cost functions based on the height and in-degree vectors of node "])),(l()(),e.sb(2480,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[". In the initial step, each value in the vectors are same because all nodes have only leaf events. Node "])),(l()(),e.sb(2483,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" randomly selects "])),(l()(),e.sb(2486,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" nodes and connects "])),(l()(),e.sb(2489,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2491,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" to the leaf events of selected nodes. In this example, we set "])),(l()(),e.sb(2494,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["=3 and assume that node "])),(l()(),e.sb(2497,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" selects node "])),(l()(),e.sb(2500,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2503,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2506,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.sb(2507,0,null,null,0,"img",[["alt","An Example of Cost Function 2"],["height","264"],["src","fig_cfEx2"]],null,null,null,null,null)),(l()(),e.sb(2508,0,null,null,30,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:cfEx2] shows an example of the node selection after a few steps of the simulation in Figure [fig:cfEx1]. In Figure [fig:cfEx2], the recent event block is "])),(l()(),e.sb(2510,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2512,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["5"])),(l()(),e.Ib(-1,null,[" created by node "])),(l()(),e.sb(2515,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[". Node "])),(l()(),e.sb(2518,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" calculates the cost function and selects the other two nodes that have the lowest results of the cost function. In this example, node "])),(l()(),e.sb(2521,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" has 0.5 as the result and other nodes have the same values. Because of this, node "])),(l()(),e.sb(2524,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" first selects node "])),(l()(),e.sb(2527,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" and randomly selects other nodes among nodes "])),(l()(),e.sb(2530,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(2533,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(2536,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2539,0,null,null,37,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The height of node "])),(l()(),e.sb(2541,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" in the current OPERA chain of the example is 2 (leaf event and event block "])),(l()(),e.sb(2544,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2546,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,["). On the other hand, the height of node "])),(l()(),e.sb(2549,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" in node structure of "])),(l()(),e.sb(2552,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" is 1. Node "])),(l()(),e.sb(2555,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" is still not aware of the presence of the event block "])),(l()(),e.sb(2558,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2560,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[". It means that there is no path from the event blocks created by node "])),(l()(),e.sb(2563,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" to the event block "])),(l()(),e.sb(2566,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2568,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["4"])),(l()(),e.Ib(-1,null,[". Thus, node "])),(l()(),e.sb(2571,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" has 1 as the height of node "])),(l()(),e.sb(2574,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(2577,0,null,null,67,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Algorithm [al:ns] shows the selecting algorithm for selecting reference nodes. The algorithm operates for each node to select a communication partner from other nodes. Line 4 and 5 set min_cost and "])),(l()(),e.sb(2579,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(2581,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2582,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2584,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" to initial state. Line 7 calculates the cost function "])),(l()(),e.sb(2588,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2590,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2591,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" for each node. In line 8, 9, and 10, we find the minimum value of the cost function and set min_cost and "])),(l()(),e.sb(2594,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(2596,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2597,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2599,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(2603,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2605,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2606,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" and the ID of each node respectively. Line 11 and 12 append the ID of each node to "])),(l()(),e.sb(2609,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(2611,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2612,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2614,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" if min_cost equals "])),(l()(),e.sb(2618,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2620,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2621,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[". Finally, line 13 selects randomly "])),(l()(),e.sb(2624,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" node IDs from "])),(l()(),e.sb(2627,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["S"])),(l()(),e.sb(2629,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2630,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2632,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" as communication partners. The time complexity of Algorithm 2 is "])),(l()(),e.sb(2636,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(2639,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["), where "])),(l()(),e.sb(2642,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the number of nodes."])),(l()(),e.sb(2645,0,null,null,87,"p",[],null,null,null,null,null)),(l()(),e.sb(2646,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Input:"])),(l()(),e.Ib(-1,null,[" Height Vector "])),(l()(),e.sb(2649,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.Ib(-1,null,[", In-degree Vector "])),(l()(),e.sb(2652,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.sb(2654,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Output:"])),(l()(),e.Ib(-1,null,[" reference node "])),(l()(),e.sb(2657,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2659,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" min_cost \u2190 "])),(l()(),e.sb(2663,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["I"])),(l()(),e.sb(2665,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,["F"])),(l()(),e.sb(2668,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(2670,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2671,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2673,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 None "])),(l()(),e.sb(2677,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2679,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2680,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 $\\frac{I_k}{H_k}$ min_cost \u2190 "])),(l()(),e.sb(2683,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.sb(2685,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2686,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2688,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(2690,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2691,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2693,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(2697,0,null,null,1,"span",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.sb(2699,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(2701,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2702,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2704,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 "])),(l()(),e.sb(2708,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(2710,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2711,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2713,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u222a "])),(l()(),e.sb(2717,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.sb(2719,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2721,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" \u2190 random select in "])),(l()(),e.sb(2725,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.sb(2727,0,null,null,5,"sub",[],null,null,null,null,null)),(l()(),e.sb(2728,0,null,null,4,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(2730,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(2733,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["After the reference node is selected, each node communicates and shares information that is all event blocks known by them. A node creates an event block by referring to the top event block of the reference node. The Lachesis protocol works and communicates asynchronously. This allows a node to create an event block asynchronously even when another node creates an event block. The communication between nodes does not allow simultaneous communication with the same node."])),(l()(),e.sb(2735,0,null,null,0,"embed",[["height","188"],["src","fig_nsEx.pdf"]],null,null,null,null,null)),(l()(),e.sb(2736,0,null,null,69,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Figure [fig:nsEx] shows an example of the node selection in Lachesis protocol. In this example, there are five nodes ("])),(l()(),e.sb(2738,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(2741,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(2744,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(2747,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(2750,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[") and each node generates the first event blocks, called leaf events. All nodes share other leaf events with each other. In the first step, node "])),(l()(),e.sb(2753,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" generates new event block "])),(l()(),e.sb(2756,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2758,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(2761,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["blue"])),(l()(),e.Ib(-1,null,["). Then node "])),(l()(),e.sb(2764,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" calculates the cost function to connect other nodes. In this initial situation, all nodes have one event block called leaf event, thus the height vector and the in-degree vector in node "])),(l()(),e.sb(2767,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" has same values. In other words, the heights of each node are 1 and in-degrees are 0. Because of this reason, node "])),(l()(),e.sb(2770,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" randomly select other two nodes and connect "])),(l()(),e.sb(2773,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2775,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" to the top two event blocks by other two nodes. The step 2 shows the situation after connections. In this example, node "])),(l()(),e.sb(2778,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" select node "])),(l()(),e.sb(2781,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2784,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" to connect "])),(l()(),e.sb(2787,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2789,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and the event block "])),(l()(),e.sb(2792,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2794,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" is connected to the top event blocks of node "])),(l()(),e.sb(2797,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2800,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[". Node "])),(l()(),e.sb(2803,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" only knows the situation of the step 2."])),(l()(),e.sb(2806,0,null,null,72,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["After that, in the example, node "])),(l()(),e.sb(2808,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" generates new event block "])),(l()(),e.sb(2811,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2813,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(2816,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["green"])),(l()(),e.Ib(-1,null,[") and also calculates the cost function. "])),(l()(),e.sb(2819,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" randomly select the other two nodes; "])),(l()(),e.sb(2822,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(2825,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[", since "])),(l()(),e.sb(2828,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" only has information of the leaf events. Node "])),(l()(),e.sb(2831,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" requests to "])),(l()(),e.sb(2834,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2837,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" to connect "])),(l()(),e.sb(2840,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(2842,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2843,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[", then nodes "])),(l()(),e.sb(2846,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2849,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" send information for their top event blocks to node "])),(l()(),e.sb(2852,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" as response. The top event block of node "])),(l()(),e.sb(2855,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" is "])),(l()(),e.sb(2858,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2860,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and node "])),(l()(),e.sb(2863,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[" is the leaf event. The event block "])),(l()(),e.sb(2866,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2868,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[" is connected to "])),(l()(),e.sb(2871,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(2873,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" and leaf event from node "])),(l()(),e.sb(2876,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,[". Step 4 shows these connections."])),(l()(),e.sb(2879,0,null,null,1,"h1",[["id","discussions"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Discussions"])),(l()(),e.sb(2881,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section presents several discussions on our Lachesis protocol."])),(l()(),e.sb(2883,0,null,null,1,"h2",[["id","lamport-timestamps"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lamport timestamps"])),(l()(),e.sb(2885,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section discusses a topological order of event blocks in DAG-based Lachesis protocols using Lamport timestamps ."])),(l()(),e.sb(2887,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,['Our Lachesis protocols relies on Lamport timestamps to define a topological ordering of event blocks in OPERA chain. The \u201chappened before" relation, denoted by \u2192, gives a partial ordering of events from a distributed system of nodes.'])),(l()(),e.sb(2889,0,null,null,27,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Given "])),(l()(),e.sb(2891,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" nodes, they are represented by "])),(l()(),e.sb(2894,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" processes "])),(l()(),e.sb(2897,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["\u2004=\u2004("])),(l()(),e.sb(2900,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2902,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(2905,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2907,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[",\u2006\u2026,\u2006"])),(l()(),e.sb(2910,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2912,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(2913,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(2917,0,null,null,85,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For a pair of event blocks "])),(l()(),e.sb(2919,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2922,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032, the relation \u201c\u2192\u201d satisfies: (1) If "])),(l()(),e.sb(2925,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2928,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 are events of process "])),(l()(),e.sb(2931,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(2933,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(2934,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", and "])),(l()(),e.sb(2937,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" comes before "])),(l()(),e.sb(2940,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032, then "])),(l()(),e.sb(2943,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(2946,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032. (2) If "])),(l()(),e.sb(2949,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" is the send("])),(l()(),e.sb(2952,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[") by one process and "])),(l()(),e.sb(2955,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 is the receive("])),(l()(),e.sb(2958,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["m"])),(l()(),e.Ib(-1,null,[") by another process, then "])),(l()(),e.sb(2961,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(2964,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032. (3) If "])),(l()(),e.sb(2967,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(2970,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 and "])),(l()(),e.sb(2973,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032\u2192"])),(l()(),e.sb(2976,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2033 then "])),(l()(),e.sb(2979,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(2982,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2033. Two distinct events "])),(l()(),e.sb(2985,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(2988,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 are said to be concurrent if "])),(l()(),e.sb(2991,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u219b\u2004"])),(l()(),e.sb(2994,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 and "])),(l()(),e.sb(2997,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032\u219b"])),(l()(),e.sb(3e3,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3003,0,null,null,82,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For an arbitrary total ordering \u227a of the processes, a relation \u21d2 is defined as follows: if "])),(l()(),e.sb(3005,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" is an event in process "])),(l()(),e.sb(3008,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(3010,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3011,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3014,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 is an event in process "])),(l()(),e.sb(3017,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(3019,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3020,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[", then "])),(l()(),e.sb(3023,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2004\u21d2\u2004"])),(l()(),e.sb(3026,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032 if and only if either (i) "])),(l()(),e.sb(3029,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(3031,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3032,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(3035,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[")<"])),(l()(),e.sb(3038,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(3040,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3041,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(3044,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[") or (ii) "])),(l()(),e.sb(3047,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(3050,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[")="])),(l()(),e.sb(3053,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(3055,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3056,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(3059,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["\u2032) and "])),(l()(),e.sb(3062,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(3064,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3065,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u227a\u2004"])),(l()(),e.sb(3068,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(3070,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3071,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[". This defines a total ordering, and that the Clock Condition implies that if "])),(l()(),e.sb(3074,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2004\u2192\u2004"])),(l()(),e.sb(3077,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,[" then "])),(l()(),e.sb(3080,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2004\u21d2\u2004"])),(l()(),e.sb(3083,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["b"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3086,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We use this total ordering in our Lachesis algorithms. By using Lamport timestamps, we do not rely on physical locks to determine a partial ordering of events."])),(l()(),e.sb(3088,0,null,null,1,"h2",[["id","semantics-of-lachesis-protocols"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Semantics of Lachesis protocols"])),(l()(),e.sb(3090,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["This section discusses the possible usage of concurrent common knowledge, described in Section [se:cck] to understand DAG-based consensus protocols."])),(l()(),e.sb(3092,0,null,null,38,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let "])),(l()(),e.sb(3094,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004=\u2004("])),(l()(),e.sb(3097,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3100,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[") denote directed acyclic graph (DAG). "])),(l()(),e.sb(3103,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" is a set of vertices and "])),(l()(),e.sb(3106,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" is a set of edges. DAG is a directed graph with no cycle. Namely, in DAG, there is no path that source and destination at the same vertex. A path is a sequence of vertices ("])),(l()(),e.sb(3109,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3111,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(3114,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3116,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", ..., "])),(l()(),e.sb(3119,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3121,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3122,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(k-1)"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(3125,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3127,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3128,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[") that uses no edge more than once."])),(l()(),e.sb(3131,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An asynchronous system consists of the following sets."])),(l()(),e.sb(3133,0,null,null,126,"ol",[],null,null,null,null,null)),(l()(),e.sb(3134,0,null,null,17,"li",[],null,null,null,null,null)),(l()(),e.sb(3135,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A set "])),(l()(),e.sb(3137,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" = {1,...,"])),(l()(),e.sb(3140,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["} of process identifiers, where "])),(l()(),e.sb(3143,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,[" is the total number of processes "])),(l()(),e.sb(3146,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.sb(3148,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3149,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in the system."])),(l()(),e.sb(3152,0,null,null,35,"li",[],null,null,null,null,null)),(l()(),e.sb(3153,0,null,null,34,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A set "])),(l()(),e.sb(3155,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" \u2286 {("])),(l()(),e.sb(3158,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[","])),(l()(),e.sb(3161,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[") s.t. "])),(l()(),e.sb(3164,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3167,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(3170,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["} of channels. If ("])),(l()(),e.sb(3173,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3176,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[") in "])),(l()(),e.sb(3179,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[", it indicates that process "])),(l()(),e.sb(3182,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" can send messages to process "])),(l()(),e.sb(3185,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3188,0,null,null,14,"li",[],null,null,null,null,null)),(l()(),e.sb(3189,0,null,null,13,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A set "])),(l()(),e.sb(3191,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["H"])),(l()(),e.sb(3193,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3194,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" of possible local histories for each process "])),(l()(),e.sb(3197,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(3200,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3203,0,null,null,29,"li",[],null,null,null,null,null)),(l()(),e.sb(3204,0,null,null,28,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A set "])),(l()(),e.sb(3206,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" of asynchronous runs. Each asynchronous run is a vector of local histories, denoted by "])),(l()(),e.sb(3209,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2004=\u2004\u27e8"])),(l()(),e.sb(3212,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(3214,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3217,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(3219,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3222,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(3224,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["3"])),(l()(),e.Ib(-1,null,[",\u2006..."])),(l()(),e.sb(3227,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.sb(3229,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3230,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["N"])),(l()(),e.Ib(-1,null,["\u27e9. Each process has a single run. Histories are indexed by process identifiers."])),(l()(),e.sb(3233,0,null,null,26,"li",[],null,null,null,null,null)),(l()(),e.sb(3234,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A set "])),(l()(),e.sb(3236,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["M"])),(l()(),e.Ib(-1,null,[" of messages. A message is a triple \u27e8"])),(l()(),e.sb(3239,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3242,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3245,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,["\u27e9 where "])),(l()(),e.sb(3248,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2004\u2208\u2004"])),(l()(),e.sb(3251,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" is the sender of the message, "])),(l()(),e.sb(3254,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,["\u2208 is the message recipient, and "])),(l()(),e.sb(3257,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" is the message body."])),(l()(),e.sb(3260,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In Lachesis protocol, each node selects "])),(l()(),e.sb(3262,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" other nodes as peers. For certain gossip protocol, nodes may be constrained to gossip with its "])),(l()(),e.sb(3265,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peers. In such a case, the set of channels "])),(l()(),e.sb(3268,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" can be modelled as follows. If node "])),(l()(),e.sb(3271,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" selects node "])),(l()(),e.sb(3274,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[" as a peer, then ("])),(l()(),e.sb(3277,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3280,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["j"])),(l()(),e.Ib(-1,null,[")\u2208"])),(l()(),e.sb(3283,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[". In general, one can express the history of each node in Lachesis protocol in the same manner as in the CCK paper . Thus, a proof of consensus can be formalized via the consistent cuts."])),(l()(),e.sb(3286,0,null,null,1,"h1",[["id","conclusion"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Conclusion"])),(l()(),e.sb(3288,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In order to realize the distributed ledger technology, we have proposed a new family of asynchronous DAG-based consensus protocol, namely \u2112. We introduce the OPERA chain and Main-chain for faster consensus. By using Lamport timestamps, the topological ordering of event blocks in OPERA chain and Main chain is more intuitive and reliable in distributed system. We introduce a flag table at each block to improve root detection."])),(l()(),e.sb(3290,0,null,null,16,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Further, we have presented a specific Lachesis consensus protocol, called "])),(l()(),e.sb(3292,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(3294,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[", as an example of \u2112. The "])),(l()(),e.sb(3297,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(3299,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" protocol uses a new flag table in each block as a shortcut to check for reachability from an event block to a root along the OPERA chain. The path search is used as a proof of pBFT consensus. In terms of effectiveness, using flag table in "])),(l()(),e.sb(3302,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(3304,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" protocol is more effective for consensus compared to the path searching approaches. To ensure the distribution of participating nodes, the Lachesis protocol defines a new cost function and an algorithm that efficiently and quickly selects peers. We also propose new algorithms for root selection and Clotho block selection based on the flag table; for Atropos selection by Weight after time consensus ordering."])),(l()(),e.sb(3307,0,null,null,6,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Based on the "])),(l()(),e.sb(3309,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["L"])),(l()(),e.sb(3311,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["0"])),(l()(),e.Ib(-1,null,[" protocol and the new consensus algorithm, the OPERA chain can protect against malicious attacks such as forks, double spending, parasite chains, and network control. These protections guarantee the safety of OPERA chain. We can also verify existence of Atropos with the OPERA chain. It concludes that the OPERA chain reaches consensus and guarantees liveliness. Finally, the time ordering ensures guarantee by weight value on the flag table. Based on these properties, the LCA provides a fair, transparent, and effective consensus algorithm."])),(l()(),e.sb(3314,0,null,null,1,"h2",[["id","future-work"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Future work"])),(l()(),e.sb(3316,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["There are a number of directions for future work:"])),(l()(),e.sb(3318,0,null,null,12,"ul",[],null,null,null,null,null)),(l()(),e.sb(3319,0,null,null,8,"li",[],null,null,null,null,null)),(l()(),e.sb(3320,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["With the Lachesis protocols, we are investigating a fast node synchronization algorithm with "])),(l()(),e.sb(3322,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["-neighbor broadcasts. With OPERA chain and "])),(l()(),e.sb(3325,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" peer selection, it is possible to achieve a faster gossip broadcast. We are interested in comparing performance of different gossip strategies, such as randomized gossip, broadcast gossip and collection tree protocol for distributed averaging in wireless sensor networks."])),(l()(),e.sb(3328,0,null,null,2,"li",[],null,null,null,null,null)),(l()(),e.sb(3329,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We are also investigating the semantics of DAG-based protocols in general and Lachesis protocols in particular. We aim to have a formal proof of pBFT using concurrent common knowledge via consistent cuts."])),(l()(),e.sb(3331,0,null,null,1,"h1",[["id","appendix"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Appendix"])),(l()(),e.sb(3333,0,null,null,1,"h2",[["id","proof-of-lachesis-consensus-algorithm"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Proof of Lachesis Consensus Algorithm"])),(l()(),e.sb(3335,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In this section, we provide proof of liveness and safety in OPERA chain and show the Byzantine fault tolerance. To represent the Byzantine fault tolerance, we assume that more than two-thirds of participants are reliable nodes. Based on the assumption, we provide some definitions, lemmas and theorems. Then, we eventually validate the Byzantine fault tolerance."])),(l()(),e.sb(3337,0,null,null,1,"h3",[["id","preliminaries"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Preliminaries"])),(l()(),e.sb(3339,0,null,null,101,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let "])),(l()(),e.sb(3341,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["G"])),(l()(),e.Ib(-1,null,["\u2004=\u2004("])),(l()(),e.sb(3344,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3347,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[") denote directed acyclic graph (DAG). "])),(l()(),e.sb(3350,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["V"])),(l()(),e.Ib(-1,null,[" is a set of vertices and "])),(l()(),e.sb(3353,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["E"])),(l()(),e.Ib(-1,null,[" is a set of edges. DAG is a directed graph with no cycle. Namely, in DAG, there is no path that source and destination at the same vertex. A path is a sequence "])),(l()(),e.sb(3356,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,[" of vertices ("])),(l()(),e.sb(3359,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3361,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(3364,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3366,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[", ..., "])),(l()(),e.sb(3369,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3371,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3372,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["(k-1)"])),(l()(),e.Ib(-1,null,[", "])),(l()(),e.sb(3375,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3377,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3378,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[") that uses no edge more than once. Suppose that we have a current vertex "])),(l()(),e.sb(3381,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3383,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3384,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" and current event block "])),(l()(),e.sb(3387,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3389,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3390,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" respectively. A vertex "])),(l()(),e.sb(3393,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3395,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3396,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" is parent of "])),(l()(),e.sb(3399,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3401,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3402,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is a path from "])),(l()(),e.sb(3405,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3407,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3408,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(3411,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3413,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3414,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["p"])),(l()(),e.Ib(-1,null,[" and the length of path is 1. A vertex "])),(l()(),e.sb(3417,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3419,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3420,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is ancestor of "])),(l()(),e.sb(3423,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3425,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3426,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if there is a path from "])),(l()(),e.sb(3429,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3431,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3432,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(3435,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["v"])),(l()(),e.sb(3437,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3438,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" and the length of path is more than equal to 1."])),(l()(),e.sb(3441,0,null,null,1,"h3",[["id","proof-of-byzantine-fault-tolerance-for-lachesis-consensus-algorithm"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Proof of Byzantine Fault Tolerance for Lachesis Consensus Algorithm"])),(l()(),e.sb(3443,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The machine that participates in the OPERA chain and creates event blocks. The total number of nodes is "])),(l()(),e.sb(3445,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3448,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In OPERA chain, we call a vertex an event block."])),(l()(),e.sb(3450,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(3452,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3454,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3455,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" is self parent of an event block "])),(l()(),e.sb(3458,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3460,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3461,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(3464,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3466,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3467,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["s"])),(l()(),e.Ib(-1,null,[" is parent of "])),(l()(),e.sb(3470,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3472,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3473,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" and both event blocks have same signatures."])),(l()(),e.sb(3476,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(3478,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3480,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3481,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is self ancestor of an event block "])),(l()(),e.sb(3484,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3486,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3487,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" if "])),(l()(),e.sb(3490,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3492,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3493,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" is ancestor of "])),(l()(),e.sb(3496,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3498,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3499,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["c"])),(l()(),e.Ib(-1,null,[" and both event blocks have same signatures."])),(l()(),e.sb(3502,0,null,null,25,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An event block "])),(l()(),e.sb(3504,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3506,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3507,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" Happened-Before an event block "])),(l()(),e.sb(3510,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3512,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3513,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" if there is a path from "])),(l()(),e.sb(3516,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3518,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3519,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" to "])),(l()(),e.sb(3522,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.sb(3524,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3525,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3528,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The first created event blocks (leaf events) become root or an event block "])),(l()(),e.sb(3530,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["e"])),(l()(),e.Ib(-1,null,[" that can reach more than 2n/3 other roots, becomes a root."])),(l()(),e.sb(3533,0,null,null,41,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["All first event blocks (leaf events) are elements of root set "])),(l()(),e.sb(3535,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3537,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[" (|"])),(l()(),e.sb(3540,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3542,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,["| = "])),(l()(),e.sb(3545,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["). And the root set "])),(l()(),e.sb(3548,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3550,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3551,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" is a set of roots such that "])),(l()(),e.sb(3554,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3556,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3557,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" \u2208 "])),(l()(),e.sb(3560,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3562,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3563,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" cannot reach more than 2n/3 other roots in "])),(l()(),e.sb(3566,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.sb(3568,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3569,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" ("])),(l()(),e.sb(3572,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,["\u2004>\u20041)."])),(l()(),e.sb(3575,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Frame "])),(l()(),e.sb(3577,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[" is a natural number that separates Root sets."])),(l()(),e.sb(3580,0,null,null,46,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A root "])),(l()(),e.sb(3582,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3584,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3585,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(3588,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3590,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3591,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20053"])),(l()(),e.Ib(-1,null,[" can nominate a root "])),(l()(),e.sb(3595,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3597,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3598,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" as Clotho if more than 2n/3 roots in the frame "])),(l()(),e.sb(3601,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3603,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3604,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" Happened-Before "])),(l()(),e.sb(3608,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3610,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3611,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3614,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3616,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3617,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["k"])),(l()(),e.Ib(-1,null,[" Happened-Before the roots in the frame "])),(l()(),e.sb(3620,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3622,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3623,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3627,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If the consensus time of Clotho is validated, the Clotho become Atropos."])),(l()(),e.sb(3629,0,null,null,14,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[prop:seen] At least 2n/3 roots in the frame "])),(l()(),e.sb(3631,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3633,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3634,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" Happened-Before at least 2n/3 roots in the frame "])),(l()(),e.sb(3637,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3639,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3640,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3644,0,null,null,69,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The number of roots in each root set is more than 2n/3. Since a root in the frame "])),(l()(),e.sb(3646,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3648,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3649,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" Happened-Before more than 2n/3 roots in the frame "])),(l()(),e.sb(3653,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3655,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3656,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", when the cardinalities of the root sets in the frames "])),(l()(),e.sb(3659,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3661,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3662,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3665,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3667,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3668,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" are n and 2n/3 respectively, the number of paths from root set in the frame "])),(l()(),e.sb(3672,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3674,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3675,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" to root set in the frame "])),(l()(),e.sb(3679,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3681,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3682,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" is at least (2n/3)**"])),(l()(),e.sb(3685,0,null,null,1,"sup",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.Ib(-1,null,[". The average and the maximum of the number of paths from root set in the frame "])),(l()(),e.sb(3688,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3690,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3691,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" to an root in the frame "])),(l()(),e.sb(3695,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3697,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3698,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" are (4n/9) and (2n/3) respectively. Thus, at least 2n/3 roots in the frame "])),(l()(),e.sb(3701,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3703,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3704,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" Happened-Before at least n/3 root in the frame "])),(l()(),e.sb(3707,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3709,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3710,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3714,0,null,null,21,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[prop:share] If a root in the frame "])),(l()(),e.sb(3716,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3718,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3719,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" Happened-Before from more than n/3 roots in the frame "])),(l()(),e.sb(3722,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3724,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3725,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[", the root Happened-Before all roots in the frame "])),(l()(),e.sb(3729,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3731,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3732,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3736,0,null,null,41,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Based on the definition of Root, each root can reach more than 2n/3 other roots in the previous frame. It means that a root in the frame "])),(l()(),e.sb(3738,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3740,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3741,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" should have a number of paths more than 2n/3 to roots in the frame "])),(l()(),e.sb(3745,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3747,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3748,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[". Thus, if a root "])),(l()(),e.sb(3752,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(3755,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3757,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3758,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" Happened-Before more than n/3 roots in the frame "])),(l()(),e.sb(3761,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3763,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3764,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[", all roots in the frame "])),(l()(),e.sb(3768,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3770,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3771,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20052"])),(l()(),e.Ib(-1,null,[" have path to the root "])),(l()(),e.sb(3775,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3778,0,null,null,27,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[lem:share] If a root "])),(l()(),e.sb(3780,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.sb(3782,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3783,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(3786,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3788,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3789,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20053"])),(l()(),e.Ib(-1,null,[" is created, the root in the frame "])),(l()(),e.sb(3793,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3795,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3796,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20053"])),(l()(),e.Ib(-1,null,[" knows that more than 2n/3 roots in the frame "])),(l()(),e.sb(3800,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3802,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3803,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" become known by more than 2n/3 nodes."])),(l()(),e.sb(3806,0,null,null,14,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Based on propositions [prop:seen] and [prop:share], the root in the frame "])),(l()(),e.sb(3808,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3810,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3811,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,["\u2005+\u20053"])),(l()(),e.Ib(-1,null,[" knows that more than 2n/3 roots in the frame "])),(l()(),e.sb(3815,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3817,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3818,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["a"])),(l()(),e.Ib(-1,null,[" become known by more than 2n/3 nodes."])),(l()(),e.sb(3821,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[lem:fork] If the pair of event blocks ("])),(l()(),e.sb(3823,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3826,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") is a fork, roots happened-before at least one fork in OPERA chain. Therefore, they can know fork before becoming Clotho."])),(l()(),e.sb(3829,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Suppose that a node creates two event blocks ("])),(l()(),e.sb(3831,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(3834,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") and the event blocks are a fork. To create two Clotho that can reach each event block in the pair, the event blocks should be shared in more than 2n/3 nodes. Therefore, if there exist fork event blocks, the OPERA chain can structurally detect the fork before roots become Clotho."])),(l()(),e.sb(3837,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[thm:same] All node grows up into same shape in OPERA chain."])),(l()(),e.sb(3839,0,null,null,73,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Suppose that each node "])),(l()(),e.sb(3841,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3844,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" will have a different shape (or a structure). For any two nodes "])),(l()(),e.sb(3847,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3850,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[", there is two event blocks "])),(l()(),e.sb(3853,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3856,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" which are in both "])),(l()(),e.sb(3859,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.sb(3861,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(3864,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(3868,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[") and "])),(l()(),e.sb(3871,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.sb(3873,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(3876,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(3880,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,["). Also, their path between "])),(l()(),e.sb(3883,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and "])),(l()(),e.sb(3886,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in "])),(l()(),e.sb(3889,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.sb(3891,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(3894,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(3898,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[") is not equal to that in "])),(l()(),e.sb(3901,0,null,null,7,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["O"])),(l()(),e.sb(3903,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["P"])),(l()(),e.Ib(-1,null,["E"])),(l()(),e.sb(3906,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,["("])),(l()(),e.sb(3910,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,["). For any two event blocks, if each node has different paths, we can consider that the difference is fork attacks. Based on Lemma [lem:fork], if an attacker forks an event block, the OPERA chain can detect and remove it before the Clotho is generated. It contradicts our assumptions. For this reason, two nodes have consistent OPERA chain."])),(l()(),e.sb(3913,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[lem:root] For any root set "])),(l()(),e.sb(3915,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[", all nodes nominate same root into Clotho."])),(l()(),e.sb(3918,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Based on Theorem [thm:same], each node nominates a root into Clotho via the flag table. If all nodes have an OPERA chain with same shape, the values in flag table should be equal to each other in OPERA chain. Thus, all nodes nominate the same root into Clotho since the OPERA chain of all nodes has same shape."])),(l()(),e.sb(3920,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[lem:resel] In the Reselection algorithm, for any Clotho, a root in OPERA chain selects the same consensus time candidate."])),(l()(),e.sb(3922,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Based on Theorem [thm:same], if all nodes have an OPERA chain with the same partial shape, a root in OPERA chain selects the same consensus time candidate by the Reselection algorithm."])),(l()(),e.sb(3924,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[thm:ct] Lachesis consensus algorithm guarantees to reach agreement for the consensus time."])),(l()(),e.sb(3926,0,null,null,20,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For any root set "])),(l()(),e.sb(3928,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["R"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(3931,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3933,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3934,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[", time consensus algorithm checks whether more than 2n/3 roots in the frame "])),(l()(),e.sb(3937,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3939,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3940,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005\u2212\u20051"])),(l()(),e.Ib(-1,null,[" selects the same value. However, each node selects one of the values collected from the root set in the previous frame by the time consensus algorithm and Reselection process. Based on the Reselection process, the time consensus algorithm can reach agreement. However, there is a possibility that consensus time candidate does not reach agreement . To solve this problem, time consensus algorithm includes minimal selection frame per next "])),(l()(),e.sb(3944,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["h"])),(l()(),e.Ib(-1,null,[" frame. In minimal value selection algorithm, each root selects minimum value among values collected from previous root set. Thus, the consensus time reaches consensus by time consensus algorithm."])),(l()(),e.sb(3947,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[thm:bft] If the number of reliable nodes is more than 2n/3, event blocks created by reliable nodes must be assigned to consensus order."])),(l()(),e.sb(3949,0,null,null,38,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In OPERA chain, since reliable nodes try to create event blocks by communicating with every other nodes continuously, reliable nodes will share the event block "])),(l()(),e.sb(3951,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" with each other. Based on Proposition [prop:seen], if a root "])),(l()(),e.sb(3954,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(3957,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3959,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(3960,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" Happened-Before event block "])),(l()(),e.sb(3963,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and more than 2n/3 roots in the frame "])),(l()(),e.sb(3966,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(3968,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(3969,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" Happened-Before the root "])),(l()(),e.sb(3973,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[", the root "])),(l()(),e.sb(3976,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" will be nominated as Clotho and Atropos. Thus, event block "])),(l()(),e.sb(3979,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" and root "])),(l()(),e.sb(3982,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[" will be assigned consensus time "])),(l()(),e.sb(3985,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,["."])),(l()(),e.sb(3988,0,null,null,39,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["For an event block, assigning consensus time means that the validated event block is shared by more than 2n/3 nodes. Therefore, malicious node cannot try to attack after the event blocks are assigned consensus time. When the event block "])),(l()(),e.sb(3990,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[" has consensus time "])),(l()(),e.sb(3993,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[", it cannot occur to discover new event blocks with earlier consensus time than "])),(l()(),e.sb(3996,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[". There are two conditions to be assigned consensus time earlier than "])),(l()(),e.sb(3999,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t"])),(l()(),e.Ib(-1,null,[" for new event blocks. First, a root "])),(l()(),e.sb(4002,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[" in the frame "])),(l()(),e.sb(4005,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4007,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4008,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,[" should be able to share new event blocks. Second, the more than 2n/3 roots in the frame "])),(l()(),e.sb(4011,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4013,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(4014,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" should be able to share "])),(l()(),e.sb(4018,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["r"])),(l()(),e.Ib(-1,null,[". Even if the first condition is satisfied by malicious nodes (e.g., parasite chain), the second condition cannot be satisfied since at least 2n/3 roots in the frame "])),(l()(),e.sb(4021,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4023,0,null,null,3,"sub",[],null,null,null,null,null)),(l()(),e.sb(4024,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["i"])),(l()(),e.Ib(-1,null,["\u2005+\u20051"])),(l()(),e.Ib(-1,null,[" are already created and cannot be changed. Therefore, after an event block is validated, new event blocks should not be participate earlier consensus time to OPERA chain."])),(l()(),e.sb(4028,0,null,null,1,"h2",[["id","response-to-attacks"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Response to Attacks"])),(l()(),e.sb(4030,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Like all other decentralized blockchain technologies, OPERA chain will likely be subject to attacks by attackers which aim to gain financial profit to damage the system. Here we describe several possible attack scenarios and how the OPERA chain intends to take preventive measures."])),(l()(),e.sb(4032,0,null,null,1,"h3",[["id","transaction-flooding"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Transaction Flooding"])),(l()(),e.sb(4034,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A malicious participant may run a large number of valid transactions from their account under their control with the purpose of overloading the network. In order to prevent such a case, the chain intends to impose a minimal transaction fee. Since there is a transaction fee, the malicious user cannot continue to perform such attacks. Participants who participate in nodes are rewarded, and those who contribute to the ecosystem, such as by running transactions, are continuously rewarded. Such rewards are expected to be adequate in running transactions for appropriate purposes. However, since it would require tremendous cost to perform abnormal attacks, it would be difficult for a malicious attacker to create transaction flooding."])),(l()(),e.sb(4036,0,null,null,1,"h3",[["id","parasite-chain-attack"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Parasite chain attack"])),(l()(),e.sb(4038,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In a DAG-based protocol, a parasite chain can be made with a malicious purpose, attempting connection by making it look like a legitimate event block. When the Main Chain is created, verification for each event block is performed. In the verification process, any event block that is not connected to the Main Chain is deemed to be invalid and is ignored, as in the case of double spending."])),(l()(),e.sb(4040,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We suppose that less than one-third of nodes are malicious. The malicious nodes create a parasite chain. By the root definition, roots are nominated by 2n/3 node awareness. A parasite chain is only shared with malicious nodes that are less than one-third of participating nodes. A parasite chain is unable to generate roots and have a shared consensus time."])),(l()(),e.sb(4042,0,null,null,1,"h3",[["id","double-spending"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Double Spending"])),(l()(),e.sb(4044,0,null,null,55,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A double spend attack is when a malicious entity attempts to spend their funds twice. Entity "])),(l()(),e.sb(4046,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" has 10 tokens, they send 10 tokens to "])),(l()(),e.sb(4049,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" via node "])),(l()(),e.sb(4052,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4054,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4055,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" and 10 tokens to "])),(l()(),e.sb(4058,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" via node "])),(l()(),e.sb(4061,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4063,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4064,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Z"])),(l()(),e.Ib(-1,null,[". Both node "])),(l()(),e.sb(4067,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4069,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4070,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" and node "])),(l()(),e.sb(4073,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4075,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4076,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Z"])),(l()(),e.Ib(-1,null,[" agree that the transaction is valid, since "])),(l()(),e.sb(4079,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" has the funds to send to "])),(l()(),e.sb(4082,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" (according to "])),(l()(),e.sb(4085,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4087,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4088,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[") and "])),(l()(),e.sb(4091,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" (according to "])),(l()(),e.sb(4094,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4096,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4097,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Z"])),(l()(),e.Ib(-1,null,[")."])),(l()(),e.sb(4100,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Consensus is a mechanism whereby multiple distributed parties can reach agreement on the order and state of a sequence of events. Let\u2019s consider the following 3 transactions:"])),(l()(),e.sb(4102,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.sb(4103,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**x"])),(l()(),e.sb(4105,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4106,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[": "])),(l()(),e.sb(4109,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" (starting balance of 10) transfers 10 to "])),(l()(),e.sb(4112,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(4114,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.sb(4115,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**x"])),(l()(),e.sb(4117,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4118,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[": "])),(l()(),e.sb(4121,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" (starting balance of 0) transfers 10 to "])),(l()(),e.sb(4124,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4126,0,null,null,11,"p",[],null,null,null,null,null)),(l()(),e.sb(4127,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**x"])),(l()(),e.sb(4129,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4130,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[": "])),(l()(),e.sb(4133,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,[" (starting balance of 0) transfers 10 to "])),(l()(),e.sb(4136,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.sb(4138,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We consider Node "])),(l()(),e.sb(4140,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4142,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4143,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" received the order "])),(l()(),e.sb(4146,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**x"])),(l()(),e.sb(4148,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4149,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(4151,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**x"])),(l()(),e.sb(4153,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4154,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(4156,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**x"])),(l()(),e.sb(4158,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4159,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4161,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The state of Node "])),(l()(),e.sb(4163,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4165,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4166,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,[" is "])),(l()(),e.sb(4169,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,["\u2004:\u20040, "])),(l()(),e.sb(4172,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,["\u2004:\u20040, "])),(l()(),e.sb(4175,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["\u2004:\u20040, "])),(l()(),e.sb(4178,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,["\u2004:\u200410"])),(l()(),e.sb(4181,0,null,null,22,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Now, we consider Node "])),(l()(),e.sb(4183,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4185,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4186,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" that receives the order "])),(l()(),e.sb(4189,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**x"])),(l()(),e.sb(4191,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4192,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.sb(4194,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**x"])),(l()(),e.sb(4196,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4197,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.sb(4199,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["t**x"])),(l()(),e.sb(4201,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4202,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.sb(4204,0,null,null,19,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The state of Node "])),(l()(),e.sb(4206,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.sb(4208,0,null,null,2,"sub",[],null,null,null,null,null)),(l()(),e.sb(4209,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,[" is "])),(l()(),e.sb(4212,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["A"])),(l()(),e.Ib(-1,null,["\u2004:\u20040, "])),(l()(),e.sb(4215,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["B"])),(l()(),e.Ib(-1,null,["\u2004:\u200410, "])),(l()(),e.sb(4218,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["C"])),(l()(),e.Ib(-1,null,["\u2004:\u20040, "])),(l()(),e.sb(4221,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["D"])),(l()(),e.Ib(-1,null,["\u2004:\u20040"])),(l()(),e.sb(4224,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Consensus ordering gives us a sequence of events."])),(l()(),e.sb(4226,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["If the pair of event blocks ("])),(l()(),e.sb(4228,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(4231,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") has a double spending transaction, the chain can structurally detect the double spend and delay action for the event blocks until the event blocks assign time ordering."])),(l()(),e.sb(4234,0,null,null,36,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Suppose that the pair of event blocks ("])),(l()(),e.sb(4236,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["x"])),(l()(),e.Ib(-1,null,[",\u2006"])),(l()(),e.sb(4239,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["y"])),(l()(),e.Ib(-1,null,[") has same frame "])),(l()(),e.sb(4242,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.sb(4244,0,null,null,1,"sub",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["1"])),(l()(),e.Ib(-1,null,[". Then, all nodes must detect two event blocks before frame "])),(l()(),e.sb(4247,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,["\u2005+\u20052. By the root definition, each root happened-before more than 2"])),(l()(),e.sb(4250,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 previous roots. For this reason, when two roots in "])),(l()(),e.sb(4253,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,["\u2005+\u20051 are selected, they must have happened-before the roots which are more than one-thirds of roots in "])),(l()(),e.sb(4256,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,[". This means that more than 2"])),(l()(),e.sb(4259,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 roots in "])),(l()(),e.sb(4262,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,["\u2005+\u20051 share both two roots which include the pair respectively. With the root definition and previous explanation, all roots in "])),(l()(),e.sb(4265,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,["\u2005+\u20052 share both the pairs. Thus, all nodes detect the double spending event blocks at "])),(l()(),e.sb(4268,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["f"])),(l()(),e.Ib(-1,null,["\u2005+\u20052 or earlier."])),(l()(),e.sb(4271,0,null,null,1,"h3",[["id","long-range-attack"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Long-range attack"])),(l()(),e.sb(4273,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In blockchains an adversary can create another chain. If this chain is longer than the original, the network will accept the longer chain. This mechanism exists to identify which chain has had more work (or stake) involved in its creation."])),(l()(),e.sb(4275,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["2"])),(l()(),e.sb(4277,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 participating nodes are required to create a new chain. To accomplish a long-range attack you would first need to create > 2"])),(l()(),e.sb(4280,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 participating malicious nodes to create the new chain."])),(l()(),e.sb(4283,0,null,null,1,"h3",[["id","bribery-attack"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Bribery attack"])),(l()(),e.sb(4285,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["An adversary could bribe nodes to validate conflicting transactions. Since 2"])),(l()(),e.sb(4287,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 participating nodes are required, this would require the adversary to bribe > 1"])),(l()(),e.sb(4290,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 of all nodes to begin a bribery attack."])),(l()(),e.sb(4293,0,null,null,1,"h3",[["id","denial-of-service"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Denial of Service"])),(l()(),e.sb(4295,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["LCA is a leaderless system requiring 2"])),(l()(),e.sb(4297,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 participation. An adversary would have to deny > 1"])),(l()(),e.sb(4300,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 participants to be able to successfully mount a DDoS attack."])),(l()(),e.sb(4303,0,null,null,1,"h3",[["id","sybil"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Sybil"])),(l()(),e.sb(4305,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Each participating node must stake a minimum amount of FTM to participate in the network. Being able to stake 2"])),(l()(),e.sb(4307,0,null,null,1,"em",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["n"])),(l()(),e.Ib(-1,null,["/3 total stake would be prohibitively expensive."])),(l()(),e.sb(4310,0,null,null,1,"h1",[["id","reference"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Reference"]))],null,null)}function M(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-lachesis-design",[],null,null,null,z,q)),e.rb(1,49152,null,0,W,[],null,null)],null,null)}var V=e.ob("app-lachesis-design",W,M,{},{},[]),$=function(){return function(){}}(),K=e.qb({encapsulation:2,styles:[],data:{}});function Z(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"h1",[["id","usage"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Usage"])),(l()(),e.sb(2,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["In this section we will guide you through deploying an application on top of Lachesis. Lachesis comes with the Dummy application which is used in this demonstration. It is a simple chat application where participants write messages on a channel and Lachesis guarantees that everyone sees the same messages in the same order."])),(l()(),e.sb(4,0,null,null,1,"h2",[["id","docker"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Docker"])),(l()(),e.sb(6,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We have provided a series of scripts to bootstrap a demo. Let us first use the easy method to view the demo and then we will take a closer look at what is happening behind the scenes. "])),(l()(),e.sb(8,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Make sure you have "])),(l()(),e.sb(10,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Docker <https://docker.com>"])),(l()(),e.Ib(-1,null,["__ installed. "])),(l()(),e.sb(13,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The demo will pull Docker images from our "])),(l()(),e.sb(15,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["official public Docker registry <https://hub.docker.com/u/andrecronje/>"])),(l()(),e.Ib(-1,null,["__ "])),(l()(),e.sb(18,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(19,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[...]/lachesis$ cd demo\n[...]/lachesis/demo$ make\n"])),(l()(),e.sb(21,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Once the testnet is started, a script is automatically launched to monitor consensus figures: "])),(l()(),e.sb(23,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(24,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["consensus_events:180 consensus_transactions:40 events_per_second:0.00 id:1 last_block_index:3 last_consensus_round:17 num_peers:3 round_events:7 rounds_per_second:0.00 state:Babbling sync_rate:1.00 transaction_pool:0 undetermined_events:18\nconsensus_events:180 consensus_transactions:40 events_per_second:0.00 id:3 last_block_index:3 last_consensus_round:17 num_peers:3 round_events:7 rounds_per_second:0.00 state:Babbling sync_rate:1.00 transaction_pool:0 undetermined_events:20\nconsensus_events:180 consensus_transactions:40 events_per_second:0.00 id:2 last_block_index:3 last_consensus_round:17 num_peers:3 round_events:7 rounds_per_second:0.00 state:Babbling sync_rate:1.00 transaction_pool:0 undetermined_events:21\nconsensus_events:180 consensus_transactions:40 events_per_second:0.00 id:0 last_block_index:3 last_consensus_round:17 num_peers:3 round_events:7 rounds_per_second:0.00 state:Babbling sync_rate:1.00 transaction_pool:0 undetermined_events:20\n"])),(l()(),e.sb(26,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Running "])),(l()(),e.sb(28,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["docker ps -a"])),(l()(),e.Ib(-1,null,[" will show you that 9 docker containers have been launched: "])),(l()(),e.sb(31,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(32,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,['[...]/lachesis/demo$ docker ps -a\nCONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS              PORTS                   NAMES\nba80ef275f22        andrecronje/watcher   "/watch.sh"              48 seconds ago      Up 7 seconds                                watcher\n4620ed62a67d        andrecronje/dummy     "dummy \'--name=client"   49 seconds ago      Up 48 seconds       1339/tcp                client4\n847ea77bd7fc        andrecronje/lachesis    "lachesis run --cache_s"   50 seconds ago      Up 49 seconds       80/tcp, 1337-1338/tcp   node4\n11df03bf9690        andrecronje/dummy     "dummy \'--name=client"   51 seconds ago      Up 50 seconds       1339/tcp                client3\n00af002747ca        andrecronje/lachesis    "lachesis run --cache_s"   52 seconds ago      Up 50 seconds       80/tcp, 1337-1338/tcp   node3\nb2011d3d65bb        andrecronje/dummy     "dummy \'--name=client"   53 seconds ago      Up 51 seconds       1339/tcp                client2\ne953b50bc1db        andrecronje/lachesis    "lachesis run --cache_s"   53 seconds ago      Up 52 seconds       80/tcp, 1337-1338/tcp   node2\n0c9dd65de193        andrecronje/dummy     "dummy \'--name=client"   54 seconds ago      Up 53 seconds       1339/tcp                client1\nd1f4e5008d4d        andrecronje/lachesis    "lachesis run --cache_s"   55 seconds ago      Up 54 seconds       80/tcp, 1337-1338/tcp   node1\n'])),(l()(),e.sb(34,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Indeed, each node is comprised of an App and a Lachesis node (cf Design section).\nThe "])),(l()(),e.sb(36,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["watcher"])),(l()(),e.Ib(-1,null,[" container monitors consensus figures."])),(l()(),e.sb(39,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Run the "])),(l()(),e.sb(41,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["demo"])),(l()(),e.Ib(-1,null,[" script to play with the "])),(l()(),e.sb(44,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Dummy App"])),(l()(),e.Ib(-1,null,[" which is a simple chat application\npowered by the Lachesis consensus platform:"])),(l()(),e.sb(47,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(48,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[...]/lachesis/demo$ make demo\n"])),(l()(),e.sb(50,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[".. image:: assets/demo.png"])),(l()(),e.sb(52,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Finally, stop the testnet:"])),(l()(),e.sb(54,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(55,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["[...]/lachesis/demo$ make stop\n"])),(l()(),e.sb(57,0,null,null,1,"h2",[["id","manual-setup"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Manual Setup"])),(l()(),e.sb(59,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The above scripts hide a lot of the complications involved in setting up a Lachesis network. They generate the configuration files automatically, copy them to the right places and launch the nodes in Docker containers. We recommend looking at these scripts closely to understand how the demo works. Here, we will attempt to explain the individual steps that take place behind the scenes."])),(l()(),e.sb(61,0,null,null,1,"h2",[["id","configuration"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Configuration"])),(l()(),e.sb(63,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis reads configuration from the directory specified by the "])),(l()(),e.sb(65,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["datadir"])),(l()(),e.Ib(-1,null,[" flag which defaults to "])),(l()(),e.sb(68,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["~/.lachesis"])),(l()(),e.Ib(-1,null,[" on linux/osx. This directory must contain two files:"])),(l()(),e.sb(71,0,null,null,8,"ul",[],null,null,null,null,null)),(l()(),e.sb(72,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(73,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["peers.json"])),(l()(),e.Ib(-1,null,[" : Lists all the participants in the network."])),(l()(),e.sb(76,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(77,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["priv_key.pem"])),(l()(),e.Ib(-1,null,[": Contains the private key of the validator running the node. "])),(l()(),e.sb(80,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Every participant has a cryptographic key-pair that is used to encrypt, sign and verify messages. The private key is secret but the public key is used by other nodes to verify messages signed with the private key. The encryption scheme used by Lachesis is ECDSA with the P256 curve."])),(l()(),e.sb(82,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["To run a Lachesis network, it is necessary to predefine who the participants are going to be. Each participant will generate a key-pair and decide which network address it is going to be using for the Lachesis protocol. Someone, or some process, then needs to aggregate the public keys and network addresses of all participants into a single file - the peers.json file. Every participant uses a copy of the same peers.json file. Lachesis will read that file to identify the participants in the network, communicate with them and verify their cryptographic signatures."])),(l()(),e.sb(84,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["To generate key-pairs in a format usable by Lachesis, we have created the "])),(l()(),e.sb(86,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["keygen"])),(l()(),e.Ib(-1,null,[" command. It is left to the user to derive a scheme to produce the configuration files but the docker demo scripts are a good place to start."])),(l()(),e.sb(89,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["So let us say I want to participate in a Lachesis network. I am going to start by running "])),(l()(),e.sb(91,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["lachesis keygen"])),(l()(),e.Ib(-1,null,[" to create a key-pair:"])),(l()(),e.sb(94,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["::"])),(l()(),e.sb(96,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" lachesis keygen Your private key has been saved to: /home/martin/.lachesis/priv_key.pem Your public key has been saved to: /home/martin/.lachesis/key.pub"])),(l()(),e.sb(98,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["The private key looks something like this:"])),(l()(),e.sb(100,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["::"])),(l()(),e.sb(102,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" -----BEGIN EC PRIVATE KEY----- MHcCAQEEIJ3orqofiSXu07mD+f46gZFK3EKSTqhXsbLVmA/aLmyqoAoGCCqGSM49 AwEHoUQDQgAEXgNNc8hJdWrntlFcpg2WpakRsTpNi0W8DgsC7bRQCd9szAdO6298 Z5V0D5k2ZO3ulw+KcXyJNE+EN/QSvfDRfA== -----END EC PRIVATE KEY-----"])),(l()(),e.sb(104,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["and the corresponding public key looks like this:"])),(l()(),e.sb(106,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["::"])),(l()(),e.sb(108,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" 0x045E034D73C849756AE7B6515CA60D96A5A911B13A4D8B45BC0E0B02EDB45009DF6CCC074EEB6F7C6795740F993664EDEE970F8A717C89344F8437F412BDF0D17C"])),(l()(),e.sb(110,0,null,null,2,"p",[],null,null,null,null,null)),(l()(),e.sb(111,0,null,null,1,"strong",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["DO NOT REUSE THESE KEYS"])),(l()(),e.sb(113,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Next, I am going to copy the public key (key.pub) and communicate it to whoever is responsible for producing the peers.json file. At the same time, I will tell them that I am going to be listening on 172.77.5.2:1337."])),(l()(),e.sb(115,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Suppose three other people do the same thing. The resulting peers.json file could look something like this:"])),(l()(),e.sb(117,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(118,0,null,null,1,"code",[["class","lang-json"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,['[\n    {\n        "NetAddr":"172.77.5.1:1337",\n        "PubKeyHex":"0x0471AEE3CAE4E8442D37C9F5481FB32C4531511988652DF923B79ED4ED992021183D31E0F6FBFE96D89B6D03D7250292DFECD4FC414D83A5C38FA3FAD0D8572864"\n    },\n    {\n        "NetAddr":"172.77.5.2:1337",\n        "PubKeyHex":"0x045E034D73C849756AE7B6515CA60D96A5A911B13A4D8B45BC0E0B02EDB45009DF6CCC074EEB6F7C6795740F993664EDEE970F8A717C89344F8437F412BDF0D17C"\n    },\n    {\n        "NetAddr":"172.77.5.3:1337",\n        "PubKeyHex":"0x047CCCD40D90B331C64CE27911D3A31AF7DC16C1EA6D570FDC2120920663E0A678D7B5D0C19B6A77FEA829F8198F4F487B68206B93B7AD17D7C49CA7E0164D0033"\n    },\n    {\n        "NetAddr":"172.77.5.4:1337",\n        "PubKeyHex":"0x0406CB5043E7337700E3B154993C872B1C61A84B1A739528C4A10135A3D64939C094B4A999BD21C3D5E9E9ECF15B202414F073795C9483B2F51ADA7EE59EB5EAC4"\n    }\n]\n'])),(l()(),e.sb(120,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Now everyone is going to take a copy of this peers.json file and put it in a folder together with the priv_key.pem file they generated in the previous step. That is the folder that they need to specify as the datadir when they run Lachesis."])),(l()(),e.sb(122,0,null,null,1,"h2",[["id","lachesis-executable"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Lachesis Executable"])),(l()(),e.sb(124,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Let us take a look at the help provided by the Lachesis CLI:"])),(l()(),e.sb(126,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["::"])),(l()(),e.sb(128,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" Run node"])),(l()(),e.sb(130,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[" Usage: lachesis run [flags]"])),(l()(),e.sb(132,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,[' Flags: --cache-size int Number of items in LRU caches (default 500) -c, --client-connect string IP:Port to connect to client (default "127.0.0.1:1339") --datadir string Top-level directory for configuration and data (default "/home/martin/.lachesis") --heartbeat duration Time between gossips (default 1s) -h, --help help for run -l, --listen string Listen IP:Port for lachesis node (default ":1337") --log string debug, info, warn, error, fatal, panic --max-pool int Connection pool size max (default 2) -p, --proxy-listen string Listen IP:Port for lachesis proxy (default "127.0.0.1:1338") -s, --service-listen string Listen IP:Port for HTTP service --standalone Do not create a proxy --store Use badgerDB instead of in-mem DB --sync-limit int Max number of events for sync (default 100) -t, --timeout duration TCP Timeout (default 1s)'])),(l()(),e.sb(134,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["So we have just seen what the "])),(l()(),e.sb(136,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["datadir"])),(l()(),e.Ib(-1,null,[" flag does. The "])),(l()(),e.sb(139,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["listen"])),(l()(),e.Ib(-1,null,[" flag corresponds to the NetAddr in the peers.json file; that is the endpoint that Lachesis uses to communicate with other Lachesis nodes."])),(l()(),e.sb(142,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["As we explained in the architecture section, each Lachesis node works in conjunction with an application for which it orders transactions. When Lachesis and the application are connected by a TCP interface, we specify two other endpoints:"])),(l()(),e.sb(144,0,null,null,8,"ul",[],null,null,null,null,null)),(l()(),e.sb(145,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(146,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["proxy-listen"])),(l()(),e.Ib(-1,null,[" : where Lachesis listens for transactions from the App"])),(l()(),e.sb(149,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(150,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["client-connect"])),(l()(),e.Ib(-1,null,[" : where the App listens for transactions from Lachesis "])),(l()(),e.sb(153,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["We can also specify where Lachesis exposes its HTTP API providing information on the Poset and Blockchain data store. This is controlled by the optional "])),(l()(),e.sb(155,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["service-listen"])),(l()(),e.Ib(-1,null,[" flag."])),(l()(),e.sb(158,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Finally, we can choose to run Lachesis with a database backend or only with an in-memory cache. With the "])),(l()(),e.sb(160,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["store"])),(l()(),e.Ib(-1,null,[" flag set, Lachesis will look for a database file in "])),(l()(),e.sb(163,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["datadir"])),(l()(),e.Ib(-1,null,["/babdger_db. If the file exists, the node will load the database and bootstrap itself to a state consistent with the database and it will be able to proceed with the consensus algorithm from there. If the file does not exist yet, it will be created and the node will start from a clean state. "])),(l()(),e.sb(166,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Here is how the Docker demo starts Lachesis nodes together wth the Dummy application:"])),(l()(),e.sb(168,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["::"])),(l()(),e.sb(170,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(171,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,['for i in $(seq 1 $N)\ndo\n    docker run -d --name=client$i --net=lachesisnet --ip=172.77.5.$(($N+$i)) -it andrecronje/dummy:0.4.0 \\\n    --name="client $i" \\\n    --client-listen="172.77.5.$(($N+$i)):1339" \\\n    --proxy-connect="172.77.5.$i:1338" \\\n    --discard \\\n    --log="debug" \ndone\n\nfor i in $(seq 1 $N)\ndo\n    docker create --name=node$i --net=lachesisnet --ip=172.77.5.$i andrecronje/lachesis:0.4.0 run \\\n    --cache-size=50000 \\\n    --timeout=200ms \\\n    --heartbeat=10ms \\\n    --listen="172.77.5.$i:1337" \\\n    --proxy-listen="172.77.5.$i:1338" \\\n    --client-connect="172.77.5.$(($N+$i)):1339" \\\n    --service-listen="172.77.5.$i:80" \\\n    --sync-limit=1000 \\\n    --store \\\n    --log="debug"\n\n    docker cp $MPWD/conf/node$i node$i:/.lachesis\n    docker start node$i\ndone\n'])),(l()(),e.sb(173,0,null,null,1,"h2",[["id","stats-blocks-and-logs"]],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Stats, blocks and Logs"])),(l()(),e.sb(175,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Once a node is up and running, we can call the "])),(l()(),e.sb(177,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["stats"])),(l()(),e.Ib(-1,null,[" endpoint exposed by the HTTP service:"])),(l()(),e.sb(180,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["::"])),(l()(),e.sb(182,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(183,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["curl -s http://172.77.5.1:80/stats\n"])),(l()(),e.sb(185,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["or request to see a specific block:"])),(l()(),e.sb(187,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["::"])),(l()(),e.sb(189,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(190,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["curl -s http://172.77.5.1:80/block/1\n"])),(l()(),e.sb(192,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["Or we can look at the logs produced by Lachesis:"])),(l()(),e.sb(194,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["::"])),(l()(),e.sb(196,0,null,null,2,"pre",[],null,null,null,null,null)),(l()(),e.sb(197,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),e.Ib(-1,null,["docker logs node1\n"]))],null,null)}function U(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-usage",[],null,null,null,Z,K)),e.rb(1,49152,null,0,$,[],null,null)],null,null)}var Y=e.ob("app-usage",$,U,{},{},[]),X=u("ZYCi"),J=u("Ip0R"),Q=function(){return function(){}}(),ll=e.qb({encapsulation:2,styles:[],data:{}});function nl(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,36,"ul",[],null,null,null,null,null)),(l()(),e.sb(1,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(2,0,null,null,2,"a",[["routerLink","api"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var s=!0;return"click"===n&&(s=!1!==e.Cb(l,3).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&s),s},null,null)),e.rb(3,671744,null,0,X.p,[X.n,X.a,J.h],{routerLink:[0,"routerLink"]},null),(l()(),e.Ib(-1,null,["api"])),(l()(),e.sb(5,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(6,0,null,null,2,"a",[["routerLink","architecture-results"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var s=!0;return"click"===n&&(s=!1!==e.Cb(l,7).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&s),s},null,null)),e.rb(7,671744,null,0,X.p,[X.n,X.a,J.h],{routerLink:[0,"routerLink"]},null),(l()(),e.Ib(-1,null,["architecture-results"])),(l()(),e.sb(9,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(10,0,null,null,2,"a",[["routerLink","architecture"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var s=!0;return"click"===n&&(s=!1!==e.Cb(l,11).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&s),s},null,null)),e.rb(11,671744,null,0,X.p,[X.n,X.a,J.h],{routerLink:[0,"routerLink"]},null),(l()(),e.Ib(-1,null,["architecture"])),(l()(),e.sb(13,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(14,0,null,null,2,"a",[["routerLink","core-components"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var s=!0;return"click"===n&&(s=!1!==e.Cb(l,15).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&s),s},null,null)),e.rb(15,671744,null,0,X.p,[X.n,X.a,J.h],{routerLink:[0,"routerLink"]},null),(l()(),e.Ib(-1,null,["core-components"])),(l()(),e.sb(17,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(18,0,null,null,2,"a",[["routerLink","framework"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var s=!0;return"click"===n&&(s=!1!==e.Cb(l,19).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&s),s},null,null)),e.rb(19,671744,null,0,X.p,[X.n,X.a,J.h],{routerLink:[0,"routerLink"]},null),(l()(),e.Ib(-1,null,["framework"])),(l()(),e.sb(21,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(22,0,null,null,2,"a",[["routerLink","home"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var s=!0;return"click"===n&&(s=!1!==e.Cb(l,23).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&s),s},null,null)),e.rb(23,671744,null,0,X.p,[X.n,X.a,J.h],{routerLink:[0,"routerLink"]},null),(l()(),e.Ib(-1,null,["home"])),(l()(),e.sb(25,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(26,0,null,null,2,"a",[["routerLink","installing-lachesis"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var s=!0;return"click"===n&&(s=!1!==e.Cb(l,27).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&s),s},null,null)),e.rb(27,671744,null,0,X.p,[X.n,X.a,J.h],{routerLink:[0,"routerLink"]},null),(l()(),e.Ib(-1,null,["installing-lachesis"])),(l()(),e.sb(29,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(30,0,null,null,2,"a",[["routerLink","lachesis-design"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var s=!0;return"click"===n&&(s=!1!==e.Cb(l,31).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&s),s},null,null)),e.rb(31,671744,null,0,X.p,[X.n,X.a,J.h],{routerLink:[0,"routerLink"]},null),(l()(),e.Ib(-1,null,["lachesis-design"])),(l()(),e.sb(33,0,null,null,3,"li",[],null,null,null,null,null)),(l()(),e.sb(34,0,null,null,2,"a",[["routerLink","usage"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var s=!0;return"click"===n&&(s=!1!==e.Cb(l,35).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&s),s},null,null)),e.rb(35,671744,null,0,X.p,[X.n,X.a,J.h],{routerLink:[0,"routerLink"]},null),(l()(),e.Ib(-1,null,["usage"]))],function(l,n){l(n,3,0,"api"),l(n,7,0,"architecture-results"),l(n,11,0,"architecture"),l(n,15,0,"core-components"),l(n,19,0,"framework"),l(n,23,0,"home"),l(n,27,0,"installing-lachesis"),l(n,31,0,"lachesis-design"),l(n,35,0,"usage")},function(l,n){l(n,2,0,e.Cb(n,3).target,e.Cb(n,3).href),l(n,6,0,e.Cb(n,7).target,e.Cb(n,7).href),l(n,10,0,e.Cb(n,11).target,e.Cb(n,11).href),l(n,14,0,e.Cb(n,15).target,e.Cb(n,15).href),l(n,18,0,e.Cb(n,19).target,e.Cb(n,19).href),l(n,22,0,e.Cb(n,23).target,e.Cb(n,23).href),l(n,26,0,e.Cb(n,27).target,e.Cb(n,27).href),l(n,30,0,e.Cb(n,31).target,e.Cb(n,31).href),l(n,34,0,e.Cb(n,35).target,e.Cb(n,35).href)})}function ul(l){return e.Kb(0,[(l()(),e.sb(0,0,null,null,1,"app-list",[],null,null,null,nl,ll)),e.rb(1,49152,null,0,Q,[],null,null)],null,null)}var el=e.ob("app-list",Q,ul,{},{},[]);u.d(n,"GeneratedModuleNgFactory",function(){return sl});var sl=e.pb(s,[],function(l){return e.zb([e.Ab(512,e.j,e.db,[[8,[b.a,I,d,y,C,D,S,_,V,Y,el]],[3,e.j],e.x]),e.Ab(4608,J.m,J.l,[e.u,[2,J.y]]),e.Ab(1073742336,J.c,J.c,[]),e.Ab(1073742336,X.q,X.q,[[2,X.w],[2,X.n]]),e.Ab(1073742336,s,s,[]),e.Ab(1024,X.l,function(){return[[{path:"api",component:t},{path:"architecture-results",component:r},{path:"architecture",component:p},{path:"core-components",component:w},{path:"framework",component:x},{path:"home",component:R},{path:"installing-lachesis",component:O},{path:"lachesis-design",component:W},{path:"usage",component:$},{path:"",component:Q}]]},[])])})}}]);